{
  "openapi": "3.0.1",
  "info": {
    "title": "Contracting Works Api v3",
    "description": "Server build number: <b>20230815.1</b>",
    "version": "v3"
  },
  "paths": {
    "/v3/client/{clientid}/Address/Upsert": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Create or update a list of addresses. (Auth)",
        "operationId": "Upsert",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddressDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Address/GetNotSynced": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/MaxCustomerIdForChangedCustomerAddressContactAggregates": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": " (Auth)",
        "operationId": "MaxCustomerIdForChangedCustomerAddressContactAggregates",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxRowVersionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/GetCustomerIdsForChangedCustomerAddressContactAggregates": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": " (Auth)",
        "operationId": "GetCustomerIdsForChangedCustomerAddressContactAggregates",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "atMost",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toRowVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetCustomerIdsForChangedCustomerAddressContactAggregatesResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/GetMaxRowversionForChangedAssignmentDimensionUseAggregates": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": " (Auth)",
        "operationId": "GetMaxRowversionForChangedAssignmentDimensionUseAggregates",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaxRowVersionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/GetAssignmentIdsForChangedAssignmentDimensionUseAggregates": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": " (Auth)",
        "operationId": "GetAssignmentIdsForChangedAssignmentDimensionUseAggregates",
        "parameters": [
          {
            "name": "rowVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "atMost",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toRowVersion",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAssignmentIdsForChangedAssignmentDimensionUseAggregatesResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/DailyMaintenance": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Performs daily maintenance on the client (Auth roles: cwdeveloper, cwmaintenance)",
        "operationId": "DailyMaintenance",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyMaintenanceRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyMaintenanceRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DailyMaintenanceRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyMaintenanceResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/DeleteOldHistory": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Removes history rows up to a specific date. (Auth roles: cwdeveloper, cwmaintenance)",
        "operationId": "DeleteOldHistory",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOldHistoryRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOldHistoryRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOldHistoryRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteOldHistoryResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/TransferFeaturesFromAdmin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Transfer feature information from admin to client db.\r\nInformation in client db will be lost, and replaced with admin db information about features. (Auth)",
        "operationId": "TransferFeaturesFromAdmin",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/LastRowVersions": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Request last row version per table name. Note; the casing and spelling\r\nof table name has to be correct. Customer works, customer or Customers will not. (Auth)",
        "operationId": "LastRowVersions",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LastRowVersionsRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LastRowVersionsRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LastRowVersionsRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LastRowVersionsResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Admin/GetErrorMessages": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": " (Auth)",
        "operationId": "GetErrorMessages",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminGetRowErrorMessagesParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminGetRowErrorMessagesParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminGetRowErrorMessagesParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminGetRowErrorMessagesResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Appointment/Upsert": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Create or update a list of appointments. (Auth)",
        "operationId": "Upsert2",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppointmentDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Appointment/GetNotSynced": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/RecalculateServices": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Recalculate services for specific assignment (Auth)",
        "operationId": "RecalculateServices",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentServiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentServiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/Recalculate": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Recalculate product note prices for specific assignment (Auth)",
        "operationId": "Recalculate",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculateAssignmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculateAssignmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculateAssignmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecalculateAssignmentDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/Upsert": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Create or update a list of assignments. (Auth)",
        "operationId": "Upsert3",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/PrepareAttachmentUpload": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Accepts AssignmentId, Creates blob with write SAS token and saves meta data for attachment (Auth)",
        "operationId": "PrepareAttachmentUpload",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentAttachmentUploadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentAttachmentUploadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentAttachmentUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/PrepareAttachmentUploadById": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Accepts AttachmentId, Creates blob with write SAS token and updates meta data on that attachment (Auth)",
        "operationId": "PrepareAttachmentUploadById",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Attachment for which we are preparing upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/Copy": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "Copy",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCopyParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCopyParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCopyParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentCopyResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/CopyDimensionsFromProject": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": "Copying dimensions to a single assignment from its project (Auth)",
        "description": "Intended for internal use and is subject to change without notification",
        "operationId": "CopyDimensionsFromProject",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCopyDimensionsFromProjectParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCopyDimensionsFromProjectParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCopyDimensionsFromProjectParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentCopyDimensionsFromProjectResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/GetErrorCount": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "GetErrorCount",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetErrorCountParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetErrorCountParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetErrorCountParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentGetErrorCountResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/GetNotSynced": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced3",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/ResetHistoric": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "ResetHistoric",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentResetHistoricParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentResetHistoricParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentResetHistoricParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/GetNotSyncedParticipant": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedParticipant",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentParticipantGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentParticipantGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentParticipantGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentParticipantGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/GetNotSyncedContact": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedContact",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/GetNotSyncedAddress": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedAddress",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/Report_MonthlySummary": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "Report_MonthlySummary",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentReportMonthlySummaryParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentReportMonthlySummaryParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentReportMonthlySummaryParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentReportMonthlySummaryResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/Report_DimensionSummary": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "Report_DimensionSummary",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentReportDimensionSummaryParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentReportDimensionSummaryParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentReportDimensionSummaryParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentReportDimensionSummaryResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/ProjectReport": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "ProjectReport",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentProjectReportParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentProjectReportParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentProjectReportParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentProjectReportResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/GetDefaults": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "GetDefaults",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetDefaultsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetDefaultsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGetDefaultsParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentGetDefaultsResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Assignment/InvoiceReserveAdjustment": {
      "post": {
        "tags": [
          "Assignment"
        ],
        "summary": " (Auth)",
        "operationId": "InvoiceReserveAdjustment",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentInvoiceReserveAdjustmentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentInvoiceReserveAdjustmentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentInvoiceReserveAdjustmentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/AssignmentCategory/Upsert": {
      "post": {
        "tags": [
          "AssignmentCategory"
        ],
        "summary": "Create or update a list of assignmentCategories. (Auth)",
        "operationId": "Upsert4",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentCategoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentCategoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentCategoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/AssignmentCategory/GetNotSynced": {
      "post": {
        "tags": [
          "AssignmentCategory"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced4",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCategoryGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCategoryGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCategoryGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentCategoryGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/AssignmentCategory/PreProcess": {
      "post": {
        "tags": [
          "AssignmentCategory"
        ],
        "summary": "Preprocess/validate AssignmentCategory record before saving. (Auth)",
        "operationId": "PreProcess",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified AssignmentCategory with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCategoryPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCategoryPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCategoryPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/AssignmentMOM/Upsert": {
      "post": {
        "tags": [
          "AssignmentMOM"
        ],
        "summary": "Create or update a list of assignmentMOMs. (Auth)",
        "operationId": "Upsert5",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentMOMDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentMOMDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssignmentMOMDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentMOMUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentMOMUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Attachment/PrepareAttachmentDownload": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Creates SAS access token for attachment (Auth)",
        "operationId": "PrepareAttachmentDownload",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentDownloadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentDownloadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentDownloadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Attachment/Delete": {
      "delete": {
        "tags": [
          "Attachment"
        ],
        "summary": "Attachment hard delete (Auth)",
        "operationId": "Delete",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentDownloadDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentDownloadDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentDownloadDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentDownloadDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Attachment/Upsert": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": "Create or update a list of attachments. (Auth)",
        "operationId": "Upsert6",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Attachment/GetNotSynced": {
      "post": {
        "tags": [
          "Attachment"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced5",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/AttachmentCategory/Upsert": {
      "post": {
        "tags": [
          "AttachmentCategory"
        ],
        "summary": "Create or update a list of attachmentCategories. (Auth)",
        "operationId": "Upsert7",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentCategoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentCategoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttachmentCategoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/BoligmappaAttachment/Upsert": {
      "post": {
        "tags": [
          "BoligmappaAttachment"
        ],
        "summary": "Create or update a list of boligmappaAttachments. (Auth)",
        "operationId": "Upsert8",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoligmappaAttachmentDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoligmappaAttachmentDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoligmappaAttachmentDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoligmappaAttachmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BoligmappaAttachmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/BoligmappaAttachment/GetNotSyncedAttachment": {
      "post": {
        "tags": [
          "BoligmappaAttachment"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedAttachment",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Budget/Upsert": {
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Create or update a list of budgets. (Auth)",
        "operationId": "Upsert9",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/BudgetLine/Upsert": {
      "post": {
        "tags": [
          "BudgetLine"
        ],
        "summary": "Create or update a list of budgetLines. (Auth)",
        "operationId": "Upsert10",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetLineDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetLineDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetLineDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetLineUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetLineUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/BudgetScenario/Upsert": {
      "post": {
        "tags": [
          "BudgetScenario"
        ],
        "summary": "Create or update a list of budgetScenarios. (Auth)",
        "operationId": "Upsert11",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetScenarioDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetScenarioDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetScenarioDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetScenarioUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BudgetScenarioUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Contact/Upsert": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create or update a list of contacts. (Auth)",
        "operationId": "Upsert12",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Contact/GetNotSynced": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced6",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ContactMessage/Upsert": {
      "post": {
        "tags": [
          "ContactMessage"
        ],
        "summary": "Create or update a list of contactMessages. (Auth)",
        "operationId": "Upsert13",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactMessageDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactMessageDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactMessageDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactMessageUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactMessageUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Country/Upsert": {
      "post": {
        "tags": [
          "Country"
        ],
        "summary": "Create or update a list of countries. (Auth)",
        "operationId": "Upsert14",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CountryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CountryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CountryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomDashboard/GetDashboard": {
      "post": {
        "tags": [
          "CustomDashboard"
        ],
        "summary": " (Auth)",
        "operationId": "GetDashboard",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Customer/Upsert": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create or update a list of customers. (Auth)",
        "operationId": "Upsert15",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Customer/PrepareAttachmentUpload": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Accepts CustomerId, Creates blob with write SAS token and saves meta data for attachment (Auth)",
        "operationId": "PrepareAttachmentUpload2",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAttachmentUploadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAttachmentUploadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAttachmentUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Customer/PrepareAttachmentUploadById": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Accepts AttachmentId, Creates blob with write SAS token and updates meta data on that attachment (Auth)",
        "operationId": "PrepareAttachmentUploadById2",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Attachment for which we are preparing upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Customer/GetNotSynced": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced7",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Customer/GetNotSyncedAddress": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedAddress2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Customer/GetNotSyncedContact": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedContact2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/SendInvoice": {
      "post": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "SendInvoice",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvoiceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendInvoiceResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/GetInvoice": {
      "get": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetInvoice",
        "parameters": [
          {
            "name": "InvoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvoiceResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/GetInvoiceLines": {
      "get": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetInvoiceLines",
        "parameters": [
          {
            "name": "InvoiceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceLine"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/CancelInvoice": {
      "put": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "CancelInvoice",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceCancelResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/SaveInvoice": {
      "post": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "SaveInvoice",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInvoiceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInvoiceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SaveInvoiceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveInvoiceResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/SetInvoiceStatus": {
      "put": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "SetInvoiceStatus",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetInvoiceStatusCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetInvoiceStatusCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetInvoiceStatusCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetInvoiceStatusResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/UpsertInvoiceLine": {
      "post": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "UpsertInvoiceLine",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertCustomInvoiceLineCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertCustomInvoiceLineCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertCustomInvoiceLineCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomInvoiceLineDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/ImportInvoice": {
      "post": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "ImportInvoice",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportInvoiceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportInvoiceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportInvoiceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/CreateCreditNote": {
      "post": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "CreateCreditNote",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/InsertInvoiceLines_Session": {
      "post": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "InsertInvoiceLines_Session",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "dev-client-tom"
            }
          },
          {
            "name": "sessionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InsertInvoiceLines_SessionDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InsertInvoiceLines_SessionDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InsertInvoiceLines_SessionDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomInvoice/DeleteInvoiceLine": {
      "delete": {
        "tags": [
          "CustomInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "DeleteInvoiceLine",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteInvoiceLineCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteInvoiceLineCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteInvoiceLineCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomService/Upsert": {
      "post": {
        "tags": [
          "CustomService"
        ],
        "summary": "Create or update a list of services. (Auth)",
        "operationId": "Upsert16",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/CustomService/ReprocessErrors": {
      "post": {
        "tags": [
          "CustomService"
        ],
        "summary": " (Auth)",
        "operationId": "ReprocessErrors",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReprocessErrorsCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReprocessErrorsCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReprocessErrorsCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Department/Upsert": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Create or update a list of departments. (Auth)",
        "operationId": "Upsert17",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DepartmentDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DepartmentDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DepartmentDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Department/GetNotSynced": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced8",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Department/PreProcess": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Preprocess/validate Department record before saving. (Auth)",
        "operationId": "PreProcess2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified Department with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/GetDimensionValues": {
      "get": {
        "tags": [
          "Dimension"
        ],
        "summary": "Get all dimension values (Auth)",
        "operationId": "GetDimensionValues",
        "parameters": [
          {
            "name": "dimensionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionValueAgGridResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/GetDimensionsForEntity": {
      "get": {
        "tags": [
          "Dimension"
        ],
        "summary": "Get dimensions with activity information for specific assignment or project (Auth)",
        "operationId": "GetDimensionsForEntity",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dimensionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dimensionFilter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DimensionFilter"
            }
          },
          {
            "name": "onlyInvoiceable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionForEntityResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/GetDimensionValuesForEntity": {
      "get": {
        "tags": [
          "Dimension"
        ],
        "summary": "Get dimension values with activity information for specific assignment or project and specific dimension (Auth)",
        "operationId": "GetDimensionValuesForEntity",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dimensionValueId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dimensionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionValueForEntityResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/GetDimensionsMetadata": {
      "get": {
        "tags": [
          "Dimension"
        ],
        "summary": "Get dimension column meta data for specific entity type\r\nSupported entity types: Service, ProductNoteLine and Invoice (Auth)",
        "operationId": "GetDimensionsMetadata",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "entityName",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EntityNameForDimension"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetDimensionsMetaDataResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/Upsert": {
      "post": {
        "tags": [
          "Dimension"
        ],
        "summary": "Create or update a list of dimensions. (Auth)",
        "operationId": "Upsert18",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomDimensionDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomDimensionDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomDimensionDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionUpsertResultDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionUpsertResultDto"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/Copy": {
      "post": {
        "tags": [
          "Dimension"
        ],
        "summary": " (Auth)",
        "operationId": "Copy2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionCopyParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionCopyParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionCopyParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionCopyResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/GetNotSynced": {
      "post": {
        "tags": [
          "Dimension"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced9",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/GetNotSyncedValue": {
      "post": {
        "tags": [
          "Dimension"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedValue",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionValueGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionValueGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionValueGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionValueGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Dimension/GetNotSyncedAssignmentDimensionValue": {
      "post": {
        "tags": [
          "Dimension"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedAssignmentDimensionValue",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionValueGetNotSyncedAssignmentDimensionParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionValueGetNotSyncedAssignmentDimensionParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DimensionValueGetNotSyncedAssignmentDimensionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionValueGetNotSyncedAssignmentDimensionResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/DimensionUse/Upsert": {
      "post": {
        "tags": [
          "DimensionUse"
        ],
        "summary": "Create or update a list of dimensionUses. (Auth)",
        "operationId": "Upsert19",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DimensionUseDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DimensionUseDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DimensionUseDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionUseUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionUseUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/DimensionValueUse/Upsert": {
      "post": {
        "tags": [
          "DimensionValueUse"
        ],
        "summary": "Create or update a list of dimensionValueUses. (Auth)",
        "operationId": "Upsert20",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DimensionValueUseDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DimensionValueUseDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DimensionValueUseDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionValueUseUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DimensionValueUseUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/DiscountGroup/Upsert": {
      "post": {
        "tags": [
          "DiscountGroup"
        ],
        "summary": "Create or update a list of discountGroups. (Auth)",
        "operationId": "Upsert21",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountGroupDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountGroupDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountGroupDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Employee/Upsert": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create or update a list of employees. (Auth)",
        "operationId": "Upsert22",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Employee/PrepareAttachmentUpload": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Accepts EmployeeId, Creates blob with write SAS token and saves meta data for attachment (Auth)",
        "operationId": "PrepareAttachmentUpload3",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeAttachmentUploadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeAttachmentUploadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeAttachmentUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Employee/PrepareAttachmentUploadById": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Accepts AttachmentId, Creates blob with write SAS token and updates meta data on that attachment (Auth)",
        "operationId": "PrepareAttachmentUploadById3",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Attachment for which we are preparing upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Employee/GetNotSynced": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced10",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Employee/GetNotSyncedAddress": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedAddress3",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/EmployeeInvoiceCategory/Upsert": {
      "post": {
        "tags": [
          "EmployeeInvoiceCategory"
        ],
        "summary": "Create or update a list of employeeInvoiceCategories. (Auth)",
        "operationId": "Upsert23",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeInvoiceCategoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeInvoiceCategoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeInvoiceCategoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInvoiceCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInvoiceCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/EmployeeInvoiceCategory/GetNotSynced": {
      "post": {
        "tags": [
          "EmployeeInvoiceCategory"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced11",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInvoiceCategoryGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInvoiceCategoryGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInvoiceCategoryGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeInvoiceCategoryGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/EmployeeInvoiceCategory/PreProcess": {
      "post": {
        "tags": [
          "EmployeeInvoiceCategory"
        ],
        "summary": "Preprocess/validate EmployeeInvoiceCategory record before saving. (Auth)",
        "operationId": "PreProcess3",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified EmployeeInvoiceCategory with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInvoiceCategoryPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInvoiceCategoryPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeInvoiceCategoryPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/UpdateSyncRequestedStatusToCache": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": "This endpoint updates the status of syncs in the common cache (Auth)",
        "operationId": "UpdateSyncRequestedStatusToCache",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSyncRequestedStatusToCacheRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSyncRequestedStatusToCacheRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSyncRequestedStatusToCacheRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/Upsert": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": "Create or update a list of externalSystems. (Auth)",
        "operationId": "Upsert24",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalSystemDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalSystemDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExternalSystemDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalSystemUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalSystemUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/CheckAnySyncNeeded": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "CheckAnySyncNeeded",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemCheckAnySyncNeededParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemCheckAnySyncNeededParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemCheckAnySyncNeededParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalSystemCheckAnySyncNeededResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/CheckSyncNeeded": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "CheckSyncNeeded",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemCheckSyncNeededParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemCheckSyncNeededParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemCheckSyncNeededParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalSystemCheckSyncNeededResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/ConfigureSpeedyCraft": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "ConfigureSpeedyCraft",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemConfigureSpeedyCraftParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemConfigureSpeedyCraftParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemConfigureSpeedyCraftParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/ResetSyncFlag": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "ResetSyncFlag",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemResetSyncFlagParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemResetSyncFlagParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemResetSyncFlagParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/GetOrCreateExternalSystemID": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "GetOrCreateExternalSystemID",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetOrCreateExternalSystemIDParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetOrCreateExternalSystemIDParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetOrCreateExternalSystemIDParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalSystemGetOrCreateExternalSystemIDResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/RequestSync": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "RequestSync",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemRequestSyncParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemRequestSyncParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemRequestSyncParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/GetSyncStatus": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "GetSyncStatus",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetSyncStatusParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetSyncStatusParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetSyncStatusParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalSystemGetSyncStatusResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/GetSyncStatusAll": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "GetSyncStatusAll",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetSyncStatusAllParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetSyncStatusAllParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemGetSyncStatusAllParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalSystemGetSyncStatusAllResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ExternalSystem/SyncAllRequested": {
      "post": {
        "tags": [
          "ExternalSystem"
        ],
        "summary": " (Auth)",
        "operationId": "SyncAllRequested",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemSyncAllRequestedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemSyncAllRequestedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSystemSyncAllRequestedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Feature/GetEnabledFeatures": {
      "post": {
        "tags": [
          "Feature"
        ],
        "summary": " (Auth)",
        "operationId": "GetEnabledFeatures",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ImportFile/Upsert": {
      "post": {
        "tags": [
          "ImportFile"
        ],
        "summary": "Create or update a list of importFiles. (Auth)",
        "operationId": "Upsert25",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportFileDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportFileDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportFileDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportFileUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportFileUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IndexRateGroup/Upsert": {
      "post": {
        "tags": [
          "IndexRateGroup"
        ],
        "summary": "Create or update a list of indexRateGroups. (Auth)",
        "operationId": "Upsert26",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndexRateGroupDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndexRateGroupDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndexRateGroupDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexRateGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexRateGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IndustryType/Upsert": {
      "post": {
        "tags": [
          "IndustryType"
        ],
        "summary": "Create or update a list of industryTypes. (Auth)",
        "operationId": "Upsert27",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndustryTypeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndustryTypeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IndustryTypeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndustryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndustryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IndustryType/GetNotSynced": {
      "post": {
        "tags": [
          "IndustryType"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced12",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryTypeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryTypeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryTypeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndustryTypeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IndustryType/PreProcess": {
      "post": {
        "tags": [
          "IndustryType"
        ],
        "summary": "Preprocess/validate IndustryType record before saving. (Auth)",
        "operationId": "PreProcess4",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified IndustryType with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryTypePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryTypePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IndustryTypePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IntegratedSystemConfig/Upsert": {
      "post": {
        "tags": [
          "IntegratedSystemConfig"
        ],
        "summary": "Create or update a list of integratedSystemConfigs. (Auth)",
        "operationId": "Upsert28",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegratedSystemConfigDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegratedSystemConfigDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegratedSystemConfigDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegratedSystemConfigUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegratedSystemConfigUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Integration/ValidateToken": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "This endpoint is made for integration wizard and it will simulate integration token validation. \r\nIt is made only for testing purpose. Later we will add more functionality. (Auth)",
        "operationId": "ValidateToken",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Integration/Temp_SpeedycraftGetSkeletonIds": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "This endpoint is made for sc integration to fetch ids that need to be created in SC from CW\r\nIt is a temorary endpoint (Auth)",
        "operationId": "Temp_SpeedycraftGetSkeletonIds",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSpeedycraftGetSkeletonIdsToSyncParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSpeedycraftGetSkeletonIdsToSyncParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationSpeedycraftGetSkeletonIdsToSyncParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Integration/GetSyncEvents": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "This endpoint returns sync events requested for integration (Auth)",
        "operationId": "GetSyncEvents",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationGetSyncEventsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationGetSyncEventsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationGetSyncEventsParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationGetSyncEventsResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Integration/RemoveSyncEvents": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "This endpoint removes passed synced events (Auth)",
        "operationId": "RemoveSyncEvents",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationRemoveSyncEventsParameters"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationRemoveSyncEventsParameters"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationRemoveSyncEventsParameters"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Integration/GetIntegrationSyncStatusFromCache": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "This endpoint returns the status of syncs from the common cache (Auth)",
        "operationId": "GetIntegrationSyncStatusFromCache",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetIntegrationSyncStatusFromCacheRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetIntegrationSyncStatusFromCacheRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetIntegrationSyncStatusFromCacheRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IntegrationStatus/Upsert": {
      "post": {
        "tags": [
          "IntegrationStatus"
        ],
        "summary": "Create or update a list of integrationStatuses. (Auth)",
        "operationId": "Upsert29",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationStatusDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationStatusDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationStatusDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationStatusUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationStatusUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IntegrationStatus/Incoming_MoveAndProcess": {
      "post": {
        "tags": [
          "IntegrationStatus"
        ],
        "summary": " (Auth)",
        "operationId": "Incoming_MoveAndProcess",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IntegrationStatus_Incoming/Upsert": {
      "post": {
        "tags": [
          "IntegrationStatus_Incoming"
        ],
        "summary": "Create or update a list of integrationStatus_Incomings. (Auth)",
        "operationId": "Upsert30",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationStatus_IncomingDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationStatus_IncomingDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IntegrationStatus_IncomingDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationStatus_IncomingUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationStatus_IncomingUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/IntegrationStatus_Incoming/Incoming_MoveAndProcess": {
      "post": {
        "tags": [
          "IntegrationStatus_Incoming"
        ],
        "summary": " (Auth)",
        "operationId": "Incoming_MoveAndProcess2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationStatusIncomingMoveAndProcessResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/Upsert": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create or update a list of invoices. (Auth)",
        "operationId": "Upsert31",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/PrepareAttachmentUpload": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Accepts InvoiceId, Creates blob with write SAS token and saves meta data for attachment (Auth)",
        "operationId": "PrepareAttachmentUpload4",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAttachmentUploadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAttachmentUploadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAttachmentUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/PrepareAttachmentUploadById": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Accepts AttachmentId, Creates blob with write SAS token and updates meta data on that attachment (Auth)",
        "operationId": "PrepareAttachmentUploadById4",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Attachment for which we are preparing upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/CalculateTotals": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "CalculateTotals",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCalculateTotalsParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCalculateTotalsParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCalculateTotalsParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceCalculateTotalsResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/Cancel": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "Cancel",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceCancelResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/ExecuteDimensionInvoiceTemplate": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "ExecuteDimensionInvoiceTemplate",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteDimensionInvoiceTemplateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteDimensionInvoiceTemplateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteDimensionInvoiceTemplateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceExecuteDimensionInvoiceTemplateResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/ExecuteInvoiceRule": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "ExecuteInvoiceRule",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteInvoiceRuleParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteInvoiceRuleParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteInvoiceRuleParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceExecuteInvoiceRuleResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/ExecuteInvoiceTemplate": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "ExecuteInvoiceTemplate",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteInvoiceTemplateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteInvoiceTemplateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExecuteInvoiceTemplateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceExecuteInvoiceTemplateResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/GetNotSynced": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced13",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/UpdateProductNoteLine": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "UpdateProductNoteLine",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateProductNoteLineParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateProductNoteLineParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpdateProductNoteLineParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceUpdateProductNoteLineResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/UpsertInvoiceLine_Session": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "UpsertInvoiceLine_Session",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpsertInvoiceLineSessionParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpsertInvoiceLineSessionParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceUpsertInvoiceLineSessionParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceUpsertInvoiceLineSessionResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/GetNotSyncedLine": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedLine",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceLineGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/PreProcessLine": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Preprocess/validate InvoiceLine record before saving. (Auth)",
        "operationId": "PreProcessLine",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified InvoiceLine with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLinePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLinePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLinePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/ImportInvoiceWithData": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "ImportInvoiceWithData",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportInvoiceWithDataCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportInvoiceWithDataCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportInvoiceWithDataCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/GetInvoiceLinesByRule": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetInvoiceLinesByRule",
        "parameters": [
          {
            "name": "AssignmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InvoiceLineRuleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "VATFree",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/CreateInvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "CreateInvoice",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/CancelInvoice": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "CancelInvoice2",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCancelParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceCancelResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": true,
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/CreateCreditNote": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "CreateCreditNote2",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Invoice/PreProcessInvoiceLine": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": " (Auth)",
        "operationId": "PreProcessInvoiceLine",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreProcessInvoiceLineCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PreProcessInvoiceLineCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PreProcessInvoiceLineCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/InvoiceLineRule/Upsert": {
      "post": {
        "tags": [
          "InvoiceLineRule"
        ],
        "summary": "Create or update a list of invoiceLineRules. (Auth)",
        "operationId": "Upsert32",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceLineRuleDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceLineRuleDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceLineRuleDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceLineRuleUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceLineRuleUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/InvoiceLineRule/GetNotSynced": {
      "post": {
        "tags": [
          "InvoiceLineRule"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced14",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineRuleGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineRuleGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineRuleGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceLineRuleGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/InvoiceLineRule/PreProcess": {
      "post": {
        "tags": [
          "InvoiceLineRule"
        ],
        "summary": "Preprocess/validate InvoiceLineRule record before saving. (Auth)",
        "operationId": "PreProcess5",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified InvoiceLineRule with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineRulePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineRulePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceLineRulePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/InvoiceLineRule/SetInvoiceLineRuleWageCodeTypes": {
      "post": {
        "tags": [
          "InvoiceLineRule"
        ],
        "summary": " (Auth)",
        "operationId": "SetInvoiceLineRuleWageCodeTypes",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetInvoiceLineRuleWageCodeTypesCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetInvoiceLineRuleWageCodeTypesCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetInvoiceLineRuleWageCodeTypesCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/InvoiceTemplate/Upsert": {
      "post": {
        "tags": [
          "InvoiceTemplate"
        ],
        "summary": "Create or update a list of invoiceTemplates. (Auth)",
        "operationId": "Upsert33",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceTemplateDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceTemplateDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceTemplateDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceTemplateUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvoiceTemplateUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/InvoiceTemplate/PreProcess": {
      "post": {
        "tags": [
          "InvoiceTemplate"
        ],
        "summary": "Preprocess/validate InvoiceTemplate record before saving. (Auth)",
        "operationId": "PreProcess6",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified InvoiceTemplate with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceTemplatePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceTemplatePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceTemplatePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/JobCategory/Upsert": {
      "post": {
        "tags": [
          "JobCategory"
        ],
        "summary": "Create or update a list of jobCategories. (Auth)",
        "operationId": "Upsert34",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobCategoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobCategoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobCategoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/JobCategory/GetNotSynced": {
      "post": {
        "tags": [
          "JobCategory"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced15",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobCategoryGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JobCategoryGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JobCategoryGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobCategoryGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/JobCategory/PreProcess": {
      "post": {
        "tags": [
          "JobCategory"
        ],
        "summary": "Preprocess/validate JobCategory record before saving. (Auth)",
        "operationId": "PreProcess7",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified JobCategory with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobCategoryPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JobCategoryPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JobCategoryPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/LedgerAccount/Upsert": {
      "post": {
        "tags": [
          "LedgerAccount"
        ],
        "summary": "Create or update a list of ledgerAccounts. (Auth)",
        "operationId": "Upsert35",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LedgerAccountDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LedgerAccountDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LedgerAccountDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LedgerAccountUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LedgerAccountUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/LedgerAccount/GetNotSynced": {
      "post": {
        "tags": [
          "LedgerAccount"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced16",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerAccountGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LedgerAccountGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/MapData/Upsert": {
      "post": {
        "tags": [
          "MapData"
        ],
        "summary": "Create or update a list of mapDatas. (Auth)",
        "operationId": "Upsert36",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MapDataDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MapDataDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MapDataDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MapDataUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MapDataUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/MapData/Prepare": {
      "post": {
        "tags": [
          "MapData"
        ],
        "summary": "Initialize the MapData table with all entities the user need to make mapping decisions on. (Auth)",
        "description": "This fills in the MapData table with relevant records from the client db                                            \\\r\nin practice, after calling it, the MapData table is ready to be presented.                                          \\\r\n                                                                                                                    \\\r\nThis method will remember final user choices, and can safely be called                         \\\r\nagain when there are changes in the mapped data either in MapDataValue or any of the corresponding registers in CW. \\\r\n                                                                                                                    \\\r\n**Note:** the MapDataIDs might change between runs, but the users selection will be retained across IDs.            \\\r\nIf \"clearExistingData\" is true, the current user choices will be discarded.                                         \\\r\n                                                                                                                    \\\r\nMapDataValueID will be auto set if an exact match is found.                     \\\r\nSuggested_MapDataValueID will always be set and reflect the best detected match if one is found.                    \\\r\nPartial and fuzzy matches are supported.                                                                            \\\r\n                                                                                                                    \\\r\nSuggested_MapDataValueID is intended to show the best possble match at any given time, while                        \\\r\nMapDataValueID contains real choices made.                                                                          \\\r\nThe latter is auto set when matches are exact as a time-saving feature for end-users.",
        "operationId": "Prepare",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapDataPrepareParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MapDataPrepareParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MapDataPrepareParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/MapDataValue/Upsert": {
      "post": {
        "tags": [
          "MapDataValue"
        ],
        "summary": "Create or update a list of mapDataValues. (Auth)",
        "operationId": "Upsert37",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MapDataValueDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MapDataValueDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MapDataValueDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MapDataValueUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MapDataValueUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/PaymentTerm/Upsert": {
      "post": {
        "tags": [
          "PaymentTerm"
        ],
        "summary": "Create or update a list of paymentTerms. (Auth)",
        "operationId": "Upsert38",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentTermDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentTermDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentTermDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentTermUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentTermUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/PaymentTerm/GetNotSynced": {
      "post": {
        "tags": [
          "PaymentTerm"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced17",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTermGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTermGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTermGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentTermGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Permission/Upsert": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Create or update a list of permissions. (Auth)",
        "operationId": "Upsert39",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PermissionDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Product/Upsert": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create or update a list of products. (Auth)",
        "operationId": "Upsert40",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Product/GetNotSynced": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced18",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Product/PreProcess": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Preprocess/validate Product record before saving. (Auth)",
        "operationId": "PreProcess8",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified Product with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Product/UpsertWithSupplierIndustryType": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": " (Auth)",
        "operationId": "UpsertWithSupplierIndustryType",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpsertWithSupplierIndustryTypeParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpsertWithSupplierIndustryTypeParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpsertWithSupplierIndustryTypeParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUpsertWithSupplierIndustryTypeResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductAgreement/Upsert": {
      "post": {
        "tags": [
          "ProductAgreement"
        ],
        "summary": "Create or update a list of productAgreements. (Auth)",
        "operationId": "Upsert41",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAgreementDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAgreementDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductAgreementDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAgreementUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAgreementUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductAgreement/GetNotSynced": {
      "post": {
        "tags": [
          "ProductAgreement"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced19",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAgreementGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductAgreement/PreProcess": {
      "post": {
        "tags": [
          "ProductAgreement"
        ],
        "summary": "Preprocess/validate ProductAgreement record before saving. (Auth)",
        "operationId": "PreProcess9",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified ProductAgreement with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductAgreement/GetNotSyncedDetail": {
      "post": {
        "tags": [
          "ProductAgreement"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedDetail",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementDetailGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementDetailGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductAgreementDetailGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductAgreementDetailGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductImportFileSet/Upsert": {
      "post": {
        "tags": [
          "ProductImportFileSet"
        ],
        "summary": "Create or update a list of productImportFileSets. (Auth)",
        "operationId": "Upsert42",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductImportFileSetDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductImportFileSetDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductImportFileSetDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductImportFileSetUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductImportFileSetUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/CalculatePriceForProductPicker": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": "Get prices for specified assignment and product supplier industry types (Auth)",
        "operationId": "CalculatePriceForProductPicker",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculatePriceForProductPickerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculatePriceForProductPickerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculatePriceForProductPickerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalculatePriceForProductPickerResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/Upsert": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": "Create or update a list of productNotes. (Auth)",
        "operationId": "Upsert43",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductNoteDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductNoteDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductNoteDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/PrepareAttachmentUpload": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": "Accepts ProductNoteId, Creates blob with write SAS token and saves meta data for attachment (Auth)",
        "operationId": "PrepareAttachmentUpload5",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteAttachmentUploadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteAttachmentUploadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteAttachmentUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/PrepareAttachmentUploadById": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": "Accepts AttachmentId, Creates blob with write SAS token and updates meta data on that attachment (Auth)",
        "operationId": "PrepareAttachmentUploadById5",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Attachment for which we are preparing upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/GetNotSynced": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced20",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/MoveToAssignment": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": " (Auth)",
        "operationId": "MoveToAssignment",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToAssignmentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToAssignmentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToAssignmentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteMoveToAssignmentResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/MoveToStorage": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": " (Auth)",
        "operationId": "MoveToStorage",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToStorageParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToStorageParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToStorageParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteMoveToStorageResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/PreProcessProductNoteLine": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": " (Auth)",
        "operationId": "PreProcessProductNoteLine",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/GetNotSyncedLine": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedLine2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/MoveLinesToAssignment": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": " (Auth)",
        "operationId": "MoveLinesToAssignment",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductNote/MoveLinesToAssignmentOrStorage": {
      "post": {
        "tags": [
          "ProductNote"
        ],
        "summary": " (Auth)",
        "operationId": "MoveLinesToAssignmentOrStorage",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentOrStorageParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentOrStorageParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentOrStorageParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteMoveLinesToAssignmentOrStorageResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductSupplierIndustryType/Upsert": {
      "post": {
        "tags": [
          "ProductSupplierIndustryType"
        ],
        "summary": "Create or update a list of productSupplierIndustryTypes. (Auth)",
        "operationId": "Upsert44",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSupplierIndustryTypeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSupplierIndustryTypeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSupplierIndustryTypeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSupplierIndustryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSupplierIndustryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductSupplierIndustryType/GetNotSynced": {
      "post": {
        "tags": [
          "ProductSupplierIndustryType"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced21",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSupplierIndustryTypeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSupplierIndustryTypeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSupplierIndustryTypeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSupplierIndustryTypeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProductSync/Upsert": {
      "post": {
        "tags": [
          "ProductSync"
        ],
        "summary": "Create or update a list of productSyncs. (Auth)",
        "operationId": "Upsert45",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSyncDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSyncDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductSyncDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSyncUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductSyncUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Project/Upsert": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create or update a list of projects. (Auth)",
        "operationId": "Upsert46",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Project/PrepareAttachmentUpload": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Accepts ProjectId, Creates blob with write SAS token and saves meta data for attachment (Auth)",
        "operationId": "PrepareAttachmentUpload6",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAttachmentUploadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAttachmentUploadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAttachmentUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Project/PrepareAttachmentUploadById": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Accepts AttachmentId, Creates blob with write SAS token and updates meta data on that attachment (Auth)",
        "operationId": "PrepareAttachmentUploadById6",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Attachment for which we are preparing upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Project/GetNotSynced": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced22",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Project/PreProcess": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Preprocess/validate Project record before saving. (Auth)",
        "operationId": "PreProcess10",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified Project with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Project/GetNotSyncedContact": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedContact3",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectAccount/Upsert": {
      "post": {
        "tags": [
          "ProjectAccount"
        ],
        "summary": "Create or update a list of projectAccounts. (Auth)",
        "operationId": "Upsert47",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectAccount/GetNotSynced": {
      "post": {
        "tags": [
          "ProjectAccount"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced23",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAccountGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAccountGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAccountGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectAccount/PreProcess": {
      "post": {
        "tags": [
          "ProjectAccount"
        ],
        "summary": "Preprocess/validate ProjectAccount record before saving. (Auth)",
        "operationId": "PreProcess11",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified ProjectAccount with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAccountPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAccountPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectAccountPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectAccountCategory/Upsert": {
      "post": {
        "tags": [
          "ProjectAccountCategory"
        ],
        "summary": "Create or update a list of projectAccountCategories. (Auth)",
        "operationId": "Upsert48",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountCategoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountCategoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountCategoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectAccountReportCategory/Upsert": {
      "post": {
        "tags": [
          "ProjectAccountReportCategory"
        ],
        "summary": "Create or update a list of projectAccountReportCategories. (Auth)",
        "operationId": "Upsert49",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountReportCategoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountReportCategoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountReportCategoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountReportCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountReportCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectAccountReportCategoryType/Upsert": {
      "post": {
        "tags": [
          "ProjectAccountReportCategoryType"
        ],
        "summary": "Create or update a list of projectAccountReportCategoryTypes. (Auth)",
        "operationId": "Upsert50",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountReportCategoryTypeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountReportCategoryTypeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectAccountReportCategoryTypeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountReportCategoryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAccountReportCategoryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectGroup/Upsert": {
      "post": {
        "tags": [
          "ProjectGroup"
        ],
        "summary": "Create or update a list of projectGroups. (Auth)",
        "operationId": "Upsert51",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectGroupDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectGroup/GetNotSynced": {
      "post": {
        "tags": [
          "ProjectGroup"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced24",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectGroupGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectGroupGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectGroupGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectGroupGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectPeriod/Upsert": {
      "post": {
        "tags": [
          "ProjectPeriod"
        ],
        "summary": "Create or update a list of projectPeriods. (Auth)",
        "operationId": "Upsert52",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectPeriodDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectPeriodDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectPeriodDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPeriodUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectPeriodUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectReport/Upsert": {
      "post": {
        "tags": [
          "ProjectReport"
        ],
        "summary": "Create or update a list of projectReports. (Auth)",
        "operationId": "Upsert53",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectReportDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectReportDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectReportDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReportUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReportUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectReport/PreProcess": {
      "post": {
        "tags": [
          "ProjectReport"
        ],
        "summary": "Preprocess/validate ProjectReport record before saving. (Auth)",
        "operationId": "PreProcess12",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified ProjectReport with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectReportPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectReportPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectReportPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectType/Upsert": {
      "post": {
        "tags": [
          "ProjectType"
        ],
        "summary": "Create or update a list of projectTypes. (Auth)",
        "operationId": "Upsert54",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectTypeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectTypeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectTypeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ProjectType/GetNotSynced": {
      "post": {
        "tags": [
          "ProjectType"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced25",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTypeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTypeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTypeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTypeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/PurchaseAgreement/Upsert": {
      "post": {
        "tags": [
          "PurchaseAgreement"
        ],
        "summary": "Create or update a list of purchaseAgreements. (Auth)",
        "operationId": "Upsert55",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchaseAgreementDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchaseAgreementDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchaseAgreementDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseAgreementUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseAgreementUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Role/Upsert": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create or update a list of roles. (Auth)",
        "operationId": "Upsert56",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/RolePermission/Upsert": {
      "post": {
        "tags": [
          "RolePermission"
        ],
        "summary": "Create or update a list of rolePermissions. (Auth)",
        "operationId": "Upsert57",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RolePermissionDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RolePermissionDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RolePermissionDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RolePermissionUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RolePermissionUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Service/Upsert": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create or update a list of services. (Auth)",
        "operationId": "Upsert58",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Service/GetNotSynced": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced26",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Service/MoveToAssignment": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": " (Auth)",
        "operationId": "MoveToAssignment2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceMoveToAssignmentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceMoveToAssignmentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceMoveToAssignmentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceMoveToAssignmentResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Service/PreProcess": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Preprocess/validate Service record before saving. (Auth)",
        "operationId": "PreProcess13",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified Service with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServicePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ServiceAgreement/Upsert": {
      "post": {
        "tags": [
          "ServiceAgreement"
        ],
        "summary": "Create or update a list of serviceAgreements. (Auth)",
        "operationId": "Upsert59",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceAgreementDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceAgreementDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceAgreementDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceAgreementUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceAgreementUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ServiceAgreement/GetNotSynced": {
      "post": {
        "tags": [
          "ServiceAgreement"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced27",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceAgreementGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ServiceAgreement/PreProcess": {
      "post": {
        "tags": [
          "ServiceAgreement"
        ],
        "summary": "Preprocess/validate ServiceAgreement record before saving. (Auth)",
        "operationId": "PreProcess14",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified ServiceAgreement with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ServiceAgreement/GetNotSyncedDetail": {
      "post": {
        "tags": [
          "ServiceAgreement"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedDetail2",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementDetailGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementDetailGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementDetailGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceAgreementDetailGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ServiceAgreement/PreProcessDetail": {
      "post": {
        "tags": [
          "ServiceAgreement"
        ],
        "summary": "Preprocess/validate ServiceAgreementDetail record before saving. (Auth)",
        "operationId": "PreProcessDetail",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified ServiceAgreementDetail with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementDetailPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementDetailPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceAgreementDetailPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/ServiceContract/Upsert": {
      "post": {
        "tags": [
          "ServiceContract"
        ],
        "summary": "Create or update a list of serviceContracts. (Auth)",
        "operationId": "Upsert60",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceContractDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceContractDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceContractDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceContractUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceContractUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Settings_Assignment/Upsert": {
      "post": {
        "tags": [
          "Settings_Assignment"
        ],
        "summary": "Create or update a list of settings_Assignments. (Auth)",
        "operationId": "Upsert61",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_AssignmentDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_AssignmentDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_AssignmentDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_AssignmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_AssignmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Settings_Main/Upsert": {
      "post": {
        "tags": [
          "Settings_Main"
        ],
        "summary": "Create or update a list of settings_Mains. (Auth)",
        "operationId": "Upsert62",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_MainDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_MainDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_MainDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_MainUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_MainUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Settings_ProductImport/Upsert": {
      "post": {
        "tags": [
          "Settings_ProductImport"
        ],
        "summary": "Create or update a list of settings_ProductImports. (Auth)",
        "operationId": "Upsert63",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_ProductImportDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_ProductImportDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_ProductImportDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_ProductImportUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_ProductImportUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Settings_User/Upsert": {
      "post": {
        "tags": [
          "Settings_User"
        ],
        "summary": "Create or update a list of settings_Users. (Auth)",
        "operationId": "Upsert64",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_UserDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_UserDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Settings_UserDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_UserUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Settings_UserUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Stock/Upsert": {
      "post": {
        "tags": [
          "Stock"
        ],
        "summary": "Create or update a list of stocks. (Auth)",
        "operationId": "Upsert65",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Stock/GetNotSynced": {
      "post": {
        "tags": [
          "Stock"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced28",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/StockCount/Upsert": {
      "post": {
        "tags": [
          "StockCount"
        ],
        "summary": "Create or update a list of stockCounts. (Auth)",
        "operationId": "Upsert66",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockCountDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockCountUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockCountUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/StockAdjustment": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "Adjust product quantity and price on specific storage (Auth)",
        "operationId": "StockAdjustment",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockAdjustmentParameters"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockAdjustmentParameters"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockAdjustmentParameters"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/Upsert": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": "Create or update a list of storages. (Auth)",
        "operationId": "Upsert67",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/GetNotSynced": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced29",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StorageGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/GetNotSyncedStock": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedStock",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/GetNotSyncedStockTransaction": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedStockTransaction",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransactionGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockTransactionGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/StockTransfer": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": " (Auth)",
        "operationId": "StockTransfer",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransferParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransferParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockTransferParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/StorageTransfer": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": " (Auth)",
        "operationId": "StorageTransfer",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockStorageTransferParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockStorageTransferParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockStorageTransferParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/Adjustment_PreProcess": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": " (Auth)",
        "operationId": "Adjustment_PreProcess",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockAdjustmentPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockAdjustmentPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockAdjustmentPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockAdjustmentPreProcessResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Storage/UpdateAverageCostPrice": {
      "post": {
        "tags": [
          "Storage"
        ],
        "summary": " (Auth)",
        "operationId": "UpdateAverageCostPrice",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockUpdateAverageCostPriceParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockUpdateAverageCostPriceParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockUpdateAverageCostPriceParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/StorageTransfer/Upsert": {
      "post": {
        "tags": [
          "StorageTransfer"
        ],
        "summary": "Create or update a list of storageTransfers. (Auth)",
        "operationId": "Upsert68",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageTransferDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageTransferDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageTransferDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageTransferUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageTransferUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Supplier/Upsert": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Create or update a list of suppliers. (Auth)",
        "operationId": "Upsert69",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Supplier/GetNotSynced": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced30",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Supplier/GetNotSyncedAddress": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedAddress4",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddressGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierIndustryType/Upsert": {
      "post": {
        "tags": [
          "SupplierIndustryType"
        ],
        "summary": "Create or update a list of supplierIndustryTypes. (Auth)",
        "operationId": "Upsert70",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierIndustryTypeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierIndustryTypeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierIndustryTypeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierIndustryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierIndustryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierIndustryType/GetNotSynced": {
      "post": {
        "tags": [
          "SupplierIndustryType"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced31",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierIndustryTypeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierIndustryType/PreProcess": {
      "post": {
        "tags": [
          "SupplierIndustryType"
        ],
        "summary": "Preprocess/validate SupplierIndustryType record before saving. (Auth)",
        "operationId": "PreProcess15",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified SupplierIndustryType with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierIndustryType/ProductDeactivate": {
      "post": {
        "tags": [
          "SupplierIndustryType"
        ],
        "summary": "Deactivates products for a supplier industry type (Auth)",
        "description": "The intended use is to deactivate products not in use for a supplier industry type                                  \\\r\n                                                                                                                    \\\r\nThe affected ProductSupplierIndustryTypes will get Sys_Deactivated = 1 and Inactive = 1                             \\\r\n                                                                                                                    \\\r\nNote that for ProductSupplierIndustryTypes where there are items in stock, and this is the only active              \\\r\nsource for the stock, the ProductSupplierIndustryType will be set to Inactive but will NOT be                       \\\r\nset to Sys_Deactivated.                                                                                             \\\r\n                                                                                                                    \\\r\nIf the procedure is run in simulation mode, no changes will be done to any data but the number of affected items    \\\r\nwill still be returned.                                                                                             \\",
        "operationId": "ProductDeactivate",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeProductDeactivateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeProductDeactivateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeProductDeactivateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierIndustryTypeProductDeactivateResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierIndustryType/ProductReactivate": {
      "post": {
        "tags": [
          "SupplierIndustryType"
        ],
        "summary": "Reactivates products for a supplier industry type (Auth)",
        "description": "This procedures removes Sys_Deactivated and Inactive flags from ProductSupplierIndustryTypes.                       \\\r\n                                                                                                                    \\\r\nIt is intended for reversing calls to ProductDeactivate.                                                            \\\r\n                                                                                                                    \\\r\nIf the procedure is run in simulation mode, no changes will be done to any data but the number of affected items    \\\r\nwill still be returned.                                                                                             \\",
        "operationId": "ProductReactivate",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeProductReactivateParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeProductReactivateParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierIndustryTypeProductReactivateParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierIndustryTypeProductReactivateResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierIndustryTypeFtpInfo/Upsert": {
      "post": {
        "tags": [
          "SupplierIndustryTypeFtpInfo"
        ],
        "summary": "Create or update a list of supplierIndustryTypeFtpInfos. (Auth)",
        "operationId": "Upsert71",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierIndustryTypeFtpInfoDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierIndustryTypeFtpInfoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierIndustryTypeFtpInfoDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierIndustryTypeFtpInfoUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierIndustryTypeFtpInfoUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/Upsert": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": "Create or update a list of supplierInvoices. (Auth)",
        "operationId": "Upsert72",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/PrepareAttachmentUpload": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": "Accepts SupplierInvoiceId, Creates blob with write SAS token and saves meta data for attachment (Auth)",
        "operationId": "PrepareAttachmentUpload7",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceAttachmentUploadDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceAttachmentUploadDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceAttachmentUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/PrepareAttachmentUploadById": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": "Accepts AttachmentId, Creates blob with write SAS token and updates meta data on that attachment (Auth)",
        "operationId": "PrepareAttachmentUploadById7",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Attachment for which we are preparing upload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentUploadByIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentSasResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/GetNotSynced": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced32",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/Reverse": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "Reverse",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceReverseParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceReverseParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceReverseParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceReverseResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/GetNotSyncedProductNote": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedProductNote",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/MoveToAssignmentProductNote": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "MoveToAssignmentProductNote",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToAssignmentParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToAssignmentParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToAssignmentParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteMoveToAssignmentResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/MoveToStorageProductNote": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "MoveToStorageProductNote",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToStorageParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToStorageParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteMoveToStorageParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteMoveToStorageResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/PreProcessProductNoteLineProductNote": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "PreProcessProductNoteLineProductNote",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNotePreProcessProductNoteLineResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/GetNotSyncedProductNoteLine": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedProductNoteLine",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductNoteLineGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoice/GetNotSyncedLine": {
      "post": {
        "tags": [
          "SupplierInvoice"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedLine3",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceLineGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceLineGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierInvoiceLineGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceLineGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoiceAttachment/Upsert": {
      "post": {
        "tags": [
          "SupplierInvoiceAttachment"
        ],
        "summary": "Create or update a list of supplierInvoiceAttachments. (Auth)",
        "operationId": "Upsert73",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceAttachmentDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceAttachmentDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceAttachmentDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceAttachmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceAttachmentUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SupplierInvoiceProductMatch/Upsert": {
      "post": {
        "tags": [
          "SupplierInvoiceProductMatch"
        ],
        "summary": "Create or update a list of supplierInvoiceProductMatchs. (Auth)",
        "operationId": "Upsert74",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceProductMatchDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceProductMatchDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SupplierInvoiceProductMatchDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceProductMatchUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupplierInvoiceProductMatchUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/SystemNotification/Upsert": {
      "post": {
        "tags": [
          "SystemNotification"
        ],
        "summary": "Create or update a list of systemNotifications. (Auth)",
        "operationId": "Upsert75",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SystemNotificationDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SystemNotificationDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SystemNotificationDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemNotificationUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SystemNotificationUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/Team/Upsert": {
      "post": {
        "tags": [
          "Team"
        ],
        "summary": "Create or update a list of teams. (Auth)",
        "operationId": "Upsert76",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TeamDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/User/GetPermissions": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": " (Auth)",
        "operationId": "GetPermissions",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/User/CreateUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": " (Auth policies: Access.Write; roles: clientadmin)",
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Access.Write"
            ]
          }
        ]
      }
    },
    "/v3/client/{clientid}/User/UpdateOwnProfile": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": " (Auth)",
        "operationId": "UpdateOwnProfile",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOwnProfileCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOwnProfileCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOwnProfileCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/User/UpdateUser": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": " (Auth policies: Access.Write; roles: clientadmin)",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "Access.Write"
            ]
          }
        ]
      }
    },
    "/v3/client/{clientid}/UserCommand/GetUserCommands": {
      "get": {
        "tags": [
          "UserCommand"
        ],
        "summary": "Gets all UserCommands defined for the current user (Auth)",
        "operationId": "GetUserCommands",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCommandDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/UserCommand/Upsert": {
      "post": {
        "tags": [
          "UserCommand"
        ],
        "summary": "Create or update a list of userCommands. (Auth)",
        "operationId": "Upsert77",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCommandDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCommandDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCommandDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCommandUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCommandUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/UserRole/Upsert": {
      "post": {
        "tags": [
          "UserRole"
        ],
        "summary": "Create or update a list of userRoles. (Auth)",
        "operationId": "Upsert78",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserRoleDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/VATRate/Upsert": {
      "post": {
        "tags": [
          "VATRate"
        ],
        "summary": "Create or update a list of vATRates. (Auth)",
        "operationId": "Upsert79",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VATRateDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VATRateDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VATRateDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VATRateUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VATRateUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/VATRate/GetNotSynced": {
      "post": {
        "tags": [
          "VATRate"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced33",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VATRateGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VATRateGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VATRateGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VATRateGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCode/Upsert": {
      "post": {
        "tags": [
          "WageCode"
        ],
        "summary": "Create or update a list of wageCodes. (Auth)",
        "operationId": "Upsert80",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCode/GetNotSynced": {
      "post": {
        "tags": [
          "WageCode"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced34",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCode/PreProcess": {
      "post": {
        "tags": [
          "WageCode"
        ],
        "summary": " (Auth)",
        "operationId": "PreProcess16",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodePreProcessDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodePreProcessDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodePreProcessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCodeReportCategory/Upsert": {
      "post": {
        "tags": [
          "WageCodeReportCategory"
        ],
        "summary": "Create or update a list of wageCodeReportCategories. (Auth)",
        "operationId": "Upsert81",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeReportCategoryDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeReportCategoryDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeReportCategoryDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeReportCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeReportCategoryUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCodeReportCategory/GetNotSynced": {
      "post": {
        "tags": [
          "WageCodeReportCategory"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced35",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCodeReportCategory/PreProcess": {
      "post": {
        "tags": [
          "WageCodeReportCategory"
        ],
        "summary": "Preprocess/validate WageCodeReportCategory record before saving. (Auth)",
        "operationId": "PreProcess17",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified WageCodeReportCategory with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCodeReportCategoryType/Upsert": {
      "post": {
        "tags": [
          "WageCodeReportCategoryType"
        ],
        "summary": "Create or update a list of wageCodeReportCategoryTypes. (Auth)",
        "operationId": "Upsert82",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeReportCategoryTypeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeReportCategoryTypeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageCodeReportCategoryTypeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeReportCategoryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeReportCategoryTypeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCodeReportCategoryType/GetNotSynced": {
      "post": {
        "tags": [
          "WageCodeReportCategoryType"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced36",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryTypeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryTypeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryTypeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeReportCategoryTypeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCodeReportCategoryType/GetNotSyncedWageCodeReportCategory": {
      "post": {
        "tags": [
          "WageCodeReportCategoryType"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSyncedWageCodeReportCategory",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageCodeReportCategoryGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageCodeReportCategoryType/PreProcessWageCodeReportCategory": {
      "post": {
        "tags": [
          "WageCodeReportCategoryType"
        ],
        "summary": "Preprocess/validate WageCodeReportCategory record before saving. (Auth)",
        "operationId": "PreProcessWageCodeReportCategory",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified WageCodeReportCategory with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryPreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryPreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageCodeReportCategoryPreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageGroup/Upsert": {
      "post": {
        "tags": [
          "WageGroup"
        ],
        "summary": "Create or update a list of wageGroups. (Auth)",
        "operationId": "Upsert83",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageGroupDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageGroupDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageGroupDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageGroupUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageGroup/GetNotSynced": {
      "post": {
        "tags": [
          "WageGroup"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced37",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageGroupGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageGroupGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageGroupGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageGroupGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WagePeriod/Upsert": {
      "post": {
        "tags": [
          "WagePeriod"
        ],
        "summary": "Create or update a list of wagePeriods. (Auth)",
        "operationId": "Upsert84",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WagePeriodDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WagePeriodDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WagePeriodDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WagePeriodUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WagePeriodUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WagePeriod/GetNotSynced": {
      "post": {
        "tags": [
          "WagePeriod"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced38",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WagePeriodGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WagePeriodGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WagePeriodGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WagePeriodGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WagePeriod/ExportPayrollFile": {
      "post": {
        "tags": [
          "WagePeriod"
        ],
        "summary": "Export a payroll file for import in an external payroll system (Auth)",
        "operationId": "ExportPayrollFile",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportPayrollFileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportPayrollFileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExportPayrollFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WagePeriod/GetPayrollFile": {
      "get": {
        "tags": [
          "WagePeriod"
        ],
        "summary": "Export a payroll file for import in an external payroll system (Auth)",
        "operationId": "GetPayrollFile",
        "parameters": [
          {
            "name": "wagePeriodId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "payrollFormat",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PayrollFormatEnum"
            }
          },
          {
            "name": "separatorChar",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAssignmentNumber",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeProjectNumber",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "textEncoding",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TextEncodingEnum"
            }
          },
          {
            "name": "includeFormatInfoInFileName",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WagePeriod/ExportPayrollFileB64": {
      "post": {
        "tags": [
          "WagePeriod"
        ],
        "summary": "Export a payroll file for import in an external payroll system (Auth)",
        "operationId": "ExportPayrollFileB64",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportPayrollFileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportPayrollFileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExportPayrollFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/B64FileResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageRate/Upsert": {
      "post": {
        "tags": [
          "WageRate"
        ],
        "summary": "Create or update a list of wageRates. (Auth)",
        "operationId": "Upsert85",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageRateDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageRateDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageRateDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageRateUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageRateUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageRate/GetNotSynced": {
      "post": {
        "tags": [
          "WageRate"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced39",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageRateGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageRate/PreProcess": {
      "post": {
        "tags": [
          "WageRate"
        ],
        "summary": "Preprocess/validate WageRate record before saving. (Auth)",
        "operationId": "PreProcess18",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified WageRate with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRatePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRatePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageRatePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageRate/GetWageRateClient": {
      "get": {
        "tags": [
          "WageRate"
        ],
        "summary": " (Auth)",
        "operationId": "GetWageRateClient",
        "parameters": [
          {
            "name": "EmployeeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WageCodeId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageRateEmployee/Upsert": {
      "post": {
        "tags": [
          "WageRateEmployee"
        ],
        "summary": "Create or update a list of wageRateEmployees. (Auth)",
        "operationId": "Upsert86",
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "description": "Id of a current client.",
            "schema": {
              "type": "string",
              "default": "b-dummydata"
            }
          },
          {
            "name": "apiBehaviour",
            "in": "query",
            "description": "Changes api behaviour. It is possible to combine non-default behaviours, sending them as comma separated string.\r\nBehaviours: NoEvents, NoPostProcessing, UpdateAnyField, ProcessUnchanged, AllowIndividualRootDtoFailure, TreatNullAsNotSetAndNegOneAsNull\r\nWhen using AllowIndividualRootDtoFailure ordering of output result dtos is not garanteed to be same as ordering of input dtos",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "externalSystemId",
            "in": "query",
            "description": "Represents owner system of external ids",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageRateEmployeeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageRateEmployeeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WageRateEmployeeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageRateEmployeeUpsertResultDto"
                  }
                }
              }
            }
          },
          "207": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageRateEmployeeUpsertResultDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageRateEmployee/GetNotSynced": {
      "post": {
        "tags": [
          "WageRateEmployee"
        ],
        "summary": " (Auth)",
        "operationId": "GetNotSynced40",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateEmployeeGetNotSyncedParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateEmployeeGetNotSyncedParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateEmployeeGetNotSyncedParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WageRateEmployeeGetNotSyncedResult"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    },
    "/v3/client/{clientid}/WageRateEmployee/PreProcess": {
      "post": {
        "tags": [
          "WageRateEmployee"
        ],
        "summary": "Preprocess/validate WageRateEmployee record before saving. (Auth)",
        "operationId": "PreProcess19",
        "parameters": [
          {
            "name": "apiBehaviour",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Simplified WageRateEmployee with the current values from the UI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateEmployeePreProcessParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateEmployeePreProcessParameters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WageRateEmployeePreProcessParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreProcessDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "addressIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AddressId for the current ExternalSystem",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "cadastralUnitNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "description": "Reference to Country  \r\nType: string? (Max: 2)",
            "nullable": true
          },
          "eDokBuildingPlantId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "eDokNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "eDokPlantId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "eDokProjectId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "eDokProjectNumber": {
            "type": "string",
            "description": "Type: string? (Max: 15)",
            "nullable": true
          },
          "gLN": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "gPSPositionAccuracy": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "gPSPositionAltitude": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "gPSPositionLatitude": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "gPSPositionLongitude": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "gPSPositionSourceType": {
            "type": "integer",
            "description": "Type: byte?",
            "format": "int32",
            "nullable": true
          },
          "leaseholdUnitNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "municipalityNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "name2": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "postalNumber": {
            "type": "string",
            "description": "Type: string? (Max: 10)",
            "nullable": true
          },
          "postalPlace": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "propertyUnitNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sectionUnitNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sectionUnitText": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "shareUnitNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemAddresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAddressDto"
            }
          }
        }
      },
      "AddressGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AddressGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "addressId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddressUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemAddresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAddressUpsertResultDto"
            }
          }
        }
      },
      "AdminGetRowErrorMessagesParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "table": {
            "type": "string",
            "nullable": true
          },
          "rowId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AdminGetRowErrorMessagesResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "textId": {
            "type": "string",
            "nullable": true
          },
          "enum_RowStateId": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "linkEntity": {
            "type": "string",
            "nullable": true
          },
          "linkId": {
            "type": "string",
            "nullable": true
          },
          "linkTab": {
            "type": "string",
            "nullable": true
          },
          "userMsgEN": {
            "type": "string",
            "nullable": true
          },
          "userMsgNO": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AppointmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "appointmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "appointmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AppointmentId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Will be auto-filled with assignment number and customer name if no value is set and an assignment is referenced on the appointment.  \r\nType: string? (Max: 255)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "endDateTimeUTC": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: DateTime  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "startDateTimeUTC": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: DateTime  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "syncToMobileDevice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemAppointments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAppointmentDto"
            }
          }
        }
      },
      "AppointmentGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AppointmentGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AppointmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemAppointments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAppointmentUpsertResultDto"
            }
          }
        }
      },
      "ApprovalStatusEnum": {
        "type": "string",
        "enum": [
          "Waiting",
          "Approved",
          "Rejected"
        ]
      },
      "AssignmentAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "assignmentAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentAttachmentUploadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "AssignmentCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "assignmentCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentCategoryNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "marginPercent": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemAssignmentCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAssignmentCategoryDto"
            }
          }
        }
      },
      "AssignmentCategoryGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AssignmentCategoryGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentCategoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AssignmentCategoryPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentCategoryNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentCategoryIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemAssignmentCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAssignmentCategoryUpsertResultDto"
            }
          }
        }
      },
      "AssignmentCopyDimensionsFromProjectParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentCopyDimensionsFromProjectResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "success": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AssignmentCopyParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "copyContact": {
            "type": "boolean",
            "nullable": true
          },
          "copyParticipants": {
            "type": "boolean",
            "nullable": true
          },
          "copyDimension": {
            "type": "boolean",
            "nullable": true
          },
          "syncAssignmentToSpeedyCraft": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internalReference": {
            "type": "string",
            "nullable": true
          },
          "invoiceComment": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentCopyResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "caseHandler_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CaseHandler_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "default_InvoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "default_ProductAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "jobResponsible_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to JobResponsible_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PaymentTermId for the current ExternalSystem",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "archived": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "assignmentCategoryId": {
            "type": "integer",
            "description": "Reference to AssignmentCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "assignmentCompleteDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "assignmentCompleteMobileDevice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "assignmentNumber": {
            "type": "integer",
            "description": "Type: int?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "caseHandler_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "coverageRateFixedPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "coverageRateNotFixedPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "customerReference": {
            "type": "string",
            "description": "Type: string? (Max: 200)",
            "nullable": true
          },
          "default_InvoiceTemplateId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplate  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "default_ProductAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Email",
            "nullable": true
          },
          "endDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "estimatedCompletionPercentage": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "estimatedTotalHours": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "description": "Type: string? (Max: 200)",
            "nullable": true
          },
          "fixedPriceAmount": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "fixedPriceInvoiced": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "groupedInvoicing": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "internalOnly": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "internalReference": {
            "type": "string",
            "description": "Type: string? (Max: 200)",
            "nullable": true
          },
          "invoiceComment": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "jobResponsible_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "jobResponsibleCompleted": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "jobResponsibleCompletedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "keyInformation": {
            "type": "string",
            "description": "Type: string? (Max: 200)",
            "nullable": true
          },
          "linkedAssignmentId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "marginPercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "optimizedAtUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "description": "Reference to PaymentTerm  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "pieceworkNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "readyToInvoice": {
            "type": "boolean",
            "description": "Type: bool?",
            "nullable": true
          },
          "serviceAgreementId": {
            "type": "integer",
            "description": "Reference to ServiceAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "serviceContractId": {
            "type": "integer",
            "description": "Reference to ServiceContract  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "serviceInvoiceLimitDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sortDateUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "startDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "syncToEconomySystem": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "syncToMobileDevice": {
            "type": "boolean",
            "description": "The assingment is for internal purposes, and should not be synced with handheld devices.  \r\n__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Tags": {
            "type": "string",
            "description": "Type: string? (Max: 255)",
            "nullable": true
          },
          "timeSheetAttachmentsNumber": {
            "type": "integer",
            "description": "Type: byte?",
            "format": "int32",
            "nullable": true
          },
          "warrantyDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "enum_AssignmentProgressId": {
            "$ref": "#/components/schemas/AssignmentProgressEnum"
          },
          "enum_AssignmentStatusId": {
            "$ref": "#/components/schemas/AssignmentStatusEnum"
          },
          "enum_AssignmentTypeId": {
            "$ref": "#/components/schemas/AssignmentTypeEnum"
          },
          "enum_ContractTypeId": {
            "$ref": "#/components/schemas/ContractTypeEnum"
          },
          "enum_InvoiceReserveBilledPriceCalculationId": {
            "$ref": "#/components/schemas/InvoiceReserveBilledPriceCalculationEnum"
          },
          "enum_InvoiceReserveFixedPriceCalculationId": {
            "$ref": "#/components/schemas/InvoiceReserveFixedPriceCalculationEnum"
          },
          "addressId": {
            "type": "integer",
            "description": "Reference to Address (directly updateable through Address)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_ContactId": {
            "type": "integer",
            "description": "Reference to Contact (directly updateable through Default_Contact)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "default_Contact": {
            "$ref": "#/components/schemas/ContactDto"
          },
          "assignmentAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentAttachmentDto"
            }
          },
          "contacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ContactDto"
            }
          },
          "assignmentParticipants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentParticipantDto"
            }
          },
          "assignmentProductAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentProductAgreementDto"
            }
          },
          "externalSystemAssignments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAssignmentDto"
            }
          }
        }
      },
      "AssignmentGetDefaultsParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentGetDefaultsResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "default_ServiceAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "default_ProductAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "default_AssignmentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "default_InvoiceTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "default_CasehandlerEmployeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "default_AddressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "default_ContactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enum_InvoiceReserveFixedPriceCalculationId": {
            "$ref": "#/components/schemas/InvoiceReserveFixedPriceCalculationEnum"
          },
          "enum_InvoiceReserveBilledPriceCalculationId": {
            "$ref": "#/components/schemas/InvoiceReserveBilledPriceCalculationEnum"
          },
          "default_CoverageRateFixedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "default_CoverageRateNotFixedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "AssignmentGetErrorCountParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentGetErrorCountResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteLineCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "documentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "participantCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AssignmentGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AssignmentInvoiceReserveAdjustmentParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceReserveAdjustmentAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "invoiceReserveAdjustmentComment": {
            "type": "string",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentMOMDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "assignmentMOMId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "description": "Product number for matching various products with original product number as part of their name.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "selected_UserManual": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          }
        }
      },
      "AssignmentMOMUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentMOMId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "AssignmentParticipantDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "assignmentParticipantId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentParticipantIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentParticipantId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_ParticipantStatusId": {
            "$ref": "#/components/schemas/ParticipantStatusEnum"
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "externalSystemAssignmentParticipants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAssignmentParticipantDto"
            }
          }
        }
      },
      "AssignmentParticipantGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AssignmentParticipantGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentParticipantId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AssignmentParticipantUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentParticipantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentParticipantIdExternal": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemAssignmentParticipants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAssignmentParticipantUpsertResultDto"
            }
          }
        }
      },
      "AssignmentProductAgreementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "assignmentProductAgreementId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentProductAgreementUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentProductAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "AssignmentProgressEnum": {
        "type": "string",
        "enum": [
          "NotStarted",
          "WorkOrderWritten",
          "SentToHpc",
          "TimeMatRegistered",
          "InvoiceRegistered",
          "PartiallyInvoiced",
          "PartiallyInvoicedNewRegister",
          "PartiallyInvoicedInvoiceRegistered",
          "Completed"
        ]
      },
      "AssignmentProjectReportParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectReportId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentProjectReportResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectReportDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enum_ProjectReportDetailTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "reportNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reportText": {
            "type": "string",
            "nullable": true
          },
          "sumTotal": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sumPeriod": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sumBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sumCurrentYear": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "difference": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "differencePercent": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "AssignmentReportDimensionSummaryParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentReportDimensionSummaryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionDescription": {
            "type": "string",
            "nullable": true
          },
          "dimensionValueId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceHours": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costService": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costProduct": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costOther": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalInvoiced": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "coverage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "coveragePercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "AssignmentReportMonthlySummaryParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId_From": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId_To": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentReportMonthlySummaryResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectPeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "periodName": {
            "type": "string",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costService": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costProduct": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costOther": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "serviceHours": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalInvoiced": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "runningTotalCost": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "runningTotalInvoiced": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "coverage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "coveragePercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "invoicingSum": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costProductsBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costServiceBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costOtherBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "incomeProductsBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "incomeServiceBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "incomeOtherBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "serviceSpentBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "accumulatedServiceSpentBudget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "accumulatedServiceHours": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "AssignmentResetHistoricParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "AssignmentStatusEnum": {
        "type": "string",
        "enum": [
          "NotStarted",
          "InProgress",
          "Expired",
          "Completed"
        ]
      },
      "AssignmentTypeEnum": {
        "type": "string",
        "enum": [
          "Normal",
          "Service",
          "Internal"
        ]
      },
      "AssignmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "address": {
            "$ref": "#/components/schemas/AddressUpsertResultDto"
          },
          "default_Contact": {
            "$ref": "#/components/schemas/ContactUpsertResultDto"
          },
          "assignmentAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentAttachmentUpsertResultDto"
            }
          },
          "contacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ContactUpsertResultDto"
            }
          },
          "assignmentParticipants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentParticipantUpsertResultDto"
            }
          },
          "assignmentProductAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentProductAgreementUpsertResultDto"
            }
          },
          "externalSystemAssignments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAssignmentUpsertResultDto"
            }
          }
        }
      },
      "AttachmentCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "attachmentCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_AttachmentCategoryId": {
            "$ref": "#/components/schemas/AttachmentCategoryEnum"
          }
        }
      },
      "AttachmentCategoryEnum": {
        "type": "string",
        "enum": [
          "Custom",
          "MOM",
          "Tender"
        ]
      },
      "AttachmentCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "AttachmentDownloadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attachmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentCategoryId": {
            "type": "integer",
            "description": "Reference to AttachmentCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "azureBlobId": {
            "type": "string",
            "description": "Type: string? (Max: 1024)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 1024)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "fileChecksum": {
            "type": "string",
            "description": "Type: string? (Max: 64)",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 250)",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sourceExternalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sourceType": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "syncToMobileDevice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "useCommonBlobStore": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_IndustryTypeId": {
            "$ref": "#/components/schemas/IndustryTypeEnum"
          },
          "enum_MOM_TypeId": {
            "$ref": "#/components/schemas/MOM_TypeEnum"
          },
          "assignmentAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentAttachmentDto"
            }
          },
          "externalSystemAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAttachmentDto"
            }
          }
        }
      },
      "AttachmentGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "AttachmentGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attachmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AttachmentSasResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attachmentId": {
            "type": "integer",
            "format": "int32"
          },
          "sasToken": {
            "type": "string",
            "nullable": true
          },
          "blobUri": {
            "type": "string",
            "nullable": true
          },
          "blobId": {
            "type": "string",
            "nullable": true
          },
          "firstTimePrepare": {
            "type": "boolean"
          },
          "contentType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AttachmentUploadByIdDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attachmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "assignmentAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentAttachmentUpsertResultDto"
            }
          },
          "externalSystemAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemAttachmentUpsertResultDto"
            }
          }
        }
      },
      "B64FileResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "b64Content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BoligmappaAttachmentDto": {
        "type": "object",
        "description": "Boligmappa uploads",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "boligmappaAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "boligmappaFileId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "boligmappaNumber": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "uploadedByBmUserId": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)",
            "nullable": true
          },
          "uploadedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment (directly updateable through Attachment)  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachment": {
            "$ref": "#/components/schemas/AttachmentDto"
          }
        }
      },
      "BoligmappaAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "boligmappaAttachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "attachment": {
            "$ref": "#/components/schemas/AttachmentUpsertResultDto"
          }
        }
      },
      "BoligmappaIndustryTypeEnum": {
        "type": "string",
        "enum": [
          "Undefined",
          "Electrician",
          "Plumber",
          "AdvisingEngineer",
          "Carpenter",
          "Painter",
          "Mason",
          "Tinsmith",
          "Contractor",
          "Appraisal",
          "RealEstateAgent",
          "Insurance",
          "Architect",
          "HousingProducer",
          "Builder",
          "LandscapingGardener",
          "Ventilation",
          "Government",
          "LocalElectricityAuthority",
          "MachineContractor",
          "FireAndChimneysweep",
          "IntegrationPartner",
          "Supplier",
          "Producer",
          "RoofContractor",
          "MachineContractor2",
          "Kitchen",
          "Stairs",
          "Ventilation2",
          "Tinsmith2",
          "BuildingGoodsStore",
          "Painter2",
          "TelecomInstaller",
          "SunShading",
          "AlarmsSecurity",
          "Banking",
          "HeatPump",
          "Novap",
          "Glazier",
          "FireSecurity",
          "Furnishings",
          "Fencing",
          "SeaContracting",
          "Gates",
          "StationaryExtinguishers"
        ]
      },
      "BudgetDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "budgetId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "budgetScenarioIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetScenarioId for the current ExternalSystem",
            "nullable": true
          },
          "fromProjectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to FromProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "toProjectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ToProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "budgetScenarioId": {
            "type": "integer",
            "description": "Reference to BudgetScenario  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "fromProjectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "toProjectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "externalSystemBudgets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetDto"
            }
          }
        }
      },
      "BudgetLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "budgetLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetLineId for the current ExternalSystem",
            "nullable": true
          },
          "budgetIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetId for the current ExternalSystem",
            "nullable": true
          },
          "projectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "budgetId": {
            "type": "integer",
            "description": "Reference to Budget  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetValue": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "projectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "budgetLinePeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BudgetLinePeriodDto"
            }
          },
          "externalSystemBudgetLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetLineDto"
            }
          }
        }
      },
      "BudgetLinePeriodDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "budgetLinePeriodId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetLinePeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetLinePeriodId for the current ExternalSystem",
            "nullable": true
          },
          "budgetLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetLineId for the current ExternalSystem",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "budgetValue": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "budgetLineId": {
            "type": "integer",
            "description": "Reference to BudgetLine  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "externalSystemBudgetLinePeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetLinePeriodDto"
            }
          }
        }
      },
      "BudgetLinePeriodUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetLinePeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetLinePeriodIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemBudgetLinePeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetLinePeriodUpsertResultDto"
            }
          }
        }
      },
      "BudgetLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "budgetLinePeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BudgetLinePeriodUpsertResultDto"
            }
          },
          "externalSystemBudgetLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetLineUpsertResultDto"
            }
          }
        }
      },
      "BudgetScenarioDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "budgetScenarioId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetScenarioIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetScenarioId for the current ExternalSystem",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemBudgetScenarios": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetScenarioDto"
            }
          }
        }
      },
      "BudgetScenarioUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetScenarioId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetScenarioIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemBudgetScenarios": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetScenarioUpsertResultDto"
            }
          }
        }
      },
      "BudgetUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemBudgets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemBudgetUpsertResultDto"
            }
          }
        }
      },
      "CalculatePriceForProductPickerDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "CalculatePriceForProductPickerDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "details": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CalculatePriceForProductPickerDetailDto"
            }
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CalculatePriceForProductPickerResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "isVarious": {
            "type": "boolean"
          },
          "salesPriceInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercentInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "customerPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "enum_CostPriceSourceId": {
            "$ref": "#/components/schemas/CostPriceSourceEnum"
          }
        }
      },
      "Client": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ClientLevelEnum": {
        "type": "string",
        "enum": [
          "None",
          "Client",
          "Corporate",
          "Global",
          "System"
        ]
      },
      "CommandEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "SetInvoiceLineRule"
        ]
      },
      "ContactDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "contactId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "contactIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ContactId for the current ExternalSystem",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: Email",
            "nullable": true
          },
          "invoiceSendAttachment": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceSendCopy": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "name2": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "parentContactId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "preferred_Enum_MessageChannelId": {
            "$ref": "#/components/schemas/MessageChannelEnum"
          },
          "externalSystemContacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemContactDto"
            }
          }
        }
      },
      "ContactGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ContactGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contactId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ContactMessageDto": {
        "type": "object",
        "description": "Incoming and outgoing messages to contacts, typically through SMS or similar message channels.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "contactMessageId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "contactIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ContactId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "contactId": {
            "type": "integer",
            "description": "Reference to Contact  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "externalMessageId": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "inboundReadByUserUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "inboundReceivedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "isInbound": {
            "type": "boolean",
            "description": "Should only be set on create operations, and will cause an error if any attempt is made to set this value during an update.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "messageGroup": {
            "type": "string",
            "description": "Type: Guid?",
            "format": "uuid",
            "nullable": true
          },
          "messageText": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 1024)",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "outboundDeliveredUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "outboundReadByContactUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "outboundSendWaitUntilUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "outboundSentUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "segmentCount": {
            "type": "integer",
            "description": "Type: short?",
            "format": "int32",
            "nullable": true
          },
          "sendTryCount": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "description": "Reference to User  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "enum_MessageChannelId": {
            "$ref": "#/components/schemas/MessageChannelEnum"
          },
          "enum_MessageDeliveryStatusId": {
            "$ref": "#/components/schemas/MessageDeliveryStatusEnum"
          }
        }
      },
      "ContactMessageUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "contactMessageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ContactUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "contactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemContacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemContactUpsertResultDto"
            }
          }
        }
      },
      "ContractTypeEnum": {
        "type": "string",
        "enum": [
          "Billed",
          "Contract",
          "ChangeMessage",
          "Return"
        ]
      },
      "CostPriceSourceEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "SupplierInvoice",
          "HandheldDevice",
          "ManualInput",
          "StockAvgUpdOnAdd",
          "StockFIFO",
          "ProductCatalogue"
        ]
      },
      "CountryDto": {
        "type": "object",
        "description": "https://countrycode.org/ shows some possible values.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "description": "__Primary key__  \r\n__When creating records:__ ___Mandatory___  \r\nType: string (Max: 2)",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "phonePrefix": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 10)  \r\nValidation: Phone",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          }
        }
      },
      "CountryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "CreateCreditNoteCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateInvoiceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "defaultLanguage": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "secondaryEmail": {
            "type": "string",
            "nullable": true
          },
          "isClientAdmin": {
            "type": "boolean"
          },
          "isInactive": {
            "type": "boolean"
          },
          "isPayrollUser": {
            "type": "boolean",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sendEmail": {
            "type": "boolean"
          },
          "enableTwoFactor": {
            "type": "boolean"
          },
          "emailConfirmation": {
            "type": "boolean"
          },
          "clients": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "CreateUserData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sys_RowState": {
            "type": "string",
            "nullable": true
          },
          "textId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomDimensionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isInvoiceable": {
            "type": "boolean",
            "nullable": true
          },
          "enum_DimensionLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "useOnProductNoteLine": {
            "type": "boolean",
            "nullable": true
          },
          "useOnService": {
            "type": "boolean",
            "nullable": true
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active field recursively controls dimension use in context of assignment/project\r\nWhen passing true value it is required for assignmentId or projectId to be present\r\n__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Id of assignment using dimension\r\nIt is not allowed for both projectId and assignmentId to be present on the same dto \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "invoice": {
            "type": "boolean",
            "nullable": true
          },
          "dimensionIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Id of project using dimension\r\nIt is not allowed for both projectId and assignmentId to be present on the same dto \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "nullable": true
          },
          "dimensionValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomDimensionValueDto"
            }
          }
        }
      },
      "CustomDimensionValueDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "dimensionValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueIdExternal": {
            "type": "string",
            "nullable": true
          },
          "parentDimensionValueIdExternal": {
            "type": "string",
            "nullable": true
          },
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "selectable": {
            "type": "boolean",
            "nullable": true
          },
          "syncToMobileDevice": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parentDimensionValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fixedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "startDateTimeUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDateTimeUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completed": {
            "type": "boolean",
            "nullable": true
          },
          "invoiceText": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Active field recursively controls dimension value use (current level and its children) in context of assignment/project\r\nWhen passing true it's required for assignmentId or projectId to be present on top level dimension dto\r\n__When creating records:__ ___Default value = true___",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CustomInvoiceLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "customerAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CustomerAttachmentUploadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CustomerAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "CustomerDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "default_AssignmentCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_AssignmentCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "default_InvoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "default_ProductAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "invoice_CustomerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Invoice_CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PaymentTermId for the current ExternalSystem",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 1024)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "description": "Reference to Country  \r\nType: string? (Max: 2)",
            "nullable": true
          },
          "creditLimit": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "default_AssignmentCategoryId": {
            "type": "integer",
            "description": "Reference to AssignmentCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_InvoiceTemplateId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplate  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "default_ProductAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Type: string? (Max: 150)  \r\nValidation: Email",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "inactive": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoice_CustomerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoiceConsolidate": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceElectronic": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceElectronicEmail": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: Email",
            "nullable": true
          },
          "invoiceElectronicTarget": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "invoiceReminder": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceVAT": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "mobile2": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "name2": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "description": "Reference to PaymentTerm  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "private": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "serviceAgreementId": {
            "type": "integer",
            "description": "Reference to ServiceAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "timeSheetAttachmentsNumber": {
            "type": "integer",
            "description": "Type: byte?",
            "format": "int32",
            "nullable": true
          },
          "enum_DebtCollectionStatusId": {
            "$ref": "#/components/schemas/DebtCollectionStatusEnum"
          },
          "default_AddressId": {
            "type": "integer",
            "description": "Reference to Address (directly updateable through Default_Address)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_ContactId": {
            "type": "integer",
            "description": "Reference to Contact (directly updateable through Default_Contact)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoice_AddressId": {
            "type": "integer",
            "description": "Reference to Address (directly updateable through Invoice_Address)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_Address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "invoice_Address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "default_Contact": {
            "$ref": "#/components/schemas/ContactDto"
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          },
          "customerAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerAttachmentDto"
            }
          },
          "contacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ContactDto"
            }
          },
          "customerProductAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerProductAgreementDto"
            }
          },
          "externalSystemCustomers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemCustomerDto"
            }
          }
        }
      },
      "CustomerGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "CustomerGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerProductAgreementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "customerProductAgreementId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CustomerProductAgreementUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "customerProductAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "CustomerUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "default_Address": {
            "$ref": "#/components/schemas/AddressUpsertResultDto"
          },
          "invoice_Address": {
            "$ref": "#/components/schemas/AddressUpsertResultDto"
          },
          "default_Contact": {
            "$ref": "#/components/schemas/ContactUpsertResultDto"
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddressUpsertResultDto"
            }
          },
          "customerAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerAttachmentUpsertResultDto"
            }
          },
          "contacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ContactUpsertResultDto"
            }
          },
          "customerProductAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerProductAgreementUpsertResultDto"
            }
          },
          "externalSystemCustomers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemCustomerUpsertResultDto"
            }
          }
        }
      },
      "DailyMaintenanceRequestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DailyMaintenanceResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DashboardCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isGrouped": {
            "type": "boolean"
          },
          "parameterized": {
            "type": "boolean"
          },
          "widgets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WidgetData"
            }
          },
          "filters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          }
        }
      },
      "DashboardResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "widgets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WidgetData"
            }
          },
          "debug": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DataValue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "boolean",
            "nullable": true
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DataValue"
            }
          }
        }
      },
      "DebtCollectionStatusEnum": {
        "type": "string",
        "enum": [
          "NotInUse",
          "Invoices",
          "Customer"
        ]
      },
      "DeleteInvoiceLineCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeleteOldHistoryRequestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deleteOlderThan": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "DeleteOldHistoryResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DepartmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "departmentNumber": {
            "type": "integer",
            "description": "Type: short?",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "inactive": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "marginMinPercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementId": {
            "type": "integer",
            "description": "Reference to ServiceAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "description": "Reference to Address (directly updateable through Address)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "externalSystemDepartments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDepartmentDto"
            }
          },
          "storageDepartments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StorageDepartmentDto"
            }
          }
        }
      },
      "DepartmentGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "DepartmentGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "departmentId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DepartmentPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "departmentNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DepartmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "address": {
            "$ref": "#/components/schemas/AddressUpsertResultDto"
          },
          "externalSystemDepartments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDepartmentUpsertResultDto"
            }
          },
          "storageDepartments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StorageDepartmentUpsertResultDto"
            }
          }
        }
      },
      "DimensionCopyParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "copyFromDimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "isInvoiceable": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "useOnService": {
            "type": "boolean",
            "nullable": true
          },
          "useOnProductNoteLine": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "DimensionCopyResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DimensionFilter": {
        "type": "string",
        "enum": [
          "Active",
          "Global",
          "Project",
          "Assignment"
        ]
      },
      "DimensionForEntityResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "isInvoiceable": {
            "type": "boolean",
            "nullable": true
          },
          "useOnProductNoteLine": {
            "type": "boolean",
            "nullable": true
          },
          "useOnService": {
            "type": "boolean",
            "nullable": true
          },
          "invoice": {
            "type": "boolean",
            "nullable": true
          },
          "enum_DimensionLevelId": {
            "$ref": "#/components/schemas/DimensionLevelEnum"
          },
          "sys_CreatedDateUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "DimensionGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "DimensionGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DimensionLevelEnum": {
        "type": "string",
        "enum": [
          "Global",
          "Project",
          "Assignment"
        ]
      },
      "DimensionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "dimensionValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DimensionValueUpsertResultDto"
            }
          },
          "externalSystemDimensions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDimensionUpsertResultDto"
            }
          }
        }
      },
      "DimensionUseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "dimensionUseId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "dimensionUseIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DimensionUseId for the current ExternalSystem",
            "nullable": true
          },
          "externalSystemDimensionUses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDimensionUseDto"
            }
          }
        }
      },
      "DimensionUseUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionUseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionUseIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemDimensionUses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDimensionUseUpsertResultDto"
            }
          }
        }
      },
      "DimensionValueAgGridResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionValueId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentDimensionValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "selectable": {
            "type": "boolean"
          },
          "sys_CreatedDateUTC": {
            "type": "string",
            "format": "date-time"
          },
          "treePath": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DimensionValueForEntityResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionValueId": {
            "type": "integer",
            "format": "int32"
          },
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enum_DimensionLevelId": {
            "$ref": "#/components/schemas/DimensionLevelEnum"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "selectable": {
            "type": "boolean",
            "nullable": true
          },
          "fixedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sys_CreatedDateUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDateTimeUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDateTimeUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoiceText": {
            "type": "string",
            "nullable": true
          },
          "completed": {
            "type": "boolean",
            "nullable": true
          },
          "treePath": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DimensionValueGetNotSyncedAssignmentDimensionParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "DimensionValueGetNotSyncedAssignmentDimensionResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionValueId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DimensionValueGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "DimensionValueGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionValueId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DimensionValueUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemDimensionValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDimensionValueUpsertResultDto"
            }
          }
        }
      },
      "DimensionValueUseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "dimensionValueUseId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueUseIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueUseId for the current ExternalSystem",
            "nullable": true
          },
          "externalSystemDimensionValueUses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDimensionValueUseDto"
            }
          }
        }
      },
      "DimensionValueUseUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionValueUseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueUseIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemDimensionValueUses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemDimensionValueUseUpsertResultDto"
            }
          }
        }
      },
      "DiscountGroupDto": {
        "type": "object",
        "description": "Products may change their discount groups over time. Old purchase agreements may therefore be invalid after such a change.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "discountGroupId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "discountGroupCode": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          }
        }
      },
      "DiscountGroupUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "discountGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "EmployeeAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "employeeAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "EmployeeAttachmentUploadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "EmployeeAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "EmployeeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "employeeInvoiceCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeInvoiceCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "jobCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to JobCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "approveWageRequired": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "emailPrivate": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: Email",
            "nullable": true
          },
          "emailWork": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: Email",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "description": "Reference to EmployeeInvoiceCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "employeeNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "hasMobileDevice": {
            "type": "boolean",
            "description": "The employee has a mobile device assigned. Typically used when integrating with SpeedyCraft.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "hoursPerWeek": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Type: string? (Max: 4000)",
            "nullable": true
          },
          "isCaseHandler": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isHired": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "jobCategoryEndDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "description": "Reference to JobCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryStartDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "jobPercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "phoneMobile": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "phonePrivate": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "phoneWork": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_EmployeeStatusId": {
            "$ref": "#/components/schemas/EmployeeStatusEnum"
          },
          "default_AddressId": {
            "type": "integer",
            "description": "Reference to Address (directly updateable through Default_Address)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_Address": {
            "$ref": "#/components/schemas/AddressDto"
          },
          "employee_Competencies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Employee_CompetencyDto"
            }
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          },
          "employeeAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmployeeAttachmentDto"
            }
          },
          "externalSystemEmployees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemEmployeeDto"
            }
          }
        }
      },
      "EmployeeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "EmployeeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeeInvoiceCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "employeeInvoiceCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeInvoiceCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)  \r\nValidation: Name",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Type: short?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemEmployeeInvoiceCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemEmployeeInvoiceCategoryDto"
            }
          }
        }
      },
      "EmployeeInvoiceCategoryGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "EmployeeInvoiceCategoryGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EmployeeInvoiceCategoryPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "EmployeeInvoiceCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeInvoiceCategoryIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemEmployeeInvoiceCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemEmployeeInvoiceCategoryUpsertResultDto"
            }
          }
        }
      },
      "EmployeeStatusEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "Regular",
          "Unpaid",
          "TemporarilyLaidOff",
          "Ended",
          "TemporarilyStopped"
        ]
      },
      "EmployeeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "default_Address": {
            "$ref": "#/components/schemas/AddressUpsertResultDto"
          },
          "employee_Competencies": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Employee_CompetencyUpsertResultDto"
            }
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddressUpsertResultDto"
            }
          },
          "employeeAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmployeeAttachmentUpsertResultDto"
            }
          },
          "externalSystemEmployees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemEmployeeUpsertResultDto"
            }
          }
        }
      },
      "Employee_CompetencyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "employee_CompetencyId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "competencyId": {
            "type": "integer",
            "description": "Reference to Competency  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Employee_CompetencyUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "employee_CompetencyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "EntityNameForDimension": {
        "type": "string",
        "enum": [
          "Service",
          "ProductNoteLine",
          "Invoice"
        ]
      },
      "ExportPayrollFileDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wagePeriodId": {
            "type": "integer",
            "format": "int32"
          },
          "payrollFormat": {
            "$ref": "#/components/schemas/PayrollFormatEnum"
          },
          "separatorChar": {
            "type": "string"
          },
          "includeAssignmentNumber": {
            "type": "boolean"
          },
          "includeProjectNumber": {
            "type": "boolean"
          },
          "textEncoding": {
            "$ref": "#/components/schemas/TextEncodingEnum"
          },
          "includeFormatInfoInFileName": {
            "type": "boolean"
          }
        }
      },
      "ExternalSystemAddressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemAddressId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "addressIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AddressId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "addressId": {
            "type": "integer",
            "description": "Reference to Address  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemAddressUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "addressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "addressIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemAppointmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemAppointmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "appointmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AppointmentId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "appointmentId": {
            "type": "integer",
            "description": "Reference to Appointment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemAppointmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemAssignmentCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemAssignmentCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "assignmentCategoryId": {
            "type": "integer",
            "description": "Reference to AssignmentCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemAssignmentCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentCategoryIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemAssignmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemAssignmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemAssignmentParticipantDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemAssignmentParticipantId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentParticipantIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentParticipantId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "assignmentParticipantId": {
            "type": "integer",
            "description": "Reference to AssignmentParticipant  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemAssignmentParticipantUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentParticipantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentParticipantIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemAssignmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemBudgetDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemBudgetId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "budgetId": {
            "type": "integer",
            "description": "Reference to Budget  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemBudgetLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemBudgetLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetLineId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "budgetLineId": {
            "type": "integer",
            "description": "Reference to BudgetLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemBudgetLinePeriodDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemBudgetLinePeriodId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetLinePeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetLinePeriodId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "budgetLinePeriodId": {
            "type": "integer",
            "description": "Reference to BudgetLinePeriod  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemBudgetLinePeriodUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetLinePeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetLinePeriodIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemBudgetLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemBudgetScenarioDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemBudgetScenarioId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "budgetScenarioIdExternal": {
            "type": "string",
            "description": "External ID corresponding to BudgetScenarioId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "budgetScenarioId": {
            "type": "integer",
            "description": "Reference to BudgetScenario  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemBudgetScenarioUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetScenarioId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetScenarioIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemBudgetUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "budgetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "budgetIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemCheckAnySyncNeededParameters": {
        "type": "object",
        "additionalProperties": false
      },
      "ExternalSystemCheckAnySyncNeededResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "syncNeeded": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ExternalSystemCheckSyncNeededParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalSystemName": {
            "type": "string",
            "nullable": true
          },
          "syncAllRequest_Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemCheckSyncNeededResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "syncNeeded": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ExternalSystemConfigureSpeedyCraftParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemContactDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemContactId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "contactIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ContactId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "contactId": {
            "type": "integer",
            "description": "Reference to Contact  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemContactUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "contactId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contactIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemCustomerDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemCustomerId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemCustomerUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemDepartmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemDepartmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemDepartmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemDimensionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemDimensionUseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemDimensionUseId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "dimensionUseIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DimensionUseId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "dimensionUseId": {
            "type": "integer",
            "description": "Reference to DimensionUse  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemDimensionUseUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionUseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionUseIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemDimensionValueUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemDimensionValueUseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemDimensionValueUseId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueUseIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueUseId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "dimensionValueUseId": {
            "type": "integer",
            "description": "Reference to DimensionValueUse  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemDimensionValueUseUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "dimensionValueUseId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueUseIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemDto": {
        "type": "object",
        "description": "External systems such as payroll, ERP or handheld. Example: Visma Payroll, SpeedyCraft",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "integrationConfig": {
            "type": "string",
            "description": "Type: string?",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemExtraDatas": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemExtraDataDto"
            }
          }
        }
      },
      "ExternalSystemEmployeeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemEmployeeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemEmployeeInvoiceCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemEmployeeInvoiceCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "employeeInvoiceCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeInvoiceCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "description": "Reference to EmployeeInvoiceCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemEmployeeInvoiceCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeInvoiceCategoryIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemEmployeeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemExtraDataDto": {
        "type": "object",
        "description": "Key value list with data for external systems. Primarily used by integrations.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemExtraDataId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Type: string?",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemExtraDataUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemExtraDataId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemGetOrCreateExternalSystemIDParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "systemName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemGetOrCreateExternalSystemIDResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemGetSyncStatusAllParameters": {
        "type": "object",
        "additionalProperties": false
      },
      "ExternalSystemGetSyncStatusAllResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "syncName": {
            "type": "string",
            "nullable": true
          },
          "syncType": {
            "type": "string",
            "nullable": true
          },
          "syncIsRunning": {
            "type": "boolean",
            "nullable": true
          },
          "syncRequestedDateUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExternalSystemGetSyncStatusParameters": {
        "type": "object",
        "additionalProperties": false
      },
      "ExternalSystemGetSyncStatusResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "syncName": {
            "type": "string",
            "nullable": true
          },
          "syncType": {
            "type": "string",
            "nullable": true
          },
          "syncIsRunning": {
            "type": "boolean",
            "nullable": true
          },
          "syncRequestedDateUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ExternalSystemIndustryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemIndustryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemIndustryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemInvoiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemInvoiceId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "invoiceId": {
            "type": "integer",
            "description": "Reference to Invoice  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemInvoiceLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemInvoiceLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "invoiceLineId": {
            "type": "integer",
            "description": "Reference to InvoiceLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemInvoiceLineRuleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemInvoiceLineRuleId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineRuleId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "description": "Reference to InvoiceLineRule  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemInvoiceLineRuleUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemInvoiceLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemInvoiceTemplateDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemInvoiceTemplateDetailId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateDetailIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceTemplateDetailId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "invoiceTemplateDetailId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplateDetail  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemInvoiceTemplateDetailUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateDetailIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemInvoiceTemplateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemInvoiceTemplateId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "invoiceTemplateId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplate  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemInvoiceTemplateUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemInvoiceUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemJobCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemJobCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to JobCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "jobCategoryId": {
            "type": "integer",
            "description": "Reference to JobCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemJobCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemLedgerAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemLedgerAccountId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "ledgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "ledgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemLedgerAccountUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ledgerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ledgerAccountIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemPaymentTermDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemPaymentTermId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PaymentTermId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "paymentTermId": {
            "type": "integer",
            "description": "Reference to PaymentTerm  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemPaymentTermUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemPermissionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemPermissionId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "permissionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PermissionId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "permissionId": {
            "type": "integer",
            "description": "Reference to Permission  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemPermissionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProductAgreementDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProductAgreementDetailId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productAgreementDetailIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementDetailId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "productAgreementDetailId": {
            "type": "integer",
            "description": "Reference to ProductAgreementDetail  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProductAgreementDetailUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productAgreementDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productAgreementDetailIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProductAgreementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProductAgreementId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "productAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProductAgreementUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProductId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProductNoteDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProductNoteId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productNoteIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductNoteId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "productNoteId": {
            "type": "integer",
            "description": "Reference to ProductNote  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProductNoteLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProductNoteLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productNoteLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductNoteLineId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "productNoteLineId": {
            "type": "integer",
            "description": "Reference to ProductNoteLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProductNoteLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProductNoteUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProductSupplierIndustryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProductSupplierIndustryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to ProductSupplierIndustryType  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProductSupplierIndustryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProductUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProjectAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProjectAccountId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "projectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "projectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProjectAccountUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectAccountIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProjectDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProjectId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "projectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProjectGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProjectGroupId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "projectGroupIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectGroupId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "projectGroupId": {
            "type": "integer",
            "description": "Reference to ProjectGroup  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProjectGroupUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectGroupIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProjectPeriodDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProjectPeriodId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "projectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProjectPeriodUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProjectTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemProjectTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "projectTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectTypeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "projectTypeId": {
            "type": "integer",
            "description": "Reference to ProjectType  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemProjectTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemProjectUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemRequestSyncParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "syncType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemResetSyncFlagParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalSystemName": {
            "type": "string",
            "nullable": true
          },
          "syncAllRequest_Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemRoleId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "roleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RoleId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "roleId": {
            "type": "integer",
            "description": "Reference to Role  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemRolePermissionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemRolePermissionId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "rolePermissionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RolePermissionId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "rolePermissionId": {
            "type": "integer",
            "description": "Reference to RolePermission  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemRolePermissionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rolePermissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rolePermissionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemRoleUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roleIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemServiceAgreementDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemServiceAgreementDetailId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementDetailIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementDetailId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "serviceAgreementDetailId": {
            "type": "integer",
            "description": "Reference to ServiceAgreementDetail  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemServiceAgreementDetailUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementDetailIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemServiceAgreementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemServiceAgreementId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "serviceAgreementId": {
            "type": "integer",
            "description": "Reference to ServiceAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemServiceAgreementUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemServiceId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "serviceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "serviceId": {
            "type": "integer",
            "description": "Reference to Service  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemServiceUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemStockCountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemStockCountId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockCountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockCountId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "stockCountId": {
            "type": "integer",
            "description": "Reference to StockCount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemStockCountLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemStockCountLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockCountLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockCountLineId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "stockCountLineId": {
            "type": "integer",
            "description": "Reference to StockCountLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemStockCountLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockCountLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockCountLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemStockCountUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockCountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockCountIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemStockDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemStockId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "stockId": {
            "type": "integer",
            "description": "Reference to Stock  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemStockTransactionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemStockTransactionId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockTransactionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockTransactionId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "stockTransactionId": {
            "type": "integer",
            "description": "Reference to StockTransaction  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemStockTransactionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockTransactionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockTransactionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemStockUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemStorageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemStorageId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemStorageTransferDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemStorageTransferId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "storageTransferIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageTransferId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "storageTransferId": {
            "type": "integer",
            "description": "Reference to StorageTransfer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemStorageTransferUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageTransferId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageTransferIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemStorageUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemSupplierDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemSupplierId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "supplierId": {
            "type": "integer",
            "description": "Reference to Supplier  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemSupplierIndustryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemSupplierIndustryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemSupplierIndustryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemSupplierInvoiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemSupplierInvoiceId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "supplierInvoiceId": {
            "type": "integer",
            "description": "Reference to SupplierInvoice  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemSupplierInvoiceLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemSupplierInvoiceLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceLineId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "supplierInvoiceLineId": {
            "type": "integer",
            "description": "Reference to SupplierInvoiceLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemSupplierInvoiceLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemSupplierInvoiceUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemSupplierUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ExternalSystemSyncAllRequestedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalSystemName": {
            "type": "string",
            "nullable": true
          },
          "syncAllRequestFlags": {
            "type": "string",
            "nullable": true
          },
          "syncAllRequest_Name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemExtraDatas": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemExtraDataUpsertResultDto"
            }
          }
        }
      },
      "ExternalSystemUserRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemUserRoleId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "userRoleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to UserRoleId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "userRoleId": {
            "type": "integer",
            "description": "Reference to UserRole  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemUserRoleUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "userRoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userRoleIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemVATRateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemVATRateId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "vATRateId": {
            "type": "integer",
            "description": "Reference to VATRate  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemVATRateUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "vatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vatRateIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageCodeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemWageCodeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageCodeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "wageCodeId": {
            "type": "integer",
            "description": "Reference to WageCode  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageCodeReportCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemWageCodeReportCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageCodeReportCategoryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemWageCodeReportCategoryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "wageCodeReportCategoryTypeId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategoryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageCodeReportCategoryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "wageCodeReportCategoryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryTypeIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageCodeReportCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageCodeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "wageCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemWageGroupId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageGroupIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageGroupId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "wageGroupId": {
            "type": "integer",
            "description": "Reference to WageGroup  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageGroupUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "wageGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageGroupIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemWagePeriodDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemWagePeriodId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "wagePeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WagePeriodId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "wagePeriodId": {
            "type": "integer",
            "description": "Reference to WagePeriod  \r\nType: int?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemWagePeriodUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "wagePeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wagePeriodIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageRateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemWageRateId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageRateId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "wageRateId": {
            "type": "integer",
            "description": "Reference to WageRate  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageRateEmployeeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "externalSystemWageRateEmployeeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageRateEmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageRateEmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "The entity ID in the external system. Primarily used for syncing entities in integrations.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Time spent on the last successful or unsuccessful data transfer to an external system.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          },
          "wageRateEmployeeId": {
            "type": "integer",
            "description": "Reference to WageRateEmployee  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageRateEmployeeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "wageRateEmployeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageRateEmployeeIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExternalSystemWageRateUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "wageRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageRateIdExternal": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FileDownloadModeEnum": {
        "type": "string",
        "enum": [
          "AutoDetect",
          "LegacyFTP",
          "SFTP",
          "FTPS"
        ]
      },
      "Filter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        }
      },
      "GetAssignmentIdsForChangedAssignmentDimensionUseAggregatesResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "GetCustomerIdsForChangedCustomerAddressContactAggregatesResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "rowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "GetDimensionsMetaDataResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dimensionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "columnId": {
            "type": "string",
            "nullable": true
          },
          "headerName": {
            "type": "string",
            "nullable": true
          },
          "enum_DimensionLevelId": {
            "$ref": "#/components/schemas/DimensionLevelEnum"
          },
          "allowedValues": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          }
        }
      },
      "GetIntegrationSyncStatusFromCacheRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "integrationName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetInvoiceResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assignmentNumber": {
            "type": "integer",
            "format": "int32"
          },
          "internalReference": {
            "type": "string",
            "nullable": true
          },
          "externalReference": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "projectName": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerReference": {
            "type": "string",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentTermDescription": {
            "type": "string",
            "nullable": true
          },
          "wholesalerName": {
            "type": "string",
            "nullable": true
          },
          "storageName": {
            "type": "string",
            "nullable": true
          },
          "vatFree": {
            "type": "boolean"
          },
          "updateStorage": {
            "type": "boolean"
          },
          "costToAssignment": {
            "type": "boolean"
          },
          "overrideWholesaler": {
            "type": "boolean"
          },
          "invoiceComment": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "invoiceTotal": {
            "type": "number",
            "format": "decimal"
          },
          "totalCost": {
            "type": "number",
            "format": "decimal"
          },
          "coverage": {
            "type": "number",
            "format": "decimal"
          },
          "weekNumber": {
            "type": "integer",
            "format": "int32"
          },
          "periodNumber": {
            "type": "integer",
            "format": "int32"
          },
          "enum_InvoiceStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "fixedPriceAmount": {
            "type": "number",
            "format": "decimal"
          },
          "invoice_CustomerId": {
            "type": "integer",
            "format": "int32"
          },
          "invoice_CustomerName": {
            "type": "string",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "canEditDates": {
            "type": "boolean"
          },
          "useDimensions": {
            "type": "boolean"
          },
          "customerComment": {
            "type": "string",
            "nullable": true
          },
          "assignmentDescription": {
            "type": "string",
            "nullable": true
          },
          "attachServiceListAsPDF": {
            "type": "boolean"
          }
        }
      },
      "ImportFileDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "importFileId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "autoImport": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "azureBlobIdExt": {
            "type": "string",
            "description": "Type: string? (Max: 255)",
            "nullable": true
          },
          "downloadedDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "importedDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "importMessage": {
            "type": "string",
            "description": "Type: string?",
            "nullable": true
          },
          "localHashCode": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "remainingDownloadTryCount": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "remainingImportTryCount": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "sourceAutoDeleteAfterImport": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sourceDeletedDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sourceFileName": {
            "type": "string",
            "description": "Type: string? (Max: 255)",
            "nullable": true
          },
          "sourceFileSize": {
            "type": "integer",
            "description": "Type: long?",
            "format": "int64",
            "nullable": true
          },
          "sourceHashCode": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "sourceLastUpdatedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "supplierIndustryTypeFtpInfoId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryTypeFtpInfo  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_ImportFormatId": {
            "$ref": "#/components/schemas/ImportFormatEnum"
          },
          "enum_ImportStatusId": {
            "$ref": "#/components/schemas/ImportStatusEnum"
          },
          "enum_ImportTypeId": {
            "$ref": "#/components/schemas/ImportTypeEnum"
          }
        }
      },
      "ImportFileUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "importFileId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ImportFormatEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "RsKalk",
          "BrDahl",
          "Comfort",
          "PrisCon",
          "Nelfo4",
          "BrDahlXml",
          "Synergo",
          "Custom"
        ]
      },
      "ImportFrequencyEnum": {
        "type": "string",
        "enum": [
          "Manual",
          "Month",
          "Week",
          "Day"
        ]
      },
      "ImportInvoiceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ImportInvoiceWithDataCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vatFree": {
            "type": "boolean"
          }
        }
      },
      "ImportStatusEnum": {
        "type": "string",
        "enum": [
          "AwaitingManualApproval",
          "ReadyForDownload",
          "DownloadStarted",
          "Downloaded",
          "ReadyForImport",
          "ImportStarted",
          "ImportCompletedOK",
          "FailedImport",
          "FailedDownload",
          "FailedTimeout",
          "FailedUnknown",
          "AwaitingProducts"
        ]
      },
      "ImportTypeEnum": {
        "type": "string",
        "enum": [
          "AutoDetect",
          "ProductCatalog",
          "ProductAgreement",
          "Autofakt",
          "PurchaseOrder",
          "PurchaseOrderConfirmation"
        ]
      },
      "IndexRateGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "indexRateGroupId": {
            "type": "integer",
            "description": "__Primary key__  \r\n__When creating records:__ ___Mandatory___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "indexRate": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          }
        }
      },
      "IndexRateGroupUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "indexRateGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "IndustryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "industryTypeNumber": {
            "type": "integer",
            "description": "Type: byte?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_BoligmappaIndustryTypeId": {
            "$ref": "#/components/schemas/BoligmappaIndustryTypeEnum"
          },
          "enum_IndustryTypeId": {
            "$ref": "#/components/schemas/IndustryTypeEnum"
          },
          "externalSystemIndustryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemIndustryTypeDto"
            }
          }
        }
      },
      "IndustryTypeEnum": {
        "type": "string",
        "enum": [
          "Undefined",
          "Electrician",
          "Plumber",
          "AdvisingEngineer",
          "Carpenter",
          "Painter",
          "Mason",
          "Tinsmith",
          "Contractor",
          "Appraisal",
          "RealEstateAgent",
          "Insurance",
          "Architect",
          "HousingProducer",
          "Builder",
          "LandscapingGardener",
          "Ventilation",
          "Government",
          "LocalElectricityAuthority",
          "MachineContractor",
          "FireAndChimneysweep",
          "RoofContractor",
          "HeatPump",
          "Glazier",
          "FireSecurity",
          "Furnishings",
          "Fencing",
          "SeaContracting"
        ]
      },
      "IndustryTypeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "IndustryTypeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "industryTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IndustryTypePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "industryTypeNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "IndustryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemIndustryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemIndustryTypeUpsertResultDto"
            }
          }
        }
      },
      "InsertInvoiceLines_SessionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineSessionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceLineCode": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineText": {
            "type": "string",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "quantityInvoice": {
            "type": "number",
            "format": "decimal"
          },
          "salesPriceInvoice": {
            "type": "number",
            "format": "decimal"
          },
          "storageId": {
            "type": "integer",
            "format": "int32"
          },
          "surchargePercentInvoice": {
            "type": "number",
            "format": "decimal"
          },
          "updateAssignmentCost": {
            "type": "boolean"
          },
          "updateStock": {
            "type": "boolean"
          }
        }
      },
      "IntegratedSystemConfigDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "integratedSystemConfigId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Type: string?",
            "nullable": true
          },
          "enum_IntegratedSystemTypeId": {
            "$ref": "#/components/schemas/IntegratedSystemTypeEnum"
          }
        }
      },
      "IntegratedSystemConfigUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "integratedSystemConfigId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "IntegratedSystemTypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "VismaNetErp",
          "VismaPayroll",
          "Tripletex",
          "UniEconomy",
          "SpeedyCraft"
        ]
      },
      "IntegrationGetSyncEventsParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "IntegrationGetSyncEventsResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "syncEventId": {
            "type": "integer",
            "format": "int32"
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rowId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "createOperation": {
            "type": "boolean"
          }
        }
      },
      "IntegrationRemoveSyncEventsParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "syncEventId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IntegrationSpeedycraftGetSkeletonIdsToSyncParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "IntegrationStatusDto": {
        "type": "object",
        "description": "Contains integration issues for all integrations.   \r\n  \r\nRows inserted into this table will auto-generate corresponding rows in SystemMessage and set Sys_RowStatus on corresponding rows.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "integrationStatusId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nAssignment ID to associate the message with if no more detailed row is available.  \r\nExample: Unable to create product note.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "attemptCount": {
            "type": "integer",
            "description": "Automatically counted times the issue has been registered.  \r\n__When creating records:__ ___Default value = 1___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attemptsLeft": {
            "type": "integer",
            "description": "Automatically counted down to 0 if the issue is re-registered.  \r\n__When creating records:__ ___Default value = 5___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalEditURL": {
            "type": "string",
            "description": "Set by the integration if known when setting the IntegrationStatus.  \r\nType: string? (Max: 200)",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "(Technical) ID from the integrated system.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalIdText": {
            "type": "string",
            "description": "Human-readable ID from the external system. Example: SupplierInvoice number.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalTraceId": {
            "type": "string",
            "description": "Same as TraceID, but for looking up logs in external systems where available.  \r\nType: string? (Max: 100)",
            "nullable": true
          },
          "fieldName": {
            "type": "string",
            "description": "The referenced field, if known. Example: Email.  \r\nType: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "description": "Represents a group of IntegrationStatus lines.   \r\n  \r\nWhen auto-deleting IntegrationStatus lines, RowID / RowID2 can be excluded, and GroupID provided instead. All rows matching the GroupID within the given ExternalSystemID, Operation and TableName will be removed.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "internalEditURL": {
            "type": "string",
            "description": "Set by the integration if known when setting the IntegrationStatus. If not provided, the API will calculate a relative URL for this where possible during postprocessing.  \r\n  \r\nExample: client/a-anonymisert/pages/assignment/17863/information  \r\nType: string? (Max: 200)",
            "nullable": true
          },
          "internalIdText": {
            "type": "string",
            "description": "Human-readable ID from Contracting. Example: Assignment number.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "description": "The operation performed when the issue was found, for example InvoiceSync.  \r\n__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "rawMessage": {
            "type": "string",
            "description": "Raw error message, untranslated. Still safe for users, so does not contain any secrets.  \r\nIntended for end-user consumption, so should not contain exception messages etc.  \r\nType: string?",
            "nullable": true
          },
          "retryRequested": {
            "type": "boolean",
            "description": "When set to 1, indicates that a user explicitly wishes to retry the operation.   \r\n  \r\nUseful in cases where an automatic retry is not triggered, for example if an error was caused by related data not part of the root aggregate.  \r\n  \r\nExample: Assignment sync failing due to something being wrong with a department. Fixing the issue on the department will not necessarily trigger a change on assignments.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "rowId": {
            "type": "integer",
            "description": "Identifies the entity row. For composite keys, identifies the row together with RowID2.  \r\nType: long?",
            "format": "int64",
            "nullable": true
          },
          "rowId2": {
            "type": "integer",
            "description": "Represents the second part of a composite key identifying a row. For tables like AssignmentParticipant, the AssignmentID will be represented by RowID, while RowID2 will represent the EmployeeID. This is implicitly defined by TableName.  \r\nType: long?",
            "format": "int64",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "description": "The name of the table representing the synced entity. Examples: Customer, Invoice.  \r\nType: string? (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "technicalMessage": {
            "type": "string",
            "description": "Technical error description, intended to help developers, support and similar to identify the ongoing issue.  \r\n  \r\nMay contain exception messages or similar texts.  \r\nType: string?",
            "nullable": true
          },
          "textId": {
            "type": "string",
            "description": "Translatable text, corresponding to TextIDs in the Texts database.  \r\nType: string? (Max: 200)",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The TraceID is also used in the logs, and can be used by support to find more details on the given issue.  \r\nType: string? (Max: 100)",
            "nullable": true
          },
          "userComment": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "userOk": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          }
        }
      },
      "IntegrationStatusIncomingMoveAndProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "IntegrationStatusIncomingMoveAndProcessResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalProcessed": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "IntegrationStatusUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "integrationStatusId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "IntegrationStatus_IncomingDto": {
        "type": "object",
        "description": "Contains integration issues for all integrations.   \r\n  \r\nRows inserted into this table will auto-generate corresponding rows in SystemMessage and set Sys_RowStatus on corresponding rows.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "integrationStatus_IncomingId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "externalEditURL": {
            "type": "string",
            "description": "Set by the integration if known when setting the IntegrationStatus.  \r\nType: string? (Max: 200)",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "(Technical) ID from the integrated system.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalIdText": {
            "type": "string",
            "description": "Human-readable ID from the external system. Example: SupplierInvoice number.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "externalTraceId": {
            "type": "string",
            "description": "Same as TraceID, but for looking up logs in external systems where available.  \r\nType: string? (Max: 100)",
            "nullable": true
          },
          "fieldName": {
            "type": "string",
            "description": "The referenced field, if known. Example: Email.  \r\nType: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "description": "Represents a group of IntegrationStatus lines.   \r\n  \r\nWhen auto-deleting IntegrationStatus lines, RowID / RowID2 can be excluded, and GroupID provided instead. All rows matching the GroupID within the given ExternalSystemID, Operation and TableName will be removed.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "integratorId": {
            "type": "integer",
            "description": "Reference to Integrator  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "internalEditURL": {
            "type": "string",
            "description": "Set by the integration if known when setting the IntegrationStatus. If not provided, the API will calculate a relative URL for this where possible during postprocessing.  \r\n  \r\nExample: client/a-anonymisert/pages/assignment/17863/information  \r\nType: string? (Max: 200)",
            "nullable": true
          },
          "internalIdText": {
            "type": "string",
            "description": "Human-readable ID from Contracting. Example: Assignment number.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "description": "The operation performed when the issue was found, for example InvoiceSync.  \r\n__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "rawMessage": {
            "type": "string",
            "description": "Raw error message, untranslated. Still safe for users, so does not contain any secrets.  \r\nIntended for end-user consumption, so should not contain exception messages etc.  \r\nType: string?",
            "nullable": true
          },
          "rowId": {
            "type": "integer",
            "description": "Identifies the entity row. For composite keys, identifies the row together with RowID2.  \r\nType: long?",
            "format": "int64",
            "nullable": true
          },
          "rowId2": {
            "type": "integer",
            "description": "Represents the second part of a composite key identifying a row. For tables like AssignmentParticipant, the AssignmentID will be represented by RowID, while RowID2 will represent the EmployeeID. This is implicitly defined by TableName.  \r\nType: long?",
            "format": "int64",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "description": "The name of the table representing the synced entity. Examples: Customer, Invoice.  \r\nType: string? (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "technicalMessage": {
            "type": "string",
            "description": "Technical error description, intended to help developers, support and similar to identify the ongoing issue.  \r\n  \r\nMay contain exception messages or similar texts.  \r\nType: string?",
            "nullable": true
          },
          "textId": {
            "type": "string",
            "description": "Translatable text, corresponding to TextIDs in the Texts database.  \r\nType: string? (Max: 200)",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The TraceID is also used in the logs, and can be used by support to find more details on the given issue.  \r\nType: string? (Max: 100)",
            "nullable": true
          },
          "next_Enum_RowStateId": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "IntegrationStatus_IncomingUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "integrationStatus_IncomingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "InvoiceAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "invoiceAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "description": "Reference to Invoice  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "InvoiceAttachmentUploadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "InvoiceAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "InvoiceCalculateTotalsParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "InvoiceCalculateTotalsResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceTotal": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "coverage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "InvoiceCancelParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "InvoiceCancelResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "debtorCustomerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DebtorCustomerId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "parentInvoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ParentInvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PaymentTermId for the current ExternalSystem",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "attachServiceListAsPDF": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "debtorCustomerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "grossAmount": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "invoiceComment": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "Obsolete: Currently contains registered date, replaced by RegisteredUTC.  \r\nType: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "invoicedUTC": {
            "type": "string",
            "description": "Formal invoice date. The invoice number gets set at this time. This is the basis for project period.  \r\nType: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "isCreditNote": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isFinalInvoice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "netAmount": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "parentInvoiceId": {
            "type": "integer",
            "description": "Reference to Invoice  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "description": "Reference to PaymentTerm  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "registeredUTC": {
            "type": "string",
            "description": "The invoice was registered in Contracting.Works. Usually identical to Sys_CreatedDateUTC.  \r\nType: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "remainingAmount": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sentUTC": {
            "type": "string",
            "description": "When the invoice is actually sent to the customer.  \r\nType: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "transferredUTC": {
            "type": "string",
            "description": "The invoice was transferred successfully to the economy system.  \r\nType: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "vATFree": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_InvoiceStatusId": {
            "$ref": "#/components/schemas/InvoiceStatusEnum"
          },
          "externalSystemInvoices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceDto"
            }
          },
          "invoiceAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InvoiceAttachmentDto"
            }
          },
          "invoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InvoiceLineDto"
            }
          }
        }
      },
      "InvoiceExecuteDimensionInvoiceTemplateParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "invoiceComment": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "dimensionValues": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InvoiceExecuteDimensionInvoiceTemplateResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "wasCreated": {
            "type": "boolean"
          }
        }
      },
      "InvoiceExecuteInvoiceRuleParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "insertAtRowIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "returnResult": {
            "type": "boolean",
            "nullable": true
          },
          "invoiceComment": {
            "type": "string",
            "nullable": true
          },
          "reapplyRule": {
            "type": "boolean",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "invoicingDimensionValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "InvoiceExecuteInvoiceRuleResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "wasCreated": {
            "type": "boolean"
          }
        }
      },
      "InvoiceExecuteInvoiceTemplateParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "invoiceComment": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InvoiceExecuteInvoiceTemplateResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "wasCreated": {
            "type": "boolean"
          }
        }
      },
      "InvoiceGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "InvoiceGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceLine": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineCode": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineText": {
            "type": "string",
            "nullable": true
          },
          "quantityInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercentInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "enum_InvoiceLineRuleTypeDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "combined_InvoiceLineRuleCode_Description": {
            "type": "string",
            "nullable": true
          },
          "supplierIndustryTypeName": {
            "type": "string",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fieldAttributesByJson": {
            "type": "string",
            "nullable": true
          },
          "sourceServiceIds": {
            "type": "string",
            "nullable": true
          },
          "sourceProductNoteLineIds": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InvoiceLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineId for the current ExternalSystem",
            "nullable": true
          },
          "cost_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_1External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_1 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_2External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_2 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_3External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_3 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_4External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_4 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_5External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_5 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_6External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_6 for the current ExternalSystem",
            "nullable": true
          },
          "income_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "income_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceLineRuleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineRuleId for the current ExternalSystem",
            "nullable": true
          },
          "invoicingDimensionValueIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoicingDimensionValueId for the current ExternalSystem",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "serviceAgreementDetailIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementDetailId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "basisSumPercentInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "cost_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_1": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_2": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_3": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_4": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_5": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_6": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "income_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "income_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineCode": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "description": "Reference to InvoiceLineRule  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineText": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string",
            "nullable": true
          },
          "invoicingDimensionValueId": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "isFixedPrice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isVarious": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "priceOnly": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to ProductSupplierIndustryType  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\nThe project period will be auto-filled in based on the parent invoices InvoicedUTC field if it is missing. Special permissions are needed to alter the project period on an existing record.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "quantityInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "registeredDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "salesPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "serviceAgreementDetailId": {
            "type": "integer",
            "description": "Reference to ServiceAgreementDetail  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sourceProductNoteLineIds": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sourceServiceIds": {
            "type": "string",
            "description": "Type: string?",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "surchargePercentInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_AssignmentId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_InvoiceNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_ProjectAccountCategoryId": {
            "type": "integer",
            "description": "Type: byte?",
            "format": "int32",
            "nullable": true
          },
          "sys_ProjectPeriod": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "updateAssignmentCost": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "updateStock": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "vATFree": {
            "type": "boolean",
            "description": "This field, together with account information, is caculated when the invoice is sent (sendInvoice is called)  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "vATRateId": {
            "type": "integer",
            "description": "Reference to VATRate  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "enum_InvoiceLineTypeId": {
            "$ref": "#/components/schemas/InvoiceLineTypeEnum"
          },
          "sys_Enum_InvoiceLineRuleTypeDetailId": {
            "$ref": "#/components/schemas/InvoiceLineRuleTypeDetailEnum"
          },
          "invoiceId": {
            "type": "integer",
            "description": "Reference to Invoice  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "externalSystemInvoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceLineDto"
            }
          }
        }
      },
      "InvoiceLineGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "InvoiceLineGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceLinePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "InvoiceLineRuleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineRuleId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "income_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "sale_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Sale_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "sale_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Sale_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "externalInvoiceLineCode": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "income_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleCode": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "invoiceLineTextEditable": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "notUseOnFixedPrice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "override_InvoiceLineCode": {
            "type": "string",
            "description": "When set, the create invoice lines will get this code instead of ILR_ + InvoiceLineRuleCode. This allows for example setting hour lines to a specific product, thus emulating the old behaviour where hours were invoiced on product -1000.  \r\nType: string? (Max: 100)",
            "nullable": true
          },
          "override_InvoiceLineText": {
            "type": "string",
            "description": "Type: string? (Max: 200)",
            "nullable": true
          },
          "priceOnly": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sale_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sale_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "salesPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "vATRateId": {
            "type": "integer",
            "description": "Reference to VATRate  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "wageType_CarExpenses": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageType_Diet": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageType_OrdinaryWage": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageType_Overtime": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageType_TravelExpenses": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageType_VariousExtra": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_InvoiceLineRuleTypeDetailId": {
            "$ref": "#/components/schemas/InvoiceLineRuleTypeDetailEnum"
          },
          "enum_InvoiceLineRuleTypeId": {
            "$ref": "#/components/schemas/InvoiceLineRuleTypeEnum"
          },
          "externalSystemInvoiceLineRules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceLineRuleDto"
            }
          }
        }
      },
      "InvoiceLineRuleGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "InvoiceLineRuleGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvoiceLineRulePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleCode": {
            "type": "string",
            "nullable": true
          },
          "enum_InvoiceLineRuleTypeDetailId": {
            "$ref": "#/components/schemas/InvoiceLineRuleTypeDetailEnum"
          },
          "enum_InvoiceLineRuleTypeId": {
            "$ref": "#/components/schemas/InvoiceLineRuleTypeEnum"
          }
        }
      },
      "InvoiceLineRuleTypeDetailEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "ServicePerWageCode",
          "ServicePerInvoiceCategory",
          "ServicePerInvoiceCategoryAndWageCode",
          "ServicePerRate",
          "ServiceTotal",
          "ServicePerEmployee",
          "MaterialProductNoteDetail",
          "MaterialProductNote",
          "MaterialFromInvoiceAppendix",
          "MaterialProductNoteWithDetails",
          "MaterialProductNoteDetailLastPriceOnProduct",
          "MaterialProductNoteLastPriceOnProduct",
          "MaterialFromInvoiceAppendixLastPriceOnProduct",
          "MaterialProductNoteWithDetailsLastPriceOnProduct",
          "BasisSum",
          "BasisSumWithReset",
          "BasisManualEntry",
          "BasisNotInvoicedWork",
          "BasisReset",
          "SumOne",
          "SumOneWithReset",
          "SumTwo",
          "SumTwoWithReset",
          "SumOneReset",
          "SumTwoReset",
          "TextFromAssignmentByInvoiceType",
          "TextManualInput",
          "TextFromProcessingCode",
          "TextFromAssignmentInvoiceText",
          "TextFromAssignmentLocation",
          "TextFromAssignmentReference",
          "TextFromAssignmentDescription",
          "TextFromProjectName",
          "VariousPayroll",
          "AmountManualEntry",
          "AmountFromAgreement",
          "AmountFromInvoiced",
          "AmountFromInvoicedPerInvoice",
          "AmountFromAgreementAsText",
          "AmountFromInvoicedAsText",
          "AmountFromInvoicedPerInvoiceAsText",
          "AmountFromToBeInvoiced",
          "AmountFromToBeInvoicedAsText"
        ]
      },
      "InvoiceLineRuleTypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "Service",
          "Material",
          "Basis",
          "Sum",
          "Text",
          "VariousPayroll",
          "Amount"
        ]
      },
      "InvoiceLineRuleUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemInvoiceLineRules": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceLineRuleUpsertResultDto"
            }
          }
        }
      },
      "InvoiceLineTypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "Normal",
          "Text",
          "Sum",
          "Func",
          "Hidden"
        ]
      },
      "InvoiceLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemInvoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceLineUpsertResultDto"
            }
          }
        }
      },
      "InvoiceReserveBilledPriceCalculationEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "TimeMatAgreement",
          "FixedCoverage",
          "CoveragePerHour",
          "MarkupOnCost"
        ]
      },
      "InvoiceReserveFixedPriceCalculationEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "EnteredCompletion",
          "FixedCoverage",
          "CoveragePerHour",
          "MarkupOnCost"
        ]
      },
      "InvoiceStatusEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "Ready",
          "Invoiced",
          "Processing",
          "Error",
          "MovedToStorage"
        ]
      },
      "InvoiceTemplateDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "invoiceTemplateDetailId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateDetailIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceTemplateDetailId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceLineRuleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineRuleId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "description": "Reference to InvoiceLineRule  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplate  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalSystemInvoiceTemplateDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceTemplateDetailDto"
            }
          }
        }
      },
      "InvoiceTemplateDetailUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "invoiceTemplateDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateDetailIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemInvoiceTemplateDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceTemplateDetailUpsertResultDto"
            }
          }
        }
      },
      "InvoiceTemplateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "invoiceTemplateNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemInvoiceTemplates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceTemplateDto"
            }
          },
          "invoiceTemplateDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InvoiceTemplateDetailDto"
            }
          }
        }
      },
      "InvoiceTemplatePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceTemplateNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "InvoiceTemplateUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceTemplateIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemInvoiceTemplates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceTemplateUpsertResultDto"
            }
          },
          "invoiceTemplateDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InvoiceTemplateDetailUpsertResultDto"
            }
          }
        }
      },
      "InvoiceUpdateProductNoteLineParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantityInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "InvoiceUpdateProductNoteLineResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sys_RowState": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "InvoiceUpsertInvoiceLineSessionParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineSessionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineCode": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineText": {
            "type": "string",
            "nullable": true
          },
          "quantityInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercentInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registeredDateTimeUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updateAssignmentCost": {
            "type": "boolean",
            "nullable": true
          },
          "updateStock": {
            "type": "boolean",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "returnResult": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "InvoiceUpsertInvoiceLineSessionResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineSessionId": {
            "type": "integer",
            "format": "int32"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "InvoiceUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemInvoices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemInvoiceUpsertResultDto"
            }
          },
          "invoiceAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InvoiceAttachmentUpsertResultDto"
            }
          },
          "invoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/InvoiceLineUpsertResultDto"
            }
          }
        }
      },
      "InvoicingLineStatusEnum": {
        "type": "string",
        "enum": [
          "ToBeInvoiced",
          "OnInvoice",
          "Invoiced",
          "DoNotInvoiceConvertedToFixedPrice",
          "DoNotInvoiceFixedPrice",
          "BilledButNotInvoiced",
          "DoNotForwardInvoice",
          "NotForInvoicing",
          "NotForInvoicingMoved"
        ]
      },
      "JobCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to JobCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)  \r\nValidation: Name",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Type: short?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemJobCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemJobCategoryDto"
            }
          }
        }
      },
      "JobCategoryGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "JobCategoryGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "jobCategoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "JobCategoryPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "JobCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemJobCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemJobCategoryUpsertResultDto"
            }
          }
        }
      },
      "LastRowVersionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "lastRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "maxId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "LastRowVersionsRequestDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tableNames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LastRowVersionsResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lastRowVersions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LastRowVersionDto"
            }
          }
        }
      },
      "LedgerAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "ledgerAccountId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "ledgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "parentLedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ParentLedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "projectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "ledgerAccountNumber": {
            "type": "integer",
            "description": "Type: int?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "parentLedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "projectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemLedgerAccounts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemLedgerAccountDto"
            }
          }
        }
      },
      "LedgerAccountGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "LedgerAccountGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ledgerAccountId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LedgerAccountUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "ledgerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ledgerAccountIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemLedgerAccounts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemLedgerAccountUpsertResultDto"
            }
          }
        }
      },
      "MOM_TypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "MOM",
          "UserManual"
        ]
      },
      "MapDataDto": {
        "type": "object",
        "description": "Mapping of external values (through MapDataValue) with Contracting values.  \r\nAllows for mapping e.g. mapping general ledger accounts between systems.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "mapDataId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "applyDoneUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "applyStartedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "entityId": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: long",
            "format": "int64",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "isInUse": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "mapDataValueId": {
            "type": "integer",
            "description": "Reference to MapDataValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "suggested_MapDataValueId": {
            "type": "integer",
            "description": "Reference to MapDataValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          }
        }
      },
      "MapDataPrepareParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clearExistingData": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "MapDataUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "mapDataId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "MapDataValueDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "mapDataValueId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "descriptionPart1": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "descriptionPart2": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          }
        }
      },
      "MapDataValueUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "mapDataValueId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "MaxRowVersionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "maxRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "MessageChannelEnum": {
        "type": "string",
        "enum": [
          "NotDefined",
          "SMS"
        ]
      },
      "MessageDeliveryStatusEnum": {
        "type": "string",
        "enum": [
          "OutboundDraft",
          "OutboundReadyForSend",
          "OutboundSendStarted",
          "OutboundSendFailed",
          "OutboundSent",
          "OutboundReceived",
          "OutboundRead",
          "InboundReceived",
          "InboundReadByUser"
        ]
      },
      "MessageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "textId": {
            "type": "string",
            "nullable": true
          },
          "columnState": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NotificationTypeEnum": {
        "type": "string",
        "enum": [
          "General",
          "System",
          "Support",
          "ContactMessage"
        ]
      },
      "OriginTypeEnum": {
        "type": "string",
        "enum": [
          "Manual",
          "HandTerminal",
          "Hpc",
          "AutoFakt",
          "Purchase",
          "IncomingInvoice",
          "PurchaseThroghHpc",
          "InvoiceManager",
          "VismaDocCenter",
          "DigiPenn",
          "NelfoR",
          "Pos",
          "ToStorage",
          "ToAssignment",
          "FromAssignment",
          "FromInvoice",
          "OldRecords"
        ]
      },
      "ParticipantStatusEnum": {
        "type": "string",
        "enum": [
          "Assigned",
          "Synced",
          "Viewed",
          "Working",
          "ActiveViewed",
          "ActiveWorking",
          "Removed",
          "Finished"
        ]
      },
      "PaymentTermDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PaymentTermId for the current ExternalSystem",
            "nullable": true
          },
          "days": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "daysStartNextMonth": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemPaymentTerms": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemPaymentTermDto"
            }
          }
        }
      },
      "PaymentTermGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "PaymentTermGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paymentTermId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaymentTermUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemPaymentTerms": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemPaymentTermUpsertResultDto"
            }
          }
        }
      },
      "PayrollFormatEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "VismaSalary",
          "HuldtLillevikV5",
          "UniMicro",
          "PowerOfficeGO",
          "VismaSalaryWithoutWageRate",
          "VismaSalaryWithoutDateAndPeriod",
          "VismaSalaryWithoutWageRateDateAndPeriod"
        ]
      },
      "PerformedAction": {
        "type": "string",
        "enum": [
          "Unknown",
          "Insert",
          "Update",
          "Delete",
          "NoAction"
        ]
      },
      "PermissionDto": {
        "type": "object",
        "description": "Permissions in use on the client. Note that API permissions with name on the format AccessType.TableName.ColumnName are automatically supported for regular read and write operations. AccessType is either Read, Write or ReadWrite. The ColumnName may be exluded, in which case the permission applies to all columns in the table. TableName may also refer to a View. The ReportIfMissing flag is expected to be set on automatically supported permissions.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "permissionId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "permissionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PermissionId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "isForFrontend": {
            "type": "boolean",
            "description": "This permission is frontend-specific, and will be provided to the FE on request. If false, it is considered API-internal. To control both FE and the API, create two permissions and add them both to the same role.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "reportIfMissing": {
            "type": "boolean",
            "description": "When checking permissions, this permission will be reported if it is missing rather than if it is present on a user. This is to reduce the amount of permission info returned to the API / frontend for a given user.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemPermissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemPermissionDto"
            }
          }
        }
      },
      "PermissionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "permissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "permissionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemPermissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemPermissionUpsertResultDto"
            }
          }
        }
      },
      "PieceworkTypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "HourlyWage",
          "PieceworkBaseWage",
          "PieceworkDaytime",
          "PieceworkRegisteredHours",
          "PieceworkHoursFixedSalary",
          "PieceworkAdvance",
          "PieceworkSettlement",
          "VariousSpecial"
        ]
      },
      "PreProcessDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "column": {
            "type": "string",
            "nullable": true
          },
          "textID": {
            "type": "string",
            "nullable": true
          },
          "suggestedValue": {
            "type": "string",
            "nullable": true
          },
          "columnState": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "validations": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PreProcessInvoiceLineCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductAgreementDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productAgreementDetailId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productAgreementDetailIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementDetailId for the current ExternalSystem",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "extraSurchargePercent": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "from": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "fromNumeric": {
            "type": "integer",
            "description": "Type: long?",
            "format": "int64",
            "nullable": true
          },
          "fullFrom": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "fullTo": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercentIsVisible": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "toNumeric": {
            "type": "integer",
            "description": "Type: long?",
            "format": "int64",
            "nullable": true
          },
          "enum_ProductAgreementDetail_PriceTypeId": {
            "$ref": "#/components/schemas/ProductAgreementDetail_PriceTypeEnum"
          },
          "productAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalSystemProductAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductAgreementDetailDto"
            }
          }
        }
      },
      "ProductAgreementDetailGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProductAgreementDetailGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productAgreementDetailId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductAgreementDetailUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productAgreementDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productAgreementDetailIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProductAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductAgreementDetailUpsertResultDto"
            }
          }
        }
      },
      "ProductAgreementDetail_PriceTypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "SalesPrice",
          "SupplierPrice",
          "CostPrice",
          "CostPriceFromPurchaseAgreement",
          "CostPriceFromStock"
        ]
      },
      "ProductAgreementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "usePriceFrom_SupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to UsePriceFrom_SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "calculateFromInvoice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Type: short?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "usePriceFrom_SupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "externalSystemProductAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductAgreementDto"
            }
          },
          "productAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductAgreementDetailDto"
            }
          }
        }
      },
      "ProductAgreementGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProductAgreementGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productAgreementId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductAgreementPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductAgreementUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProductAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductAgreementUpsertResultDto"
            }
          },
          "productAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductAgreementDetailUpsertResultDto"
            }
          }
        }
      },
      "ProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "income_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "pOSPurchase_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSPurchase_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "pOSPurchase_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSPurchase_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "pOSSale_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSSale_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "pOSSale_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSSale_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "purchase_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Purchase_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "purchase_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Purchase_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "sale_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Sale_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "sale_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Sale_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "description": "Reference to Country  \r\nType: string? (Max: 2)",
            "nullable": true
          },
          "gTIN": {
            "type": "integer",
            "description": "Type: long?",
            "format": "int64",
            "nullable": true
          },
          "income_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "invoiceMergeProduct": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceShowProductNumber": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isVarious": {
            "type": "boolean",
            "description": "No: \"Diversevare\", will not be merged on invoices  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "pOSPurchase_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "pOSPurchase_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "pOSSale_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "pOSSale_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "priceOnly": {
            "type": "boolean",
            "description": "This always has quantity 1, which should be auto-set to 1 on product note details. This 1 must be disabled on product note details.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "purchase_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "purchase_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sale_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sale_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "salesPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "statisticsInclude": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "description": "Type: string? (Max: 3)",
            "nullable": true
          },
          "vATRateId": {
            "type": "integer",
            "description": "Reference to VATRate  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "externalSystemProducts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductDto"
            }
          },
          "productExtendedInfos": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductExtendedInfoDto"
            }
          }
        }
      },
      "ProductExtendedInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productExtendedInfoId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "0: Picture  \r\n1: FDV  \r\n2: HMS  \r\n....  \r\n__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductExtendedInfoUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productExtendedInfoId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProductGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProductGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductImportDto": {
        "type": "object",
        "description": "Represents a file which is part of a file set.  \r\n  \r\nWhen an import succeeds, the LastSuccess fields are filled in.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productImportId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "ftpDir": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "ftpFileName": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "ftpHash": {
            "type": "string",
            "description": "Hash value from the FTP server, if supported.  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "ftpLastChangedDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "ftpPwd": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "ftpSize": {
            "type": "integer",
            "description": "Type: long?",
            "format": "int64",
            "nullable": true
          },
          "ftpSupportsHash": {
            "type": "boolean",
            "description": "Type: bool?",
            "nullable": true
          },
          "ftpSvr": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "ftpUsr": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "hash": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "imported_UTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "isProductAgreement": {
            "type": "boolean",
            "description": "The imported file represents either a product agreement or a product catalog.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "lastSuccess_FileName": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "lastSuccess_Imported_UTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "lastSuccess_Staged_LineCount": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "lastSuccess_Staged_UTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "lastSuccess_StagingInMs": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "lastSuccess_StatusMessage": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "manuallyUpladed": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Type: long?",
            "format": "int64",
            "nullable": true
          },
          "staged_LineCount": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "staged_UTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "stagingInMs": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "statusMessage": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_FileDownloadModeId": {
            "$ref": "#/components/schemas/FileDownloadModeEnum"
          },
          "productImportFileSetId": {
            "type": "integer",
            "description": "Reference to ProductImportFileSet  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductImportFileSetDto": {
        "type": "object",
        "description": "Represents a set of product catalog files imported together, usually a product list and a product agreement.  \r\n  \r\nWhen an import succeeds, the LastSuccess fields are filled in.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productImportFileSetId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "importingInMs": {
            "type": "integer",
            "description": "Performance statistic: How long it took to import the file set with the given job number from the staging tables.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "jobNumber": {
            "type": "integer",
            "description": "When importing a set of files, the job number is increased. The job number is used in the client database to ensure corresponding files are handled together.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "jobStartedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "lastSuccess_ImportingInMs": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "lastSuccess_JobNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "lastSuccess_JobStartedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "lastSuccess_ProductCount": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "lastSuccess_StagingInMs": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "lastSuccess_StatusMessage": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "manuallyRequested": {
            "type": "boolean",
            "description": "Set to 1 when a user manually requested importing the file set. Will be reset to 0 once the import job starts.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "manuallyUploaded": {
            "type": "boolean",
            "description": "This represents a manually uploaded file set, usually through the CW UI. Only one manually uploaded file set exists at one time, and the file set will be reused on the next manual upload.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productCount": {
            "type": "integer",
            "description": "The number of imported products  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "stagingInMs": {
            "type": "integer",
            "description": "Performance statistic: How long it took from the job started to all files were inserted into the staging tables with the corresponding job number.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "statusMessage": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "succeeded": {
            "type": "boolean",
            "description": "Type: bool?",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_ImportFrequencyId": {
            "$ref": "#/components/schemas/ImportFrequencyEnum"
          },
          "productImports": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductImportDto"
            }
          }
        }
      },
      "ProductImportFileSetUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productImportFileSetId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "productImports": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductImportUpsertResultDto"
            }
          }
        }
      },
      "ProductImportUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productImportId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProductNoteAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productNoteAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "productNoteIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductNoteId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productNoteId": {
            "type": "integer",
            "description": "Reference to ProductNote  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductNoteAttachmentUploadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductNoteAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "productNoteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProductNoteDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productNoteId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productNoteIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductNoteId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "noteMovedFromAssignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to NoteMovedFromAssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "noteMovedToAssignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to NoteMovedToAssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "noteMovedToStorageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to NoteMovedToStorageId for the current ExternalSystem",
            "nullable": true
          },
          "regBy_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RegBy_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "documentIdExt": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "documentOrigin": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "noteDescription": {
            "type": "string",
            "description": "Type: string? (Max: 500)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "noteMovedFromAssignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "noteMovedToAssignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "noteMovedToStorageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "productNoteNumber": {
            "type": "integer",
            "description": "Type: int?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "regBy_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "registeredTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "returnNote": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "skipOnNextInvoice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "voucherNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "enum_OriginTypeId": {
            "$ref": "#/components/schemas/OriginTypeEnum"
          },
          "supplierInvoiceId": {
            "type": "integer",
            "description": "Reference to SupplierInvoice  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "externalSystemProductNotes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductNoteDto"
            }
          },
          "productNoteAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductNoteAttachmentDto"
            }
          },
          "productNoteLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductNoteLineDto"
            }
          }
        }
      },
      "ProductNoteGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProductNoteGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductNoteLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productNoteLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productNoteLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductNoteLineId for the current ExternalSystem",
            "nullable": true
          },
          "cost_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_1External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_1 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_2External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_2 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_3External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_3 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_4External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_4 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_5External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_5 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_6External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_6 for the current ExternalSystem",
            "nullable": true
          },
          "income_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "income_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineId for the current ExternalSystem",
            "nullable": true
          },
          "parent_ProductNoteLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Parent_ProductNoteLineId for the current ExternalSystem",
            "nullable": true
          },
          "productAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "productNoteIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductNoteId for the current ExternalSystem",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "supplierInvoiceLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceLineId for the current ExternalSystem",
            "nullable": true
          },
          "cost_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "customerPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_1": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_2": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_3": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_4": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_5": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_6": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "income_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "income_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "description": "Reference to Invoice  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "description": "Reference to InvoiceLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoiceSpecificationNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "isVarious": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "override_QuantityInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "parent_ProductNoteLineId": {
            "type": "integer",
            "description": "Reference to ProductNoteLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "priceOnly": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: Name",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to ProductSupplierIndustryType  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\nThe project period will be auto-filled in based on RegisteredDateTimeUTC if it is missing. Special permissions are needed to alter the project period on an existing record.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "quantityInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "registeredDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "salesPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceModified": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceLineId": {
            "type": "integer",
            "description": "Reference to SupplierInvoiceLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercentInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "syncToMobileDevice": {
            "type": "boolean",
            "description": "Set to 0 to prevent syncing the specific line to mobile devices. Used on soft-deleted rows (Sys_Deactivated = 1) which have been hard-deleted in SpeedyCraft to prevent integration issues.  \r\n__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_AssignmentId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_CostPriceAvgFIFO": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_CostPriceAvgUpdOnAdd": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_CostPriceDefault": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_CostPriceLocked": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_InvoicedProjectPeriod": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_InvoicedProjectPeriodId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_LastChangeOrigin": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "sys_PostProcessNeeded": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_ProjectAccountCategoryId": {
            "type": "integer",
            "description": "Type: byte?",
            "format": "int32",
            "nullable": true
          },
          "sys_ProjectPeriod": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_PurchaseAgreementId": {
            "type": "integer",
            "description": "Reference to PurchaseAgreement  \r\nPurchase agreement used at the time of resolving cost price and customer price. The primary purpose of this field is to be able to detect errors in agreements and subsequently fix those errors cleanly.  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "updateAssignmentCost": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "updateStock": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_CostPriceSourceId": {
            "$ref": "#/components/schemas/CostPriceSourceEnum"
          },
          "enum_InvoicingLineStatusId": {
            "$ref": "#/components/schemas/InvoicingLineStatusEnum"
          },
          "sys_Enum_OriginTypeId": {
            "$ref": "#/components/schemas/OriginTypeEnum"
          },
          "productNoteId": {
            "type": "integer",
            "description": "Reference to ProductNote  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "externalSystemProductNoteLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductNoteLineDto"
            }
          }
        }
      },
      "ProductNoteLineGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProductNoteLineGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteLineId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductNoteLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productNoteLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProductNoteLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductNoteLineUpsertResultDto"
            }
          }
        }
      },
      "ProductNoteMoveLinesToAssignmentOrStorageParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteLinesAsJson": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductNoteMoveLinesToAssignmentOrStorageResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sys_RowState": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductNoteMoveLinesToAssignmentParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteLinesAsJson": {
            "type": "string",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductNoteMoveLinesToAssignmentResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sys_RowState": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductNoteMoveToAssignmentParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_4": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_5": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_6": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductNoteMoveToAssignmentResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sys_RowState": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductNoteMoveToStorageParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductNoteMoveToStorageResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sys_RowState": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductNotePreProcessProductNoteLineParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "enum_OriginTypeId": {
            "$ref": "#/components/schemas/OriginTypeEnum"
          },
          "salesPriceModified": {
            "type": "boolean",
            "nullable": true
          },
          "surchargePercentInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceInvoice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "enum_CostPriceSourceId": {
            "$ref": "#/components/schemas/CostPriceSourceEnum"
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductNotePreProcessProductNoteLineResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "column": {
            "type": "string",
            "nullable": true
          },
          "textId": {
            "type": "string",
            "nullable": true
          },
          "suggestedValue": {
            "type": "string",
            "nullable": true
          },
          "columnState": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "ProductNoteUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productNoteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNoteIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProductNotes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductNoteUpsertResultDto"
            }
          },
          "productNoteAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductNoteAttachmentUpsertResultDto"
            }
          },
          "productNoteLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductNoteLineUpsertResultDto"
            }
          }
        }
      },
      "ProductPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProductSupplierIndustryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "costPriceOverride": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "discountGroupId": {
            "type": "integer",
            "description": "Reference to DiscountGroup  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "inactive": {
            "type": "boolean",
            "description": "Type: bool?",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "supplierProductNumber": {
            "type": "string",
            "description": "Not in use for Nelfo4, handles Comfort specific data (Synergo)  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemProductSupplierIndustryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductSupplierIndustryTypeDto"
            }
          }
        }
      },
      "ProductSupplierIndustryTypeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProductSupplierIndustryTypeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProductSupplierIndustryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProductSupplierIndustryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductSupplierIndustryTypeUpsertResultDto"
            }
          }
        }
      },
      "ProductSyncDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "productSyncId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "abortRequested": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "description": "Reference to ExternalSystem  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "fullProductNumberFrom": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "fullProductNumberTo": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "lastTransferMilliseconds": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "lastTransferredId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "productNumberFrom": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "productNumberTo": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "progress": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "progressTargetCount": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_SyncStatusId": {
            "$ref": "#/components/schemas/SyncStatusEnum"
          }
        }
      },
      "ProductSyncUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productSyncId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProductUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProducts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProductUpsertResultDto"
            }
          },
          "productExtendedInfos": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductExtendedInfoUpsertResultDto"
            }
          }
        }
      },
      "ProductUpsertWithSupplierIndustryTypeParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNumber": {
            "type": "string",
            "nullable": true
          },
          "salesPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "income_ProjectAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sale_VATRequired_LedgerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sale_VATFree_LedgerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchase_VATRequired_LedgerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "purchase_VATFree_LedgerAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inactive": {
            "type": "boolean",
            "nullable": true
          },
          "isVarious": {
            "type": "boolean",
            "nullable": true
          },
          "priceOnly": {
            "type": "boolean",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "vatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "listPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costPriceOverride": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "discountGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProductUpsertWithSupplierIndustryTypeResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "textId": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProjectAccountCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectAccountCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "invoiceOnly": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_ProjectAccountCategoryTypeId": {
            "$ref": "#/components/schemas/ProjectAccountCategoryTypeEnum"
          }
        }
      },
      "ProjectAccountCategoryTypeEnum": {
        "type": "string",
        "enum": [
          "Cost",
          "Income"
        ]
      },
      "ProjectAccountCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectAccountCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProjectAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectAccountId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "projectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "accountNumber": {
            "type": "integer",
            "description": "Type: int?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "assessment_ProjectAccountReportCategoryId": {
            "type": "integer",
            "description": "Reference to ProjectAccountReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "budgetUse": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "projectAccountCategoryId": {
            "type": "integer",
            "description": "Reference to ProjectAccountCategory  \r\n__When creating records:__ ___Default value = 0___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "summary_ProjectAccountReportCategoryId": {
            "type": "integer",
            "description": "Reference to ProjectAccountReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemProjectAccounts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectAccountDto"
            }
          }
        }
      },
      "ProjectAccountGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProjectAccountGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectAccountId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectAccountPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accountNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProjectAccountReportCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectAccountReportCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "reportText": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "projectAccountReportCategoryTypeId": {
            "type": "integer",
            "description": "Reference to ProjectAccountReportCategoryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProjectAccountReportCategoryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectAccountReportCategoryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "reportText": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "projectAccountReportCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProjectAccountReportCategoryDto"
            }
          }
        }
      },
      "ProjectAccountReportCategoryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectAccountReportCategoryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "projectAccountReportCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProjectAccountReportCategoryUpsertResultDto"
            }
          }
        }
      },
      "ProjectAccountReportCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectAccountReportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProjectAccountUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectAccountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectAccountIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProjectAccounts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectAccountUpsertResultDto"
            }
          }
        }
      },
      "ProjectAssessmentTypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "CoverageDegree",
          "CoveragePerHour"
        ]
      },
      "ProjectAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Reference to Project  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProjectAttachmentUploadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProjectAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProjectDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "budget_DimensionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Budget_DimensionId for the current ExternalSystem",
            "nullable": true
          },
          "caseHandler_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CaseHandler_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "default_AssignmentCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_AssignmentCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "default_InvoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "default_ProductAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "parentProjectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ParentProjectId for the current ExternalSystem",
            "nullable": true
          },
          "projectGroupIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectGroupId for the current ExternalSystem",
            "nullable": true
          },
          "projectTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectTypeId for the current ExternalSystem",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "budget_DimensionId": {
            "type": "integer",
            "description": "Reference to Dimension  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "caseHandler_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "customersReference": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "default_AssignmentCategoryId": {
            "type": "integer",
            "description": "Reference to AssignmentCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_InvoiceTemplateId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplate  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "default_ProductAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 500)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "endDateUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "estimatedCompletionPercentage": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "estimatedTotalHours": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "fixedPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceReserveSumAllAssignment": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "marginPercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Type: string?  \r\nValidation: MultilineText",
            "nullable": true
          },
          "parentProjectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "projectAssessment": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "projectDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "projectGroupId": {
            "type": "integer",
            "description": "Reference to ProjectGroup  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "projectTypeId": {
            "type": "integer",
            "description": "Reference to ProjectType  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "riskMarginPercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "serviceAgreementId": {
            "type": "integer",
            "description": "Reference to ServiceAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "startDateUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "warrantyDateUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "enum_ProjectAssessmentTypeId": {
            "$ref": "#/components/schemas/ProjectAssessmentTypeEnum"
          },
          "enum_ProjectStatusId": {
            "$ref": "#/components/schemas/ProjectStatusEnum"
          },
          "contactId": {
            "type": "integer",
            "description": "Reference to Contact (directly updateable through Contact)  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDto"
          },
          "externalSystemProjects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectDto"
            }
          },
          "projectAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProjectAttachmentDto"
            }
          }
        }
      },
      "ProjectGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProjectGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectGroupId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "projectGroupIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectGroupId for the current ExternalSystem",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemProjectGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectGroupDto"
            }
          }
        }
      },
      "ProjectGroupGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProjectGroupGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectGroupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectGroupUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectGroupIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProjectGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectGroupUpsertResultDto"
            }
          }
        }
      },
      "ProjectPeriodDto": {
        "type": "object",
        "description": "Project periods are used for reporting purposes, and usually correspond to months. They are commonly synchronized with accounting periods, but can also deviate. Project periods will be auto-created as monthly periods if Settings_Main has AutoCreateProjectPeriods set to true.  \r\n  \r\nIf Services, ProductNoteLines or InvoiceLines are registered on a closed project period (based on dates), they will be moved to the next open period.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Start and end dates are inclusive.  \r\n  \r\nThis date must be identical to or later than the start date.  \r\n__When creating records:__ ___Mandatory___  \r\nType: DateTime  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "periodNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "periodYear": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start and end dates are inclusive.  \r\n  \r\nThe start date of the project period must be the day after the end date of the previous project period, and will be set automatically by the system when a period is created. Start and end dates may be adjusted after creation, but the project period will be invalid if there is a gap between this and the previous period.  \r\nType: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemProjectPeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectPeriodDto"
            }
          }
        }
      },
      "ProjectPeriodUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProjectPeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectPeriodUpsertResultDto"
            }
          }
        }
      },
      "ProjectPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProjectReportDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectReportDetailId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "fromNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "reportText": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sumLevel": {
            "type": "integer",
            "description": "Type: byte?",
            "format": "int32",
            "nullable": true
          },
          "sumLevelReset": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "toNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "enum_ProjectReportDetailTypeId": {
            "$ref": "#/components/schemas/ProjectReportDetailTypeEnum"
          },
          "projectReportId": {
            "type": "integer",
            "description": "Reference to ProjectReport  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProjectReportDetailTypeEnum": {
        "type": "string",
        "enum": [
          "ProjectAccount",
          "Text",
          "Sum",
          "Reserved",
          "WageCodeReportCategory"
        ]
      },
      "ProjectReportDetailUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectReportDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ProjectReportDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectReportId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "projectReportNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "projectReportDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProjectReportDetailDto"
            }
          }
        }
      },
      "ProjectReportPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectReportNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectReportId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ProjectReportUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectReportId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "projectReportDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProjectReportDetailUpsertResultDto"
            }
          }
        }
      },
      "ProjectStatusEnum": {
        "type": "string",
        "enum": [
          "NotStarted",
          "InProgress",
          "Completed",
          "Warranty"
        ]
      },
      "ProjectTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "projectTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "projectTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectTypeId for the current ExternalSystem",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemProjectTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectTypeDto"
            }
          }
        }
      },
      "ProjectTypeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ProjectTypeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "projectTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemProjectTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectTypeUpsertResultDto"
            }
          }
        }
      },
      "ProjectUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "contact": {
            "$ref": "#/components/schemas/ContactUpsertResultDto"
          },
          "externalSystemProjects": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemProjectUpsertResultDto"
            }
          },
          "projectAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProjectAttachmentUpsertResultDto"
            }
          }
        }
      },
      "PurchaseAgreementDiscountGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "purchaseAgreementDiscountGroupId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "discountGroupId": {
            "type": "integer",
            "description": "Reference to DiscountGroup  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "listPriceDiscountPercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "purchaseAgreementId": {
            "type": "integer",
            "description": "Reference to PurchaseAgreement  \r\nType: short?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "PurchaseAgreementDiscountGroupUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "purchaseAgreementDiscountGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "PurchaseAgreementDiscountProductDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "purchaseAgreementDiscountProductId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "fixedCostPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "listPriceDiscountPercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to ProductSupplierIndustryType  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "purchaseAgreementId": {
            "type": "integer",
            "description": "Reference to PurchaseAgreement  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "PurchaseAgreementDiscountProductUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "purchaseAgreementDiscountProductId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "PurchaseAgreementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "purchaseAgreementId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "agreementCode": {
            "type": "string",
            "description": "Nullable because old VC agreements sometimes  have an empty agreement number (which maps here)  \r\nType: string? (Max: 50)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "purchaseAgreementDiscountGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PurchaseAgreementDiscountGroupDto"
            }
          },
          "purchaseAgreementDiscountProducts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PurchaseAgreementDiscountProductDto"
            }
          }
        }
      },
      "PurchaseAgreementUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "purchaseAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "purchaseAgreementDiscountGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PurchaseAgreementDiscountGroupUpsertResultDto"
            }
          },
          "purchaseAgreementDiscountProducts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PurchaseAgreementDiscountProductUpsertResultDto"
            }
          }
        }
      },
      "RecalculateAssignmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "productNotes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductNoteDto"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          }
        }
      },
      "ReprocessErrorsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RoleDto": {
        "type": "object",
        "description": "Auth.Write:ClientAdmin",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "roleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RoleId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "adminFor_Enum_ClientLevelId": {
            "$ref": "#/components/schemas/ClientLevelEnum"
          },
          "enum_ClientLevelId": {
            "$ref": "#/components/schemas/ClientLevelEnum"
          },
          "externalSystemRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemRoleDto"
            }
          }
        }
      },
      "RolePermissionDto": {
        "type": "object",
        "description": "Auth.Write:ClientAdmin",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "rolePermissionId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "rolePermissionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RolePermissionId for the current ExternalSystem",
            "nullable": true
          },
          "permissionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PermissionId for the current ExternalSystem",
            "nullable": true
          },
          "roleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RoleId for the current ExternalSystem",
            "nullable": true
          },
          "permissionId": {
            "type": "integer",
            "description": "Reference to Permission  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "description": "Reference to Role  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemRolePermissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemRolePermissionDto"
            }
          }
        }
      },
      "RolePermissionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "rolePermissionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rolePermissionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemRolePermissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemRolePermissionUpsertResultDto"
            }
          }
        }
      },
      "RoleUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roleIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemRoleUpsertResultDto"
            }
          }
        }
      },
      "RowStateEnum": {
        "type": "string",
        "enum": [
          "Ok",
          "Highlight",
          "IntInfo",
          "Info",
          "IntWarning",
          "Warning",
          "IntError",
          "Error"
        ]
      },
      "SaveInvoiceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "registeredDate": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "invoiceComment": {
            "type": "string",
            "nullable": true
          },
          "vatFree": {
            "type": "boolean"
          }
        }
      },
      "SaveInvoiceResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SendInvoiceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SendInvoiceResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sys_RowState": {
            "type": "string",
            "nullable": true
          },
          "textId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ServiceAgreementDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "serviceAgreementDetailId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementDetailIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementDetailId for the current ExternalSystem",
            "nullable": true
          },
          "employeeInvoiceCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeInvoiceCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeId for the current ExternalSystem",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "description": "Reference to EmployeeInvoiceCategory  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "invoiceDescription": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "surchargePercentIsVisible": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "description": "Reference to WageCode  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "enum_ServiceAgreementDetailValueTypeId": {
            "$ref": "#/components/schemas/ServiceAgreementDetailValueTypeEnum"
          },
          "serviceAgreementId": {
            "type": "integer",
            "description": "Reference to ServiceAgreement  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalSystemServiceAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemServiceAgreementDetailDto"
            }
          }
        }
      },
      "ServiceAgreementDetailGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ServiceAgreementDetailGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceAgreementDetailId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ServiceAgreementDetailPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ServiceAgreementDetailUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "serviceAgreementDetailId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementDetailIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemServiceAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemServiceAgreementDetailUpsertResultDto"
            }
          }
        }
      },
      "ServiceAgreementDetailValueTypeEnum": {
        "type": "string",
        "enum": [
          "Value",
          "Percent"
        ]
      },
      "ServiceAgreementDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "serviceAgreementId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Type: short?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemServiceAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemServiceAgreementDto"
            }
          },
          "serviceAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ServiceAgreementDetailDto"
            }
          }
        }
      },
      "ServiceAgreementGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ServiceAgreementGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceAgreementId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ServiceAgreementPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ServiceAgreementUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "serviceAgreementId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceAgreementIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemServiceAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemServiceAgreementUpsertResultDto"
            }
          },
          "serviceAgreementDetails": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ServiceAgreementDetailUpsertResultDto"
            }
          }
        }
      },
      "ServiceContractDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "serviceContractId": {
            "type": "integer",
            "description": "__Primary key__  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "default_AssignmentId": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "endDateUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "inactive": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "indexRate": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "indexRateGroupId": {
            "type": "integer",
            "description": "Reference to IndexRateGroup  \r\n__When creating records:__ ___Mandatory___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "indexRateStartDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "invoiceRecurrencePattern": {
            "type": "string",
            "description": "Type: string? (Max: 1024)",
            "nullable": true
          },
          "recurrencePattern": {
            "type": "string",
            "description": "Type: string? (Max: 1024)",
            "nullable": true
          },
          "serviceContractNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "startDateUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_ServiceContractRecurrenceHandlingId": {
            "$ref": "#/components/schemas/ServiceContractRecurrenceHandlingEnum"
          }
        }
      },
      "ServiceContractRecurrenceHandlingEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "ReOpenDefaultAssignment",
          "CreateNewAssignment",
          "NotifyUserOnly"
        ]
      },
      "ServiceContractUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "serviceContractId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "ServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "serviceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ServiceId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "cost_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "costSurcharge_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CostSurcharge_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_1External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_1 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_2External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_2 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_3External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_3 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_4External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_4 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_5External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_5 for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_6External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_6 for the current ExternalSystem",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "employeeInvoiceCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeInvoiceCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "income_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "income_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "invoice_ApprovalEmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Invoice_ApprovalEmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceLineId for the current ExternalSystem",
            "nullable": true
          },
          "jobCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to JobCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "movedFromAssignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to MovedFromAssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "movedToAssignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to MovedToAssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "wage_ApprovalEmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Wage_ApprovalEmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "wagePeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WagePeriodId for the current ExternalSystem",
            "nullable": true
          },
          "approvalComment": {
            "type": "string",
            "description": "Type: string? (Max: 500)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "cost_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "costPriceSurcharge": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "costPriceSurchargePercent": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "costSurcharge_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "createdFrom_ServiceId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_1": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_2": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_3": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_4": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_5": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_6": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "employeeInvoiceCategoryId": {
            "type": "integer",
            "description": "Reference to EmployeeInvoiceCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "endDateTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "income_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "income_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoice_ApprovalEmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoiceDescription": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "invoiceId": {
            "type": "integer",
            "description": "Reference to Invoice  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "invoiceLineId": {
            "type": "integer",
            "description": "Reference to InvoiceLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "description": "Reference to JobCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "movedFromAssignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "movedToAssignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "pieceworkNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\nThe project period will be auto-filled in based on the StartDateTimeUTC field if it is missing. Special permissions are needed to alter the project period on an existing record.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "quantityInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "salesPrice": {
            "type": "number",
            "description": "This field will be changed to nullable  \r\n__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "salesPriceInvoice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "serviceComment": {
            "type": "string",
            "description": "Type: string? (Max: 500)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "startDateTimeUTC": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: DateTime  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "syncToMobileDevice": {
            "type": "boolean",
            "description": "Set to 0 to prevent syncing the specific line to mobile devices. Used on soft-deleted rows (Sys_Deactivated = 1) which have been hard-deleted in SpeedyCraft to prevent integration issues.  \r\n__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_InvoicedProjectPeriod": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_InvoicedProjectPeriodId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_IsWorkTime": {
            "type": "boolean",
            "description": "Type: bool?",
            "nullable": true
          },
          "sys_LastChangeOrigin": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "sys_NextWageCodeProcessed": {
            "type": "boolean",
            "description": "When true, no next wage code processing should be performed on the service during postprocessing  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_PostProcessMessage": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "sys_PostProcessNeeded": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_ProjectAccountCategoryId": {
            "type": "integer",
            "description": "Type: byte?",
            "format": "int32",
            "nullable": true
          },
          "sys_ProjectPeriod": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "wage_ApprovalEmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "description": "Reference to WageCode  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "wageCodeName": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "wagePeriodId": {
            "type": "integer",
            "description": "Reference to WagePeriod  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "enum_InvoicingLineStatusId": {
            "$ref": "#/components/schemas/InvoicingLineStatusEnum"
          },
          "enum_WageCodeInvoiceRuleId": {
            "$ref": "#/components/schemas/WageCodeInvoiceRuleEnum"
          },
          "enum_WagePeriodStatusId": {
            "$ref": "#/components/schemas/WagePeriodStatusEnum"
          },
          "invoice_Enum_ApprovalStatusId": {
            "$ref": "#/components/schemas/ApprovalStatusEnum"
          },
          "sys_Enum_WageCodeTypeId": {
            "$ref": "#/components/schemas/WageCodeTypeEnum"
          },
          "wage_Enum_ApprovalStatusId": {
            "$ref": "#/components/schemas/ApprovalStatusEnum"
          },
          "externalSystemServices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemServiceDto"
            }
          }
        }
      },
      "ServiceGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ServiceGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ServiceMoveToAssignmentParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceIds": {
            "type": "string",
            "nullable": true
          },
          "toAssignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_3": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_4": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_5": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueId_6": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ServiceMoveToAssignmentResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "sys_RowState": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ServicePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "ServiceUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "serviceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serviceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemServices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemServiceUpsertResultDto"
            }
          }
        }
      },
      "SetInvoiceLineRuleWageCodeTypesCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceLineRuleId": {
            "type": "integer",
            "format": "int32"
          },
          "enum_WageCodeTypeIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SetInvoiceStatusCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceNumber": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceStatusId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetInvoiceStatusResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Settings_AssignmentDto": {
        "type": "object",
        "description": "Angitt materialavtale vil bli brukt på alle ordre om ikke annet oppgis",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "settings_AssignmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "default_AssignmentCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_AssignmentCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "default_CasehandlerEmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_CasehandlerEmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "default_InvoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "default_ProductAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_ProductAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "default_ProjectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "default_ServiceAgreementIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Default_ServiceAgreementId for the current ExternalSystem",
            "nullable": true
          },
          "allowHpcTimeCorrection": {
            "type": "boolean",
            "description": "-Her bestemmes om bruker(e) kan korrigere importerte timer fra håndholdt (Handyman / SpeedyCraft) i brannmur.  \r\n-Hvis timekodkjenning er valgt vil det ikke være mulig for brukere å korrigere her uten at denne koden er satt.  \r\n-Unntak er systembruker som uavhengig av koder vil kunne foreta korrigeringer.  \r\nType: bool?",
            "nullable": true
          },
          "approveBeforeInvoicing": {
            "type": "boolean",
            "description": "Hvis på må ordre godkjennes før denne kan faktureres  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "approveHoursBeforeInvoicing": {
            "type": "boolean",
            "description": "Saksbehandler må godkjenne timer før disse kan faktureres.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "assignmentDateToStartDate": {
            "type": "boolean",
            "description": "Automatisk overføring av ordrens dato til feltet for Startdato  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "budgetNew_AddAllItem": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "copyCategoryFromCustomer": {
            "type": "boolean",
            "description": "Hvis angitt, automatisk overføring av kundens kategori til ordrens kategori ved oppretting av nye ordrer.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "coverageRateFixedPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "coverageRateNotFixedPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "default_AssignmentCategoryId": {
            "type": "integer",
            "description": "Reference to AssignmentCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_CasehandlerEmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_InvoiceTemplateId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplate  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "default_ProductAgreementId": {
            "type": "integer",
            "description": "Reference to ProductAgreement  \r\nAngitt materialavtale vil bli brukt på alle ordre om ikke annet oppgis  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "default_ProjectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "default_ServiceAgreementId": {
            "type": "integer",
            "description": "Reference to ServiceAgreement  \r\nAngitt timeavtale vil bli brukt på alle ordre om ikke annet oppgis  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "default_SyncToMobileDevice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "invoice_IsFinalInvoice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoice_SendImmediately": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "mandatoryCaseHandler": {
            "type": "boolean",
            "description": "Hvis på må alle nye ordre opprettes med saksbehandler angitt  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "mandatoryCategory": {
            "type": "boolean",
            "description": "Hvis på må alle nye ordre opprettes med kategori  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "mandatoryHpcCategory": {
            "type": "boolean",
            "description": "Krysses denne av må det angis SpeedyCraft-/Handyman-kategori på alle ordre som opprettes  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "mandatoryMatAgreement": {
            "type": "boolean",
            "description": "Krysses denne av må det angis materialavtale på alle ordre som opprettes  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "minimumCoveragePercent": {
            "type": "number",
            "description": "-Her angis den ønskede dekningsgrad på ordre i bedriften. den kan overstyres pr avdeling som igjen kan overstyres på den enkelte ordre.  \r\n-Ved summering av ordre i ordrebehandling vil ordre som ikke oppfyller kravet til dekningsgrad vises i rødt på skjermen  \r\nType: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "noChangeCustomerAfterTimeMatInv": {
            "type": "boolean",
            "description": "Angir om det er lov å endre kundenummer på ordre etter at det er ført timer/materiell på denne, eller etter at ordre er fakturert  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productNote_CostPrice_Edit": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_InvoiceReserveBilledPriceCalculationId": {
            "$ref": "#/components/schemas/InvoiceReserveBilledPriceCalculationEnum"
          },
          "enum_InvoiceReserveFixedPriceCalculationId": {
            "$ref": "#/components/schemas/InvoiceReserveFixedPriceCalculationEnum"
          }
        }
      },
      "Settings_AssignmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "settings_AssignmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "Settings_MainDto": {
        "type": "object",
        "description": "Main client settings, changeable by the user. This table has one and only one row, with ID = 1.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "settings_MainId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "invoiceTemplateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to InvoiceTemplateId for the current ExternalSystem",
            "nullable": true
          },
          "paymentTermIdExternal": {
            "type": "string",
            "description": "External ID corresponding to PaymentTermId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "standard_SupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Standard_SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "autoFallbackProductNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "clientName": {
            "type": "string",
            "description": "Name of this client. Not to be confused by ClientID, which is defined in the Sys_Settings table.  \r\nType: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "defaultLanguage": {
            "type": "string",
            "description": "Type: string? (Max: 2)",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nDefault department. There is at least one department defined on the client, even if UseDepartment is false.  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: Email",
            "nullable": true
          },
          "handleOffers": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "invoice_KeepValuesForCreditNotes": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoice_SendImmediately": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "invoiceTemplateId": {
            "type": "integer",
            "description": "Reference to InvoiceTemplate  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "paymentTermId": {
            "type": "integer",
            "description": "Reference to PaymentTerm  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "phoneNumberForSMS": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Phone",
            "nullable": true
          },
          "preserveGridSettingsLocally": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\nDefault product used by e.g. SupplierInvoice if no matching product is found when importing supplier invoice lines.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "productNote_CostPrice_Edit": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "projectPeriod_AutoCreate": {
            "type": "boolean",
            "description": "Auto-creates project periods when needed, assuming one month periods.  \r\n__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "projectPeriod_LastClosedYYYYPP": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "require2FAForAllUsers": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "standard_SupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoice_ImportWhenApproved": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "supportEmail_Partner": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Email",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "useDepartments": {
            "type": "boolean",
            "description": "Controls whether departments are in use for the client. Even if departments are not in use, a default department is present and used everywhere where we have department references.  \r\n  \r\nExample: Assignments  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "useDimensions": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "useServiceApprovalWage": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_StorageModeId": {
            "$ref": "#/components/schemas/StorageModeEnum"
          },
          "enum_TimeZoneId": {
            "$ref": "#/components/schemas/TimeZoneEnum"
          }
        }
      },
      "Settings_MainUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "settings_MainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "Settings_ProductImportDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "settings_ProductImportId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "cost_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "income_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Income_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "pOSPurchase_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSPurchase_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "pOSPurchase_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSPurchase_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "pOSSale_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSSale_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "pOSSale_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to POSSale_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "purchase_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Purchase_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "purchase_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Purchase_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "sale_VATFree_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Sale_VATFree_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "sale_VATRequired_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Sale_VATRequired_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "income_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "pOSPurchase_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "pOSPurchase_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "pOSSale_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "pOSSale_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "purchase_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "purchase_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sale_VATFree_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sale_VATRequired_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "surchargeDiscountGroup": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "vATRateId": {
            "type": "integer",
            "description": "Reference to VATRate  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Settings_ProductImportUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "settings_ProductImportId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "Settings_UserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "settings_UserId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string",
            "nullable": true
          }
        }
      },
      "Settings_UserUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "settings_UserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "StockAdjustmentParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "StockAdjustmentPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "StockAdjustmentPreProcessResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "column": {
            "type": "string",
            "nullable": true
          },
          "textId": {
            "type": "string",
            "nullable": true
          },
          "suggestedValue": {
            "type": "string",
            "nullable": true
          },
          "columnState": {
            "type": "integer",
            "format": "int32"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "StockCountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "stockCountId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockCountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockCountId for the current ExternalSystem",
            "nullable": true
          },
          "approvedBy_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ApprovedBy_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "responsible_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Responsible_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "approved": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "approvedBy_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 500)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "countEndedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "countStartedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "fullCount": {
            "type": "boolean",
            "description": "If true, the stock count lines is complete. This means that any stocks not matched by a stock count line is considered to have 0 items.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "responsible_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemStockCounts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockCountDto"
            }
          },
          "stockCountLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StockCountLineDto"
            }
          }
        }
      },
      "StockCountLineDto": {
        "type": "object",
        "description": "Will be set when stock adjustments have been performed for the line. When set, further stock adjustments will not be performed based on the line.",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "stockCountLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockCountLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockCountLineId for the current ExternalSystem",
            "nullable": true
          },
          "approvedBy_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ApprovedBy_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "stockCountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockCountId for the current ExternalSystem",
            "nullable": true
          },
          "stockIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "approved": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "approvedBy_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "countDoneUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "quantityOnStock": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "stockAdjustmentPerformed": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "stockId": {
            "type": "integer",
            "description": "Reference to Stock  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "stockCountId": {
            "type": "integer",
            "description": "Reference to StockCount  \r\nThe stock count will be resolved to the latest open stock count on the given storage and product. If there is no open stock count, a new stock count will be generated.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "externalSystemStockCountLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockCountLineDto"
            }
          }
        }
      },
      "StockCountLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "stockCountLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockCountLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemStockCountLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockCountLineUpsertResultDto"
            }
          }
        }
      },
      "StockCountUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "stockCountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockCountIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemStockCounts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockCountUpsertResultDto"
            }
          },
          "stockCountLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StockCountLineUpsertResultDto"
            }
          }
        }
      },
      "StockDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "stockId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "averageCostPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "averageCostPriceFIFO": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "lastCostPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "quantityMax": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "quantityMin": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "quantityMOQ": {
            "type": "number",
            "description": "Auto generated purchase order should increment quantity in multiples of this  \r\nType: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "quantityOnOrder": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_NextBatchSortOrder": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalSystemStocks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockDto"
            }
          }
        }
      },
      "StockGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "StockGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stockId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StockStorageTransferParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fromStorageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toStorageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "StockTransactionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "stockTransactionId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "stockTransactionIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StockTransactionId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "registeredBy_EmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RegisteredBy_EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "sys_ProductNoteLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Sys_ProductNoteLineId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "averageCostPrice": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "averageCostPriceFIFO": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "movedFromStorageId": {
            "type": "integer",
            "description": "This transactions represents a move from MovedFromStorageID to MovedToStorageID.  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "movedToStorageId": {
            "type": "integer",
            "description": "This transactions represents a move from MovedFromStorageID to MovedToStorageID.  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "productBatchId": {
            "type": "integer",
            "description": "Reference to ProductBatch  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to ProductSupplierIndustryType  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "registeredBy_EmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sequenceNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_CostPriceFIFO": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_CostPriceIncoming": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_CostPriceNotFIFO": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_CostPriceNotStock": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_ProductNoteLineId": {
            "type": "integer",
            "description": "Reference to ProductNoteLine  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "totalStockQuantity": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "enum_StockTransactionOriginId": {
            "$ref": "#/components/schemas/StockTransactionOriginEnum"
          },
          "sys_Enum_StorageModeId": {
            "$ref": "#/components/schemas/StorageModeEnum"
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalSystemStockTransactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockTransactionDto"
            }
          }
        }
      },
      "StockTransactionGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "StockTransactionGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stockTransactionId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StockTransactionOriginEnum": {
        "type": "string",
        "enum": [
          "StockCount_Correction",
          "Man_In_Out",
          "Reg_AutoF",
          "Reg_Best",
          "SupplierInvoice",
          "Hpc_In_Out",
          "ProductNote_Return",
          "Reg_Vdc",
          "ProductNote_In_Out",
          "OutgoingInvoice_In_Out",
          "Hpc_ProductNote_In_Out",
          "Reg_HTerm",
          "ProductNote_Delete",
          "OutgoingInvoice_Delete",
          "Reg_Kontant",
          "Slett_Kontant",
          "Slett_Lager",
          "Stock_Transfer",
          "Stock_AverageCostPriceUpd",
          "Telle_dato"
        ]
      },
      "StockTransactionUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "stockTransactionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockTransactionIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemStockTransactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockTransactionUpsertResultDto"
            }
          }
        }
      },
      "StockTransferParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fromStorageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toStorageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "allowMoveOfNotAvailableQuantity": {
            "type": "boolean",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "costPriceFromStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "costPriceNotStock": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "registeredBy_EmployeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "StockUpdateAverageCostPriceParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "averageCostPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "StockUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "stockId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stockIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemStocks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStockUpsertResultDto"
            }
          }
        }
      },
      "StorageDepartmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "storageDepartmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "isDefaultStorage": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "StorageDepartmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "StorageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "balance_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Balance_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "profitAndLoss_LedgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProfitAndLoss_LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "responsibleEmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ResponsibleEmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "balance_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "countInProgress": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "profitAndLoss_LedgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "responsibleEmployeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "storageNumber": {
            "type": "integer",
            "description": "Type: short?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoice_VirtualAssignmentNumber": {
            "type": "integer",
            "description": "If set, this assignment number wil auto-map to the storage when importing supplier invoices. The assignment number can be virtual or an existing assignment number. This needs to be unique across storages.  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "syncToMobileDevice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemStorages": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStorageDto"
            }
          },
          "stocks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StockDto"
            }
          },
          "stockTransactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StockTransactionDto"
            }
          },
          "storageDepartments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StorageDepartmentDto"
            }
          }
        }
      },
      "StorageGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "StorageGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "storageId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StorageModeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "AvgUpdOnAdd",
          "FIFO"
        ]
      },
      "StorageTransferDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "storageTransferId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "storageTransferIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageTransferId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "storageId_FromExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId_From for the current ExternalSystem",
            "nullable": true
          },
          "storageId_ToExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId_To for the current ExternalSystem",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "regBy_EmployeeId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "registeredTimeUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "storageId_From": {
            "type": "integer",
            "description": "Reference to Storage  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "storageId_To": {
            "type": "integer",
            "description": "Reference to Storage  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_PostProcessNeeded": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemStorageTransfers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStorageTransferDto"
            }
          }
        }
      },
      "StorageTransferUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "storageTransferId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageTransferIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemStorageTransfers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStorageTransferUpsertResultDto"
            }
          }
        }
      },
      "StorageUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemStorages": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemStorageUpsertResultDto"
            }
          },
          "stocks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StockUpsertResultDto"
            }
          },
          "stockTransactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StockTransactionUpsertResultDto"
            }
          },
          "storageDepartments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/StorageDepartmentUpsertResultDto"
            }
          }
        }
      },
      "SupplierDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierId for the current ExternalSystem",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "description": "Reference to Country  \r\n__When creating records:__ ___Mandatory___  \r\nType: string (Max: 2)",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "supplierName": {
            "type": "string",
            "description": "Type: string? (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "Type: int?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemSuppliers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierDto"
            }
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          }
        }
      },
      "SupplierGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SupplierGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SupplierIndustryTypeDto": {
        "type": "object",
        "description": "Represents a supplier given a specific industry type. In Visma Contracting, this was termed \"Grossist\".",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierId for the current ExternalSystem",
            "nullable": true
          },
          "customerNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "defaultUnknown_ProductSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "isCustom": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isDefaultForIndustryType": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "markupForNewDiscountGroups": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Type: short?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "organizationNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "priceCalculationBase": {
            "type": "boolean",
            "description": "0=CostPrice  \r\n1=ListPrice  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "priceLastUpdateDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "description": "Reference to Supplier  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_IsTemplateActivated": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_IsTemplateRow": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "useOtherCurrency": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "default_PurchaseAgreementId": {
            "type": "integer",
            "description": "Reference to PurchaseAgreement (directly updateable through Default_PurchaseAgreement)  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "default_PurchaseAgreement": {
            "$ref": "#/components/schemas/PurchaseAgreementDto"
          },
          "externalSystemSupplierIndustryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierIndustryTypeDto"
            }
          },
          "purchaseAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PurchaseAgreementDto"
            }
          }
        }
      },
      "SupplierIndustryTypeFtpInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "supplierIndustryTypeFtpInfoId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "autoImport": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "directoryPath": {
            "type": "string",
            "description": "Type: string? (Max: 200)",
            "nullable": true
          },
          "fileMask": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "ftpLastCheckedUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "maxDownloadTryCount": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 3___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "maxImportTryCount": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 3___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Type: string? (Max: 250)",
            "nullable": true
          },
          "server": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: Name",
            "nullable": true
          },
          "enum_FileDownloadModeId": {
            "$ref": "#/components/schemas/FileDownloadModeEnum"
          },
          "enum_ImportFormatId": {
            "$ref": "#/components/schemas/ImportFormatEnum"
          },
          "enum_ImportTypeId": {
            "$ref": "#/components/schemas/ImportTypeEnum"
          }
        }
      },
      "SupplierIndustryTypeFtpInfoUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "supplierIndustryTypeFtpInfoId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "SupplierIndustryTypeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SupplierIndustryTypeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SupplierIndustryTypePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SupplierIndustryTypeProductDeactivateParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ignoreProductsUsedAfterUTC": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ignoreProductsInUse": {
            "type": "boolean",
            "nullable": true
          },
          "ignoreProductsInUseLast12Months": {
            "type": "boolean",
            "nullable": true
          },
          "ignoreProductsOnSupplierInvoice": {
            "type": "boolean",
            "nullable": true
          },
          "ignoreProductsOnSupplierInvoiceLast12Months": {
            "type": "boolean",
            "nullable": true
          },
          "simulationMode": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SupplierIndustryTypeProductDeactivateResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalAffected": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inactiveOnly": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "simulated": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SupplierIndustryTypeProductReactivateParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "resetInactive": {
            "type": "boolean",
            "nullable": true
          },
          "simulationMode": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SupplierIndustryTypeProductReactivateResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalAffected": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "inactiveReset": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "simulated": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SupplierIndustryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "default_PurchaseAgreement": {
            "$ref": "#/components/schemas/PurchaseAgreementUpsertResultDto"
          },
          "externalSystemSupplierIndustryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierIndustryTypeUpsertResultDto"
            }
          },
          "purchaseAgreements": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PurchaseAgreementUpsertResultDto"
            }
          }
        }
      },
      "SupplierInvoiceAttachmentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "supplierInvoiceAttachmentId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AttachmentId for the current ExternalSystem",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "description": "Reference to Attachment  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "supplierInvoiceId": {
            "type": "integer",
            "description": "Reference to SupplierInvoice  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SupplierInvoiceAttachmentUploadDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierInvoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "attachmentCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internal": {
            "type": "boolean",
            "nullable": true
          },
          "revisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SupplierInvoiceAttachmentUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "attachmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "attachmentIdExternal": {
            "type": "string",
            "nullable": true
          },
          "supplierInvoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "SupplierInvoiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "supplierInvoiceId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 500)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "isCreditNote": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "lineCount": {
            "type": "integer",
            "description": "The number of original lines on the supplier invoice. Used for verifying imported data.  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "reviewed": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sum": {
            "type": "number",
            "description": "Original sum from the supplier invoice. Used for verifying that we have transferred the complete invoice to Contracting.  \r\nType: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "supplierCustomerNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "description": "Reference to Supplier  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "supplierNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "syncRetry": {
            "type": "boolean",
            "description": "Set to true to allow retry of a failed sync. Typically, supplier invoices may be missing assignment references, have invalid line specification, missing default fallback products or similar preventing supplier invoice import. Set this bit to retry if conditions change.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_PostProcessNeeded": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "voucherNumber": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "enum_SupplierInvoiceStatusId": {
            "$ref": "#/components/schemas/SupplierInvoiceStatusEnum"
          },
          "externalSystemSupplierInvoices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierInvoiceDto"
            }
          },
          "productNotes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductNoteDto"
            }
          },
          "supplierInvoiceAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SupplierInvoiceAttachmentDto"
            }
          },
          "supplierInvoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SupplierInvoiceLineDto"
            }
          }
        }
      },
      "SupplierInvoiceGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SupplierInvoiceGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierInvoiceId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SupplierInvoiceLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "supplierInvoiceLineId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceLineIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceLineId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "customerIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CustomerId for the current ExternalSystem",
            "nullable": true
          },
          "departmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to DepartmentId for the current ExternalSystem",
            "nullable": true
          },
          "dimensionValueId_1External": {
            "type": "string",
            "description": "External ID corresponding to DimensionValueId_1 for the current ExternalSystem",
            "nullable": true
          },
          "ledgerAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to LedgerAccountId for the current ExternalSystem",
            "nullable": true
          },
          "productIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductId for the current ExternalSystem",
            "nullable": true
          },
          "productSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "storageIdExternal": {
            "type": "string",
            "description": "External ID corresponding to StorageId for the current ExternalSystem",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierInvoiceId for the current ExternalSystem",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "assignmentNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "costPrice": {
            "type": "number",
            "description": "Real cost price per item, including any discounts.  \r\nType: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "costPricePurchaseAgreement": {
            "type": "number",
            "description": "Calculated value updated the supplier invoices based on our current agreement with the supplier. It is intended to use for comparison with CostPrice, to detect if we are indeed getting the agreed upon price.  \r\nType: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "description": "Reference to Customer  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "customerNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "departmentId": {
            "type": "integer",
            "description": "Reference to Department  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "departmentNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "dimensionValueId_1": {
            "type": "integer",
            "description": "Reference to DimensionValue  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "dimensionValueTxt_1": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "doNotForwardInvoice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "fallbackValueUsed": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "ledgerAccountId": {
            "type": "integer",
            "description": "Reference to LedgerAccount  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "ledgerAccountNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "Reference to Product  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "Type: string? (Max: 250)  \r\nValidation: Name",
            "nullable": true
          },
          "productNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "productSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to ProductSupplierIndustryType  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "projectAccountId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "projectAccountNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "storageId": {
            "type": "integer",
            "description": "Reference to Storage  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "storageNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "vATRateId": {
            "type": "integer",
            "description": "Reference to VATRate  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "vatRateTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "supplierInvoiceId": {
            "type": "integer",
            "description": "Reference to SupplierInvoice  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "externalSystemSupplierInvoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierInvoiceLineDto"
            }
          }
        }
      },
      "SupplierInvoiceLineGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SupplierInvoiceLineGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierInvoiceLineId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SupplierInvoiceLineUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "supplierInvoiceLineId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceLineIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemSupplierInvoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierInvoiceLineUpsertResultDto"
            }
          }
        }
      },
      "SupplierInvoiceProductMatchDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "supplierInvoiceProductMatchId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "industryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to IndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierId for the current ExternalSystem",
            "nullable": true
          },
          "supplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to SupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "target_ProductSupplierIndustryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Target_ProductSupplierIndustryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "doNotForwardInvoice": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "industryTypeId": {
            "type": "integer",
            "description": "Reference to IndustryType  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          },
          "productNumberTxt": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "description": "Reference to Supplier  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "supplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to SupplierIndustryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "target_ProductName": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "target_ProductSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Reference to ProductSupplierIndustryType  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "vATRateId": {
            "type": "integer",
            "description": "Reference to VATRate  \r\nType: byte?",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SupplierInvoiceProductMatchUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "supplierInvoiceProductMatchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "SupplierInvoiceReverseParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supplierInvoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "voucherNo": {
            "type": "string",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SupplierInvoiceReverseResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "productNoteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SupplierInvoiceStatusEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "Registered",
          "Approved",
          "Journaled",
          "Historic",
          "Deleted"
        ]
      },
      "SupplierInvoiceUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "supplierInvoiceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemSupplierInvoices": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierInvoiceUpsertResultDto"
            }
          },
          "productNotes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ProductNoteUpsertResultDto"
            }
          },
          "supplierInvoiceAttachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SupplierInvoiceAttachmentUpsertResultDto"
            }
          },
          "supplierInvoiceLines": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SupplierInvoiceLineUpsertResultDto"
            }
          }
        }
      },
      "SupplierUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemSuppliers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemSupplierUpsertResultDto"
            }
          },
          "addresses": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddressUpsertResultDto"
            }
          }
        }
      },
      "SyncStatusEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "TransferPending",
          "TransferStarted",
          "TransferCompleted",
          "SaveCompleted",
          "SaveFailed",
          "SaveAborted",
          "TranferFailed",
          "TranferAborted"
        ]
      },
      "SystemNotificationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "systemNotificationId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "detailDescriptionURL": {
            "type": "string",
            "description": "Type: string? (Max: 500)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "entityNavigationURL": {
            "type": "string",
            "description": "Type: string? (Max: 500)",
            "nullable": true
          },
          "isDone": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isImportant": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isReadByUser": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "isTask": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string",
            "nullable": true
          },
          "showFromUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "showToUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)",
            "nullable": true
          },
          "enum_NotificationTypeId": {
            "$ref": "#/components/schemas/NotificationTypeEnum"
          }
        }
      },
      "SystemNotificationUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "systemNotificationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "TeamDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "teamId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 50)  \r\nValidation: Name",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "teamNumber": {
            "type": "integer",
            "description": "Type: int?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "teamEmployees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TeamEmployeeDto"
            }
          }
        }
      },
      "TeamEmployeeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "teamEmployeeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "teamId": {
            "type": "integer",
            "description": "Reference to Team  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "TeamEmployeeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "teamEmployeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "TeamUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "teamEmployees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TeamEmployeeUpsertResultDto"
            }
          }
        }
      },
      "TextEncodingEnum": {
        "type": "string",
        "enum": [
          "UTF8",
          "UTF8_BOM",
          "UTF16",
          "UTF16_BOM",
          "UTF16_BE",
          "UTF16_BE_BOM",
          "Windows_1252",
          "ISO_8859_1",
          "Latin1",
          "ASCII",
          "CP_850"
        ]
      },
      "TimeZoneEnum": {
        "type": "string",
        "enum": [
          "UTC",
          "WesternEurope"
        ]
      },
      "TokenDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TokenResponseDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "textId": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateOwnProfileCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "defaultLanguage": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateSyncRequestedStatusToCacheRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "integrationName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "isInactive": {
            "type": "boolean"
          },
          "isClientAdmin": {
            "type": "boolean"
          },
          "isPayrollUser": {
            "type": "boolean"
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean"
          }
        }
      },
      "UpdateUserResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sys_RowState": {
            "type": "string",
            "nullable": true
          },
          "textId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpsertCustomInvoiceLineCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineId": {
            "type": "integer",
            "format": "int32"
          },
          "invoiceLineCode": {
            "type": "string",
            "nullable": true
          },
          "invoiceLineText": {
            "type": "string",
            "nullable": true
          },
          "quantityInvoice": {
            "type": "number",
            "format": "decimal"
          },
          "costPrice": {
            "type": "number",
            "format": "decimal"
          },
          "salesPriceInvoice": {
            "type": "number",
            "format": "decimal"
          },
          "surchargePercentInvoice": {
            "type": "number",
            "format": "decimal"
          },
          "listPrice": {
            "type": "number",
            "format": "decimal"
          },
          "customerPrice": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "UserCommandDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "isClientWide": {
            "type": "boolean"
          },
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "userCommandId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "context": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "cwUserId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Type: string? (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "shortCutKey": {
            "type": "string",
            "description": "Type: string? (Max: 50)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "toolbarIcon": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "enum_CommandId": {
            "$ref": "#/components/schemas/CommandEnum"
          }
        }
      },
      "UserCommandUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "userCommandId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          }
        }
      },
      "UserRoleDto": {
        "type": "object",
        "description": "Auth.Write:ClientAdmin",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "userRoleId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "userRoleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to UserRoleId for the current ExternalSystem",
            "nullable": true
          },
          "roleIdExternal": {
            "type": "string",
            "description": "External ID corresponding to RoleId for the current ExternalSystem",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "description": "Reference to Role  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "description": "Reference to User  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "externalSystemUserRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemUserRoleDto"
            }
          }
        }
      },
      "UserRoleUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "userRoleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userRoleIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemUserRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemUserRoleUpsertResultDto"
            }
          }
        }
      },
      "VATRateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "vATRateId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "vATRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to VATRateId for the current ExternalSystem",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Type: string? (Max: 10)",
            "nullable": true
          },
          "defaultUnknown_ProductSupplierIndustryTypeId": {
            "type": "integer",
            "description": "Type: int?",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "ratePercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemVATRates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemVATRateDto"
            }
          }
        }
      },
      "VATRateGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "VATRateGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vatRateId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "VATRateUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "vatRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "vatRateIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemVATRates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemVATRateUpsertResultDto"
            }
          }
        }
      },
      "WageCodeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageCodeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeId for the current ExternalSystem",
            "nullable": true
          },
          "cost_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Cost_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "costSurcharge_ProjectAccountIdExternal": {
            "type": "string",
            "description": "External ID corresponding to CostSurcharge_ProjectAccountId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "wageGroupIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageGroupId for the current ExternalSystem",
            "nullable": true
          },
          "approveRequired": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "assignmentUpdate": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "cost_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "costSurcharge_ProjectAccountId": {
            "type": "integer",
            "description": "Reference to ProjectAccount  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "fieldsolutionServiceExport": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "isWorkTime": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "payrollExport": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = true___  \r\nType: bool",
            "nullable": true
          },
          "pieceworkActive": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "priceOnly": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "quantityOnly": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "surchargePercent": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageCodeName": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: Name",
            "nullable": true
          },
          "wageCodeNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategory  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "wageGroupId": {
            "type": "integer",
            "description": "Reference to WageGroup  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "wageRatePercent": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "enum_PieceworkTypeId": {
            "$ref": "#/components/schemas/PieceworkTypeEnum"
          },
          "enum_WageCodeInvoiceRuleId": {
            "$ref": "#/components/schemas/WageCodeInvoiceRuleEnum"
          },
          "enum_WageCodeTypeId": {
            "$ref": "#/components/schemas/WageCodeTypeEnum"
          },
          "externalSystemWageCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageCodeDto"
            }
          }
        }
      },
      "WageCodeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WageCodeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageCodeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WageCodeInvoiceRuleEnum": {
        "type": "string",
        "enum": [
          "Invoice",
          "NoInvoicing",
          "InvoiceOnIndependentAgreement"
        ]
      },
      "WageCodePreProcessDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageCodeId": {
            "type": "integer",
            "format": "int32"
          },
          "wageCodeNumber": {
            "type": "integer",
            "format": "int32"
          },
          "sys_Deactivated": {
            "type": "boolean"
          }
        }
      },
      "WageCodeReportCategoryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeReportCategoryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "reportText": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageCodeReportCategoryNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryTypeId": {
            "type": "integer",
            "description": "Reference to WageCodeReportCategoryType  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "externalSystemWageCodeReportCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageCodeReportCategoryDto"
            }
          }
        }
      },
      "WageCodeReportCategoryGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WageCodeReportCategoryGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageCodeReportCategoryId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WageCodeReportCategoryPreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageCodeReportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WageCodeReportCategoryTypeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "wageCodeReportCategoryTypeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryTypeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeReportCategoryTypeId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 100)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "reportText": {
            "type": "string",
            "description": "Type: string? (Max: 100)",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "externalSystemWageCodeReportCategoryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageCodeReportCategoryTypeDto"
            }
          },
          "wageCodeReportCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WageCodeReportCategoryDto"
            }
          }
        }
      },
      "WageCodeReportCategoryTypeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WageCodeReportCategoryTypeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageCodeReportCategoryTypeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WageCodeReportCategoryTypeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "wageCodeReportCategoryTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryTypeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemWageCodeReportCategoryTypes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageCodeReportCategoryTypeUpsertResultDto"
            }
          },
          "wageCodeReportCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WageCodeReportCategoryUpsertResultDto"
            }
          }
        }
      },
      "WageCodeReportCategoryUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "wageCodeReportCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeReportCategoryIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemWageCodeReportCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageCodeReportCategoryUpsertResultDto"
            }
          }
        }
      },
      "WageCodeTypeEnum": {
        "type": "string",
        "enum": [
          "NotSet",
          "OrdinaryWage",
          "Overtime",
          "VariousExtra",
          "CarExpenses",
          "TravelExpenses",
          "Diet"
        ]
      },
      "WageCodeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemWageCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageCodeUpsertResultDto"
            }
          }
        }
      },
      "WageGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "wageGroupId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageGroupIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageGroupId for the current ExternalSystem",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageGroupName": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)  \r\nValidation: Name",
            "nullable": true
          },
          "wageGroupNumber": {
            "type": "integer",
            "description": "Type: short?  \r\nValidation: PositiveNumber",
            "format": "int32",
            "nullable": true
          },
          "externalSystemWageGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageGroupDto"
            }
          }
        }
      },
      "WageGroupGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WageGroupGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageGroupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WageGroupUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "wageGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageGroupIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemWageGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageGroupUpsertResultDto"
            }
          }
        }
      },
      "WagePeriodDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "wagePeriodId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "wagePeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WagePeriodId for the current ExternalSystem",
            "nullable": true
          },
          "projectPeriodIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectPeriodId for the current ExternalSystem",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: string (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "endDateUTC": {
            "type": "string",
            "description": "Type: DateTime?  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "periodNumber": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: byte",
            "format": "int32",
            "nullable": true
          },
          "periodYear": {
            "type": "integer",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "projectPeriodFromTimeRegistration": {
            "type": "boolean",
            "description": "__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "projectPeriodId": {
            "type": "integer",
            "description": "Reference to ProjectPeriod  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "startDateUTC": {
            "type": "string",
            "description": "__When creating records:__ ___Mandatory___  \r\nType: DateTime  \r\nValidation: Unvalidated",
            "format": "date-time",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "enum_WagePeriodStatusId": {
            "$ref": "#/components/schemas/WagePeriodStatusEnum"
          },
          "externalSystemWagePeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWagePeriodDto"
            }
          }
        }
      },
      "WagePeriodGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WagePeriodGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wagePeriodId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WagePeriodStatusEnum": {
        "type": "string",
        "enum": [
          "Waiting",
          "Registered",
          "ReadyForTransfer",
          "Transferred",
          "Calculated",
          "Completed"
        ]
      },
      "WagePeriodUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "wagePeriodId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wagePeriodIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemWagePeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWagePeriodUpsertResultDto"
            }
          }
        }
      },
      "WageRateDto": {
        "type": "object",
        "description": "If used, replaces rate + social cost as cost on projects",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "wageRateId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageRateIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageRateId for the current ExternalSystem",
            "nullable": true
          },
          "jobCategoryIdExternal": {
            "type": "string",
            "description": "External ID corresponding to JobCategoryId for the current ExternalSystem",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "wageGroupIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageGroupId for the current ExternalSystem",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Type: string? (Max: 200)  \r\nValidation: MultilineText",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "description": "Reference to JobCategory  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "projectCost": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "description": "__When creating records:__ ___Default value = 0___  \r\nType: decimal",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageGroupId": {
            "type": "integer",
            "description": "Reference to WageGroup  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalSystemWageRates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageRateDto"
            }
          }
        }
      },
      "WageRateEmployeeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_FieldsContainingNull": {
            "type": "array",
            "description": "Workaround for setting explicit null in fields even if the fields are missing from the input JSON. \r\nThis can be an issue due to lack of control of generated accessor classes from e.g. NSwag.\r\nThis is equivalent to setting the fields explicitly to null, and indicates that the intent is to set a null value\r\nin the field.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "description": "Optional tag which will be returned with the upsert results and webhook events. Can be used to aid with entity identification. The tag is not persisted.",
            "nullable": true
          },
          "wageRateEmployeeId": {
            "type": "integer",
            "description": "__Primary key__  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "wageRateEmployeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageRateEmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentIdExternal": {
            "type": "string",
            "description": "External ID corresponding to AssignmentId for the current ExternalSystem",
            "nullable": true
          },
          "employeeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to EmployeeId for the current ExternalSystem",
            "nullable": true
          },
          "next_WageCodeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to Next_WageCodeId for the current ExternalSystem",
            "nullable": true
          },
          "projectIdExternal": {
            "type": "string",
            "description": "External ID corresponding to ProjectId for the current ExternalSystem",
            "nullable": true
          },
          "wageCodeIdExternal": {
            "type": "string",
            "description": "External ID corresponding to WageCodeId for the current ExternalSystem",
            "nullable": true
          },
          "assignmentId": {
            "type": "integer",
            "description": "Reference to Assignment  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "description": "Reference to Employee  \r\n__When creating records:__ ___Mandatory___  \r\nType: int",
            "format": "int32",
            "nullable": true
          },
          "next_WageCodeId": {
            "type": "integer",
            "description": "Reference to WageCode  \r\nType: short?",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "description": "Reference to Project  \r\nType: int?",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "description": "Type: decimal?",
            "format": "decimal",
            "nullable": true
          },
          "sys_Deactivated": {
            "type": "boolean",
            "description": "The row is deactivated (soft-deleted).  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Historic": {
            "type": "boolean",
            "description": "The row is historic, and likely of little interest for some integrated systems such as SpeedyCraft  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "sys_Incomplete": {
            "type": "boolean",
            "description": "The row is incomplete, and should be disregarded in business logic and outgoing integrations.  \r\n__When creating records:__ ___Default value = false___  \r\nType: bool",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "description": "Reference to WageCode  \r\n__When creating records:__ ___Mandatory___  \r\nType: short",
            "format": "int32",
            "nullable": true
          },
          "externalSystemWageRateEmployees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageRateEmployeeDto"
            }
          }
        }
      },
      "WageRateEmployeeGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WageRateEmployeeGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageRateEmployeeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WageRateEmployeePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageRateEmployeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "next_WageCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WageRateEmployeeUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "wageRateEmployeeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageRateEmployeeIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemWageRateEmployees": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageRateEmployeeUpsertResultDto"
            }
          }
        }
      },
      "WageRateGetNotSyncedParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "top": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fromId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "externalSystemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "toRowVersion": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "WageRateGetNotSyncedResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageRateId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WageRatePreProcessParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wageRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "jobCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "projectId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageGroupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WageRateUpsertResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "performedAction": {
            "$ref": "#/components/schemas/PerformedAction"
          },
          "wasCreated": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "upsertTag": {
            "type": "string",
            "nullable": true
          },
          "wageRateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "wageRateIdExternal": {
            "type": "string",
            "nullable": true
          },
          "sys_RowState": {
            "$ref": "#/components/schemas/RowStateEnum"
          },
          "externalSystemWageRates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalSystemWageRateUpsertResultDto"
            }
          }
        }
      },
      "WidgetData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "subTitle": {
            "type": "string",
            "nullable": true
          },
          "keyValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/DataValue"
          },
          "keys": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "values": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "decimal"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "Authentication using OAuth2 \"bearer {token}\"",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://connect-extest.devinco.com/connect/authorize",
            "tokenUrl": "https://connect-extest.devinco.com/connect/token",
            "scopes": {
              "contracting:api": "Scope for the access token request"
            }
          }
        }
      }
    }
  }
}